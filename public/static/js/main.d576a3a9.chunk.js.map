{"version":3,"sources":["serviceWorker.js","BaseUrl.js","functions/Functions.js","routes/RestaurantRoute.js","contexts/Settings.js","resources/install/Welcome.js","resources/install/InstallPermission.js","resources/install/DbSetup.js","resources/install/ImportDb.js","resources/install/InstallationUser.js","resources/install/InstallationCongratulation.js","resources/common/Refresh.js","contexts/User.js","contexts/Restaurant.js","contexts/Food.js","resources/common/Login.js","resources/common/ForgetPw.js","resources/common/SetNewPw.js","resources/common/NotFound.js","resources/common/NoPermission.js","resources/restaurant/public/RestaurantLanding.js","resources/restaurant/auth/RestaurantHome.js","resources/restaurant/auth/profile/UpdateProfile.js","resources/restaurant/auth/workPeriod/WorkPeriod.js","resources/restaurant/auth/customer/Customers.js","resources/restaurant/auth/pos/calc/Engine.js","resources/restaurant/auth/pos/calc/Display.js","resources/restaurant/auth/pos/calc/Button.js","resources/restaurant/auth/pos/calc/Calculator.js","resources/restaurant/auth/pos/Pos.js","resources/restaurant/auth/pos/Submitted.js","resources/restaurant/auth/pos/Settled.js","resources/restaurant/auth/kitchen/Kitchen.js","resources/restaurant/auth/orderHistory/OrderHistories.js","resources/restaurant/auth/reports/ReportSidebar.js","resources/restaurant/auth/reports/Dashboard.js","resources/restaurant/auth/reports/Daily.js","resources/restaurant/auth/reports/Monthly.js","resources/restaurant/auth/reports/ItemWise.js","resources/restaurant/auth/reports/GroupWise.js","resources/restaurant/auth/reports/BranchWise.js","resources/restaurant/auth/reports/UserWise.js","resources/restaurant/auth/reports/DeptWise.js","resources/restaurant/auth/reports/ServiceChargeWise.js","resources/restaurant/auth/reports/DiscountWise.js","resources/restaurant/auth/manage/ManageSidebar.js","resources/restaurant/auth/manage/food/GroupCrud.js","resources/restaurant/auth/manage/food/VariationCrud.js","resources/restaurant/auth/manage/food/PropertyCrud.js","resources/restaurant/auth/manage/food/PropertyItemCrud.js","resources/restaurant/auth/manage/food/FoodItemCrud.js","resources/restaurant/auth/manage/food/AllItemList.js","resources/restaurant/auth/manage/settings/Currency.js","resources/restaurant/auth/manage/settings/Lang.js","resources/restaurant/auth/manage/settings/Translation.js","resources/restaurant/auth/manage/settings/Smtp.js","resources/restaurant/auth/manage/settings/General.js","resources/restaurant/auth/manage/user/Permissions.js","resources/restaurant/auth/manage/user/Waiter.js","resources/restaurant/auth/manage/user/CustomerCrud.js","resources/restaurant/auth/manage/user/AdminStaffCrud.js","resources/restaurant/auth/manage/restaurantDetails/BranchCrud.js","resources/restaurant/auth/manage/restaurantDetails/TableCrud.js","resources/restaurant/auth/manage/restaurantDetails/DeptTagCrud.js","resources/restaurant/auth/manage/restaurantDetails/PaymentTypeCrud.js","resources/components/Navbar.js","resources/components/Footer.js","App.js","i18next.js","index.js"],"names":["Boolean","window","location","hostname","match","BASE_URL","protocol","port","href","includes","cookies","Cookies","getCookie","undefined","get","checkPermission","authUserPermissions","permission","formatPrice","price","JSON","parse","localStorage","getItem","rate","toFixed","currencySymbolLeft","localCurrency","alignment","symbol","currencySymbolRight","getSystemSettings","settingsArray","checkType","find","item","name","value","deleteCookie","url","axios","headers","Authorization","then","reload","remove","path","catch","restaurantMenuLink","img","imgAlt","icon","infoTextColor","info","title","redirectTo","className","to","src","alt","managePageHrefLinkMobile","menuName","pathname","state","exact","managePageHrefLink","pagination","data","customFunction","pageCount","last_page","initialPage","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page","selected","breakLabel","breakClassName","containerClassName","pageClassName","previousLabel","nextLabel","pageLinkClassName","previousClassName","nextClassName","activeClassName","activeLinkClassName","paginationLoading","style","height","modalLoading","count","color","highlightColor","tableLoading","pageLoading","showingData","from","total","searchedShowingData","allData","list","length","AdminRoute","this","props","children","rest","render","alert","Component","SettingsContext","React","createContext","SettingsProvider","useState","loading","setLoading","dataPaginating","setDataPaginating","permissionGroup","setPermissionGroup","permissionGroupForSearch","setPermissionGroupForSearch","permissions","setPermissions","languageList","setLanguageList","navLanguageList","setNavLanguageList","languageListForSearch","setLanguageListForSearch","currencyList","setCurrencyList","navCurrencyList","setNavCurrencyList","currencyListForSearch","setCurrencyListForSearch","generalSettings","setGeneralSettings","MAIL_MAILER","MAIL_HOST","MAIL_PORT","MAIL_USERNAME","MAIL_PASSWORD","MAIL_ENCRYPTION","MAIL_FROM_ADDRESS","MAIL_FROM_NAME","smtp","setSmtp","useEffect","a","checkInstall","getLanguages","getCurrency","getSettings","getSmtp","getPermissionGroups","fetchData","result","langUrl","res","smtpUrl","permissionGroupUrl","currencyUrl","document","getElementById","Provider","setPaginatedCurrencies","pageNo","error","setPaginatedLanguages","setPaginatedGropus","Welcome","useTranslation","t","useHistory","useContext","Helmet","id","data-simplebar","key","InstallPermission","php_version","curl_status","env_status","theData","setTheData","handleCheckPermission","setTimeout","err","DbSetup","history","DB_HOST","DB_PORT","DB_DATABASE","DB_USERNAME","DB_PASSWORD","dbData","setDbData","handleChange","e","target","handleCheckDbConnection","push","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","onSubmit","preventDefault","post","placeholder","onChange","required","rel","type","ImportDb","class","onClick","InstallationUser","email","phn_no","password","password_confirmation","details","setDetails","for","InstallationCongratulation","withRouter","replace","UserContext","UserProvider","authUserInfo","setAuthUserInfo","waiterList","setWaiterList","waiterForSearch","setWaiterForSearch","customerList","setCustomerList","customerForSearch","setCustomerForSearch","adminStaffList","setAdminStaffList","adminStaffForSearch","setAdminStaffListforSearch","getAuthUser","getWaiter","getCustomer","getAdminStaff","is_banned","waiterUrl","customerUrl","adminStaffUrl","setPaginatedWaiter","setPaginatedCustomer","setPaginatedAdminStaff","RestaurantContext","RestaurantProvider","branchList","setBranchList","branchForSearch","setBranchforSearch","tableList","setTableList","tableForSearch","setTableforSearch","deptTagList","setDeptTagList","deptTagForSearch","setDeptTagForSearch","paymentTypeList","setPaymentTypeList","paymentTypeForSearch","setPaymentTypeforSearch","workPeriodList","setWorkPeriodList","workPeriodForSearch","setWorkPeriodListForSearch","submittedOrders","setSubmittedOrders","submittedOrdersForSearch","setSubmittedOrdersForSearch","settledOrders","setSettledOrders","settledOrdersForSearch","setSettledOrdersForSearch","kithcenNewOrders","setKithcenNewOrders","allOrders","setAllOrders","allOrdersForSearch","setAllOrdersForSearch","getBranch","getTable","getDeptTag","getPaymentType","getWorkPeriod","branchUrl","paymentTypeUrl","deptTagUrl","setPaginatedBranch","setPaginatedTable","setPaginatedDeptTag","setPaginatedPaymentType","setPaginatedWorkPeriod","getSubmittedOrders","setPaginatedSubmittedOrders","getSettledOrders","setPaginatedSettledOrders","getKitchenNewOrders","getAllOrders","setPaginatedAllOrders","FoodContext","FoodProvider","foodList","setFoodList","foodForSearch","setFoodForSearch","foodGroupList","setFoodGroupList","foodGroupForSearch","setFoodGroupforSearch","foodUnitList","setFoodUnitList","foodUnitForSearch","setFoodUnitforSearch","variationList","setVariationList","variationForSearch","setVariationForSearch","propertyGroupList","setPropertyGroupList","propertyGroupForSearch","setPropertyGroupForSearch","propertyItemList","setPropertyItemList","propertyItemForSearch","setPropertyItemForSearch","propertyItemGroup","setPropertyItemGroup","getFood","getFoodGroup","getFoodUnit","getVariation","getPropertyGroup","foodItemUrl","foodGroupUrl","foodUnitUrl","variationUrl","propertyGroupUrl","setPaginatedFood","setPaginatedFoodGroup","setPaginatedFoodUnit","setPaginatedVariation","setPaginatedPropertyGroup","getPropertyItem","slug","propertyItemUrl","Login","remember_me","install_check_reload","install_no","credentials","setCredentials","handleJquery","checkAuth","hoverLayer","$","objImgOne","mousemove","valueX","pageX","valueY","pageY","css","transform","handleCredentials","handleSubmit","access_token","_user","slice","sbb","frr","xss","date","Date","setFullYear","getFullYear","set","expires","sameSite","logo","backgroundColor","backgroundImage","autoComplete","ForgetPw","success","SetNewPw","token","useParams","response","errors","forEach","NotFound","NoPermission","RestaurantLanding","UpdateProfile","image","edit","uploading","newAdminStaff","setAdminStaff","handleSetNewAdminStaff","handleLogout","formData","FormData","append","htmlFor","WorkPeriod","weekday","month","user_type","branch_id","newWorkPeriod","setNewWorkPeriod","searched","searchedWorkPeriod","setSearchedWorkPeriod","handleSaveNewWorkPeriod","getDay","getDate","getMonth","time","getTime","started_at","millisToMinutesAndHours","millis","minutes","Math","floor","hours","seconds","handleDeleteConfirmation","confirmAlert","customUI","onClose","handleEndWorkPeriod","ended_at","aria-hidden","searchInput","toLowerCase","searchedList","filter","lowerCaseItemBranchName","branch_name","lowerCaseItemUserName","started_by","lowerCaseItemDate","lowerCaseItemUserName2","ended_by","options","components","makeAnimated","getOptionLabel","option","getOptionValue","classNamePrefix","branch","maxMenuHeight","scope","colSpan","map","index","current_page","per_page","format","parseInt","Customers","address","selectedBranch","editSlug","newCustomer","setNewCustomer","searchedCustomer","setSearchedCustomer","handleSetNewCustomer","handleSetEdit","customer","selectedOptionForBranch","branchItem","handleDeleteCustomer","data-dismiss","aria-label","checkBranch","lowerCaseItemName","lowerCaseItemEmail","lowerCaseItemPhnNo","lowerCaseItemAddress","lowerCaseItemBranch","data-toggle","data-target","Engine","number","previousInput","previousNumber","previousOperation","repeatNumber","repeatOperation","clearable","OperationEnum","addition","subtraction","multiplication","division","percentage","sign","equal","allClear","input","isOperation","containDecimalPoint","removeZero","handleBaiscMathOperation","handlePercentageOperation","handleSignOperation","handleAllClearOperation","clear","handleClearOperation","handleEqualOperation","updatePreviousStatus","temp","add","subtract","muliply","divide","changeSign","operation","perform","isDigit","handleDigitInput","handleOperationInput","isNaN","Object","values","parseFloat","toString","substr","Display","display","width","divRef","createRef","spanRef","previousWidth","setState","innerWidth","addEventListener","updateDimensions","bind","removeEventListener","ref","divWidth","current","clientWidth","Button","keyMap","1","2","3","4","5","6","7","8","9","0","EQUAL","MULTIPLY","ADD","SUBTRACT","DIVIDE","AC","DOT","PERCENT","ENTER","handlers","Calculator","engine","handleButtonClick","calculate","Pos","foodGroup","items","selectedItem","variations","properties","foodItem","setFoodItem","calculatorMenu","setCalculatorMenu","newOrder","setNewOrder","activeItemInOrder","setActiveItemInOrder","selectedVariation","setSelectedVariation","selectedPropertyGroup","setSelectedPropertyGroup","selectedProperties","setSelectedProperties","theSubTotal","setTheSubTotal","totalPayable","setTotalPaybale","paidMoney","setPaidMoney","returnMoneyUsd","setReturnMoneyUsd","theVat","setTheVat","newSettings","setNewSettings","theCustomers","theTables","theWaiters","orderDetailUsers","setOrderDetailusers","table","waiter","dept_tag","payment_type","payment_amount","total_guest","newCustomerInfo","serviceCharge","discount","orderDetails","setOrderDetails","tempItems","tempItem","food_group_id","has_variation","has_property","theBranch","theWorkPeriod","tempWorkPeriod","endAtNullItem","vat","workPeriod","handleOrderItem","tempFoodItem","oldOrderItems","newOrderItem","tempSelectedVariations","eachOldOrderItem","tempArray","variation","food_with_variation_id","quantity","random","totalPrice","play","handleOrderItemVariation","tempFoodItemVariation","newOrderItemTemp","checkChecked","variationItem","handleRemoveItemFromOrderList","removeIndex","selectedVariationItem","variationIndex","tempSelectedProperties","selectedPropertyItem","propertyIndex","tempSelectedPropertyGroup","selectedPropertyGroupItem","propertyGroupIndex","handleOrderItemQty","action","handleCancel","handleAddProperties","property","propertyItem","tempArrayPropertyGroup","tempPropertyArray","eachPropertyItem","property_group_id","newSelectedPropertyGroup","eachSelectedGroupArray","unique","Set","handleRemoveProperties","newSelectedProperties","allPropertyGroups","selectedProperty","theProperties","filterThis","groupItem","groupItemIndex","tempGroupArray","filterThisItem","pushThis","checkCheckedProperties","handlePropertyQty","tempPropertyItemsArray","newPropertyItemForQtyUpdate","checkCheckedPropertyQuantity","theItemTemp","showPriceOfEachOrderItem","itemIndex","orderItem","food_with_variation_price","getEachItemPrice","totalPropertyPrice","extra_price","allOrderItems","subTotal","tempVat","usdServiceCharge","usdDiscount","handleCalculatePaid","handleSetBranch","tempCustomers","eachCustomer","tempTables","eachTable","tempWaiters","eachWaiter","handleSetCustomer","handleNewCustomer","handleSetTable","handleSetWaiter","handleSetDeptTag","handleSetpaymentType","handleTotalGuest","handlePaymentTypeAmount","tempPaymentAmount","paymentAmount","paymentType","paidAmount","thePaymentArray","entries","eachPaymentItem","thePaymentType","paymentTypeItem","handleSubmitOrder","closeButton","axiosRequest","orderItems","handlePrint","handleSettleOrder","axiosRequestForSettle","componentRef","useRef","component2Ref","handleOnlyPrint","useReactToPrint","content","onAfterPrint","handleOnlyPrint2","handlePrint2","handleOrderSubmitSuccessful","printItem","printItemIndex","variation_name","thisIsGroup","theGroup","theItem","propertyName","checked","selectedGroup","singlePropertyGroup","eachItem","allow_multi_quantity","readOnly","orderListItem","orderListItemIndex","selectedItemTemp","tempSelectedItem","step","min","abs","aria-expanded","isMulti","backspaceRemovesValue","clearIndicator","eachPaymentType","paymentTypeIndex","mobileGroup","mobileGroupIndex","mobileItem","mobileItemIndex","zIndex","lowerCaseItemGroup","food_group","groupIndex","tempFoodItemIndex","paddingBottom","Submitted","settle","checkOrderDetails","setCheckOrderDetails","searchedOrder","setSearchedOrder","theReturnMoney","total_payable","handleSettleOrderAxiosReq","order_group_id","handleCancelOrderConfirmation","orderGroup","handleCancelOrder","is_accepted","is_settled","is_cancelled","paid_amount","orderedItems","thisItem","indexThisItem","food_item","thisIndex","is_cooking","is_ready","user_name","customer_name","dept_tag_name","table_name","waiter_name","order_bill","service_charge","lowerCaseItemToken","stringify","lowerCaseItemCustomer","lowerCaseItemTable","Settled","Kitchen","isFiltered","filterKey","groups","filterOrder","setFilterOrder","tempFoodGroups","unshift","handleAcceptOrReject","newState","newStateSearched","orderItemSearched","handleReadyConfirmation","handleReady","newSearchState","handleEachItemReady","orderGroupId","itemId","oldState","oldSearchedState","newItems","newItemsSearched","foodGrp","data-category","minHeight","OrderHistories","searchedOrders","setSearchedOrders","startDate","setStartDate","endDate","setEndDate","handleDeleteOrderConfirmation","handleDeleteOrder","handleBranchFilter","handleDateFilter","fromDate","toISOString","toDate","fromMilliseconds","toMilliseconds","itemDate","created_at","minWidth","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","shouldCloseOnSelect","ReportSidebar","posHasSub","posSub","on","slideDown","siblings","slideUp","addClass","removeClass","Reports","series","chart","dropShadow","enabled","top","left","blur","opacity","stroke","plotOptions","pie","donut","labels","show","showAlways","dataLabels","fill","pattern","states","hover","theme","palette","text","responsive","breakpoint","legend","donoutWithPattern","setDonoutWithPattern","setOptions","xaxis","categories","setChart","chartitem","setChartItem","getReport","dailyBranch","monthlyBranch","dailyGroup","monthlyItems","amount","formattedAmount","Daily","amountChart","setAmountChart","reportData","setReportData","getDaily","Monthly","getMonthly","showMonthYearPicker","getMonthlySelected","ItemWise","generatedReport","setGeneratedReport","getItemWiseSelected","GroupWise","getGroupWiseSelected","BranchWise","setBranch","handleBranch","getBranchWiseSelected","UserWise","theUser","setTheUser","handleUser","user","getUserWiseSelected","DeptWise","itemGroup","hasProperty","hasVariation","maxHeight","maxWidth","ServiceChargeWise","DiscountWise","ManageSidebar","GroupCrud","newFoodGroup","setNewFoodGroup","searchedFoodGroup","setSearchedFoodGroup","input_key","handleDeleteFoodGroup","VariationCrud","newVariation","setNewVariation","searchedVariation","setSearchedVariation","handleDeleteVariation","PropertyCrud","newPropertyGroup","setNewPropertyGroup","searchedPropertyGroup","setSearchedPropertyGroup","handleDeletePropertyGroup","PropertyItemCrud","propertySlug","extraPrice","newPropertyItem","setNewPropertyItem","searchedPropertyItem","setSearchedPropertyItem","handleSetNewPropertyItem","handleDeletePropertyItem","lowerCaseItemExtraPrice","FoodItemCrud","newItem","setNewItem","priceForVariations","setPriceForVariations","handleVariationPrice","foodItemAxios","pItem","slugArray","newVarItem","slugItem","files","AllItemList","newPrice","deletedVariations","priceAfterAllVariationDelete","setVariations","editItem","propertyGroup","newPropertyGroups","removeProperty","imageUpdate","newImage","foodItemEdit","setFoodItemEdit","searchedFoodItem","setSearchedFoodItem","handleDeleteFood","itemNewFoodGroup","deleteProperty","selectedGroups","property_groups","grpItem","foodItemId","deletedVariationsArray","newPriceArray","foodVariationUpdateUrl","disabled","deletedArray","deletedItem","tempDeletedArray","undoItem","Currency","code","editCode","newCurrency","setNewCurrency","newDefault","setNewDefault","searchedCurrencies","setSearchedCurrencies","handleSetNewCurrency","currency","handleDefault","handleDeleteCurrency","setItem","searchedLang","lowerCaseItemCode","is_default","offColor","Lang","editImage","newLang","setNewLang","searchedLanguages","setSearchedLanguages","handleSetNewLang","lang","handleDeleteLanguage","lang_url","Translation","toTranslate","setToTranslate","handleTranslate","toastAfterReload","langCode","t_url","cellSpacing","indexItem","handleTranslationInput","jsonData","each","tr","val","newTranslation","fromEntries","Smtp","General","displayColorPicker","colorPick","setColorPick","displayColorPickerClock","colorPickClock","setColorPickClock","displayColorTextPicker","colorTextPick","setColorTextPick","footerText","siteName","phnNo","favicon","timezone","selectedTimeZone","print_kitchen_bill","play_sound","styles","reactCSS","default","borderRadius","background","swatch","cursor","popover","cover","right","bottom","stylesClock","stylesText","hex","label","Permissions","permission_ids","selectedPermissions","newGroup","setNewGroup","searchedGroups","setSearchedGroups","group","permission_array_id","permissionListItem","handleDeleteGroup","groupUrl","permissionIds","permissionItem","ItemFromListPermission","Waiter","newWaiter","setNewWaiter","searchedWaiter","setSearchedWaiter","handleSetNewWaiter","handleDeleteWaiter","CustomerCrud","AdminStaffCrud","selectPermissionGroup","selectedPermissionGroup","searchedAdminStaff","setSearchedAdminStaff","adminStaff","selectedOptionForPermission","permission_group_id","handleDisableConfirmation","handleDisableUser","handleActiveConfirmation","handleActiveUser","lowerCaseItemType","BranchCrud","newBranch","setNewBranch","searchedBranch","setSearchedBranch","handleSetNewBranch","handleDeleteBranch","TableCrud","capacity","newTable","setNewTable","searchedTable","setSearchedTable","handleSetNewTable","handleDeleteTable","lowerCaseItemCapacity","DeptTagCrud","newDeptTag","setNewDeptTag","searchedDeptTag","setSearchedDeptTag","handleDeleteDeptTag","PaymentTypeCrud","newPaymentType","setNewPaymentType","searchedPaymentType","setSearchedPaymentType","handleSetNewPaymentType","handleDeletePaymentType","lowerCaseItemInputKey","i18n","defaultLang","setDefaultLang","defaultCurrency","setDefaultCurrency","handleOnLoadDefaultLang","handleOnLoadDefaultCurrency","localLang","i18nextLng","changeLanguage","handleDefaultLang","handleDefaultCurrency","clock","clockText","clockIcon","onLoad","App","Dashboard","component","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d576a3a9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// for localhost development\r\n// export let BASE_URL =\r\n//   window.location.protocol +\r\n//   \"//\" +\r\n//   window.location.hostname +\r\n//   \"/foodkhan/laravel/public\";\r\n\r\n//for localhost production\r\n// export let BASE_URL =\r\n//   window.location.protocol +\r\n//   \"//\" +\r\n//   window.location.hostname +\r\n//   `${\r\n//     window.location.port !== \"\"\r\n//       ? `:${window.location.port}/khadyo/laravel`\r\n//       : \"/khadyo/laravel\"\r\n//   }`;\r\n//for khadyo.com\r\n// export let BASE_URL =\r\n//   window.location.protocol + \"//\" + window.location.hostname + \"/laravel\";\r\n\r\n// for production\r\nexport let BASE_URL =\r\n  window.location.protocol +\r\n  \"//\" +\r\n  window.location.hostname +\r\n  `${\r\n    window.location.port !== \"\"\r\n      ? `:${window.location.port}`\r\n      : `${!window.location.href.includes(\".test\") ? \"/public\" : \"\"}`\r\n  }`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../src/BaseUrl\";\r\n\r\n//3rd party packages\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\nimport Cookies from \"universal-cookie\";\r\n//importing ends\r\nconst cookies = new Cookies();\r\n\r\n// functions starts here\r\n//console functions, clear and dummy text like facebook\r\nconst consolee = () => {\r\n  var cssStop = \"color: Red; font-size: 50px; font-weight: bold;\";\r\n  var cssText = \"color: Black; font-size: 18px; font-weight: bold;\";\r\n  console.clear();\r\n  console.log(\"%cStop!\", cssStop);\r\n  console.log(\r\n    \"%cThis is a browser feature intended for developers. If someone told you to copy-paste something here to enable a feature or hack someone's account, it is a scam.\",\r\n    cssText\r\n  );\r\n};\r\n\r\n//translation functions\r\nconst _t = (text) => {\r\n  // let localLang = localStorage.getItem(\"i18nextLng\");\r\n  // if (localLang.includes(\"en\")) {\r\n  //   const url = BASE_URL + `/settings/save-to-en`;\r\n  //   let formData = {\r\n  //     key: text,\r\n  //   };\r\n  //   axios.post(url, formData);\r\n  // }\r\n  return text;\r\n};\r\n\r\n//Get cookie of authentication\r\nconst getCookie = () => {\r\n  if (cookies.get(\"_user\") !== undefined) {\r\n    let token =\r\n      cookies.get(\"_user\") +\r\n      cookies.get(\"sbb\") +\r\n      cookies.get(\"frr\") +\r\n      cookies.get(\"xss\");\r\n    return token;\r\n  }\r\n};\r\n\r\n//check permission\r\nconst checkPermission = (authUserPermissions, permission) => {\r\n  if (authUserPermissions !== false)\r\n    if (authUserPermissions.includes(permission)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n};\r\n\r\n//currency format price\r\nconst formatPrice = (price) => {\r\n  let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n  return (localCurrency.rate * price).toFixed(2);\r\n};\r\nconst currencySymbolLeft = () => {\r\n  let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n  if (localCurrency.alignment === \"left\") {\r\n    return localCurrency.symbol;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\nconst currencySymbolRight = () => {\r\n  let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n  if (localCurrency.alignment === \"right\") {\r\n    return localCurrency.symbol;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\n//general settings\r\nconst getSystemSettings = (settingsArray, checkType) => {\r\n  let tempItem =\r\n    settingsArray !== null &&\r\n    settingsArray.find((item) => {\r\n      return item.name === checkType;\r\n    });\r\n  return tempItem.value;\r\n};\r\n\r\n//Delete cookie of authentication\r\nconst deleteCookie = () => {\r\n  const url = BASE_URL + `/auth/logout`;\r\n  axios\r\n    .get(url, {\r\n      headers: { Authorization: `Bearer ${getCookie()}` },\r\n    })\r\n    .then(() => {\r\n      window.location.reload();\r\n      if (cookies.get(\"_user\") !== undefined) {\r\n        cookies.remove(\"_user\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"sbb\") !== undefined) {\r\n        cookies.remove(\"sbb\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"frr\") !== undefined) {\r\n        cookies.remove(\"frr\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"xss\") !== undefined) {\r\n        cookies.remove(\"xss\", { path: \"/\" });\r\n      }\r\n    })\r\n    .catch(() => {\r\n      window.location.reload();\r\n      if (cookies.get(\"_user\") !== undefined) {\r\n        cookies.remove(\"_user\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"sbb\") !== undefined) {\r\n        cookies.remove(\"sbb\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"frr\") !== undefined) {\r\n        cookies.remove(\"frr\", { path: \"/\" });\r\n      }\r\n      if (cookies.get(\"xss\") !== undefined) {\r\n        cookies.remove(\"xss\", { path: \"/\" });\r\n      }\r\n    });\r\n};\r\n\r\n//restaurant dashboard menu links\r\nconst restaurantMenuLink = (\r\n  img,\r\n  imgAlt,\r\n  icon,\r\n  infoTextColor,\r\n  info,\r\n  title,\r\n  redirectTo\r\n) => {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4 t-mb-15\">\r\n      <NavLink to={redirectTo} className=\"t-link product-card t-bg-white w-100\">\r\n        <div className=\"product-card__head w-100 text-center\">\r\n          <img src={img} alt={imgAlt} className=\"img-fluid\" />\r\n        </div>\r\n        <div className=\"product-card__body w-100\">\r\n          <div className=\"product-card__add\">\r\n            <span className=\"product-card__add-icon\">\r\n              <span className=\"las la-plus\"></span>\r\n            </span>\r\n          </div>\r\n          <span\r\n            className={`product-card__sub-title ${infoTextColor} text-uppercase`}\r\n          >\r\n            <span className={icon}></span> {info}\r\n          </span>\r\n          <span className=\"product-card__title text-capitalize\">{title}</span>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n//manage page mobile screen link\r\nconst managePageHrefLinkMobile = (redirectTo, menuName) => {\r\n  if (window.location.pathname === redirectTo) {\r\n    return (\r\n      <li\r\n        className={`fk-sm-nav__list  ${\r\n          window.location.href.includes(redirectTo) && \"active\"\r\n        }`}\r\n      >\r\n        <NavLink\r\n          to={{ pathname: \"/refresh\", state: redirectTo }}\r\n          exact\r\n          className={`t-link fk-sm-nav__link`}\r\n        >\r\n          {menuName}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li\r\n        className={`fk-sm-nav__list  ${\r\n          window.location.href.includes(redirectTo) && \"active\"\r\n        }`}\r\n      >\r\n        <NavLink to={redirectTo} exact className={`t-link fk-sm-nav__link`}>\r\n          {menuName}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\n//manage page navlink\r\nconst managePageHrefLink = (redirectTo, menuName) => {\r\n  if (window.location.pathname === redirectTo) {\r\n    return (\r\n      <li className=\"fk-pos-nav__sub-list border-bottom\">\r\n        <NavLink\r\n          to={{ pathname: \"/refresh\", state: redirectTo }}\r\n          exact\r\n          className={`w-100 t-text-dark t-heading-font btn font-weight-bold text-uppercase rounded-0 text-left ${\r\n            window.location.href.includes(redirectTo) && \"active\"\r\n          }`}\r\n        >\r\n          - {menuName}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className=\"fk-pos-nav__sub-list border-bottom\">\r\n        <NavLink\r\n          to={redirectTo}\r\n          exact\r\n          className={`w-100 t-text-dark t-heading-font btn font-weight-bold text-uppercase rounded-0 text-left ${\r\n            window.location.href.includes(redirectTo) && \"active\"\r\n          }`}\r\n        >\r\n          - {menuName}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\n//pagination\r\nconst pagination = (data, customFunction) => {\r\n  return (\r\n    <ReactPaginate\r\n      pageCount={data && data.last_page}\r\n      initialPage={0}\r\n      marginPagesDisplayed={5}\r\n      pageRangeDisplayed={2}\r\n      onPageChange={(page) => {\r\n        customFunction(page.selected + 1);\r\n      }}\r\n      breakLabel={\". . .\"}\r\n      breakClassName={\"px-2\"}\r\n      containerClassName={\"t-list d-flex\"}\r\n      pageClassName={\"t-list__item mr-0\"}\r\n      previousLabel={<i className=\"las la-angle-double-left\"></i>}\r\n      nextLabel={<i className=\"las la-angle-double-right\"></i>}\r\n      pageLinkClassName={\r\n        \"t-link t-pt-5 t-pb-5 t-pl-10 t-pr-10 paginav__link paginav__link--light border text-capitalize sm-text\"\r\n      }\r\n      previousClassName={\r\n        \"t-link t-pt-5 t-pb-5 t-pl-10 t-pr-10 paginav__link paginav__link--light border text-capitalize sm-text\"\r\n      }\r\n      nextClassName={\r\n        \"t-link t-pt-5 t-pb-5 t-pl-10 t-pr-10 paginav__link paginav__link--light border text-capitalize sm-text\"\r\n      }\r\n      activeClassName={\"pagination-active\"}\r\n      activeLinkClassName={\"text-white\"}\r\n    />\r\n  );\r\n};\r\n\r\n// pagination loading\r\nconst paginationLoading = () => {\r\n  return <Skeleton style={{ height: \"40px\" }} className=\"card bg-white\" />;\r\n};\r\n\r\n// modal loading\r\nconst modalLoading = (count) => {\r\n  return (\r\n    <SkeletonTheme color=\"#ff7675\" highlightColor=\"#dfe4ea\">\r\n      <p>\r\n        <Skeleton count={count} />\r\n      </p>\r\n    </SkeletonTheme>\r\n  );\r\n};\r\n\r\n// manage page table loading\r\nconst tableLoading = () => {\r\n  return (\r\n    <SkeletonTheme color=\"#f1f2f6\" highlightColor=\"#dfe4ea\">\r\n      <p>\r\n        <Skeleton style={{ height: `calc(100vh - 222px)` }} />\r\n      </p>\r\n    </SkeletonTheme>\r\n  );\r\n};\r\n\r\n// table loading\r\nconst pageLoading = () => {\r\n  return (\r\n    <SkeletonTheme color=\"#f1f2f6\" highlightColor=\"#dfe4ea\">\r\n      <p>\r\n        <Skeleton style={{ height: `calc(100vh - 187px)` }} />\r\n      </p>\r\n    </SkeletonTheme>\r\n  );\r\n};\r\n\r\n// data count details of tables\r\nconst showingData = (data) => {\r\n  return (\r\n    <>\r\n      {/* todo:: translation function call */}\r\n      Showing {data && data.from} - {data && data.to} of {data && data.total}\r\n    </>\r\n  );\r\n};\r\n\r\n// searched data count details of table\r\nconst searchedShowingData = (data, allData) => {\r\n  return (\r\n    <>\r\n      {/* todo:: translation function call */}\r\n      Showing {data && data.list.length} of {allData && allData.length}\r\n    </>\r\n  );\r\n};\r\n\r\n//export here\r\nexport {\r\n  // common & necessary\r\n  _t,\r\n  consolee,\r\n  getCookie,\r\n  deleteCookie,\r\n  checkPermission,\r\n  formatPrice,\r\n  currencySymbolLeft,\r\n  currencySymbolRight,\r\n  getSystemSettings,\r\n  // common & necessary\r\n\r\n  //navLink\r\n  restaurantMenuLink,\r\n  managePageHrefLinkMobile,\r\n  managePageHrefLink,\r\n  //navLink\r\n\r\n  //loading\r\n  pageLoading,\r\n  modalLoading,\r\n  tableLoading,\r\n  paginationLoading,\r\n  //loading\r\n\r\n  //pagination and datacounting\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n  //pagination and datacounting\r\n};\r\n/*\r\n----------------------------------------------\r\n                      Ends\r\n----------------------------------------------\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n//functions\r\nimport { _t, getCookie } from \"../functions/Functions\";\r\n\r\n//3rd party packages\r\n\r\nexport default class AdminRoute extends Component {\r\n  render() {\r\n    const { children, ...rest } = this.props;\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() => {\r\n          return getCookie() !== undefined ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { alert: \"You need to login first!\" },\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      ></Route>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../BaseUrl\";\r\n\r\n//functions\r\nimport { getCookie, getSystemSettings } from \"../functions/Functions\";\r\n\r\n//3rd party packages\r\n\r\n//creating context api\r\nconst SettingsContext = React.createContext();\r\n\r\nconst SettingsProvider = ({ children }) => {\r\n  // State hooks  here\r\n  //loading\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataPaginating, setDataPaginating] = useState(false);\r\n\r\n  //permission group\r\n  const [permissionGroup, setPermissionGroup] = useState(null);\r\n  const [permissionGroupForSearch, setPermissionGroupForSearch] = useState(\r\n    null\r\n  );\r\n\r\n  //permissions\r\n  const [permissions, setPermissions] = useState(null);\r\n\r\n  //languages\r\n  const [languageList, setLanguageList] = useState(null);\r\n  const [navLanguageList, setNavLanguageList] = useState(null);\r\n  const [languageListForSearch, setLanguageListForSearch] = useState(null);\r\n\r\n  //currencies\r\n  const [currencyList, setCurrencyList] = useState(null);\r\n  const [navCurrencyList, setNavCurrencyList] = useState(null);\r\n  const [currencyListForSearch, setCurrencyListForSearch] = useState(null);\r\n\r\n  //currencies\r\n  const [generalSettings, setGeneralSettings] = useState(null);\r\n\r\n  //smtp\r\n  const [smtp, setSmtp] = useState({\r\n    MAIL_MAILER: null,\r\n    MAIL_HOST: null,\r\n    MAIL_PORT: null,\r\n    MAIL_USERNAME: null,\r\n    MAIL_PASSWORD: null,\r\n    MAIL_ENCRYPTION: null,\r\n    MAIL_FROM_ADDRESS: null,\r\n    MAIL_FROM_NAME: null,\r\n  });\r\n\r\n  //useEffect- to get data on render\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let result = await checkInstall();\r\n      if (result === \"YES\") {\r\n        //call- unauthenticated\r\n        getLanguages();\r\n        getCurrency();\r\n        getSettings();\r\n\r\n        //call if authenticated\r\n        if (getCookie() !== undefined) {\r\n          getSmtp();\r\n          getPermissionGroups();\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // install check\r\n  const checkInstall = async () => {\r\n    const url = BASE_URL + \"/check-install\";\r\n    let result = await axios.get(url);\r\n    return result.data;\r\n  };\r\n\r\n  //get all languages\r\n  const getLanguages = () => {\r\n    setLoading(true);\r\n    const langUrl = BASE_URL + \"/settings/get-lang\";\r\n    return axios.get(langUrl).then((res) => {\r\n      setLanguageList(res.data[0]);\r\n      setNavLanguageList(res.data[1]);\r\n      setLanguageListForSearch(res.data[1]);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // get paginated languages\r\n  const setPaginatedLanguages = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const langUrl = BASE_URL + \"/settings/get-lang?page=\" + pageNo;\r\n    return axios\r\n      .get(langUrl)\r\n      .then((res) => {\r\n        setLanguageList(res.data[0]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //get smtp settings\r\n  const getSmtp = () => {\r\n    setLoading(true);\r\n    const smtpUrl = BASE_URL + \"/settings/get-smtp\";\r\n    return axios\r\n      .get(smtpUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSmtp({\r\n          ...smtp,\r\n          MAIL_MAILER: res.data[0].MAIL_MAILER,\r\n          MAIL_HOST: res.data[0].MAIL_HOST,\r\n          MAIL_PORT: res.data[0].MAIL_PORT,\r\n          MAIL_USERNAME: res.data[0].MAIL_USERNAME,\r\n          MAIL_PASSWORD: res.data[0].MAIL_PASSWORD,\r\n          MAIL_ENCRYPTION: res.data[0].MAIL_ENCRYPTION,\r\n          MAIL_FROM_ADDRESS: res.data[0].MAIL_FROM_ADDRESS,\r\n          MAIL_FROM_NAME: res.data[0].MAIL_FROM_NAME,\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //get permission groups\r\n  const getPermissionGroups = () => {\r\n    setLoading(true);\r\n    const permissionGroupUrl = BASE_URL + \"/settings/permission-group-list\";\r\n    return axios\r\n      .get(permissionGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPermissionGroup(res.data[0]);\r\n        setPermissionGroupForSearch(res.data[1]);\r\n        setPermissions(res.data[2]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated groups\r\n  const setPaginatedGropus = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/permission-group-list?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPermissionGroup(res.data[0]);\r\n        setPermissionGroupForSearch(res.data[1]);\r\n        setPermissions(res.data[2]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get all currency\r\n  const getCurrency = () => {\r\n    setLoading(true);\r\n    const currencyUrl = BASE_URL + \"/settings/get-currency\";\r\n    return axios.get(currencyUrl).then((res) => {\r\n      setCurrencyList(res.data[0]);\r\n      setNavCurrencyList(res.data[1]);\r\n      setCurrencyListForSearch(res.data[1]);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // get paginated currency\r\n  const setPaginatedCurrencies = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const currencyUrl = BASE_URL + \"/settings/get-currency?page=\" + pageNo;\r\n    return axios\r\n      .get(currencyUrl)\r\n      .then((res) => {\r\n        setCurrencyList(res.data[0]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //get all languages\r\n  const getSettings = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/general-settings\";\r\n    return axios.get(url).then((res) => {\r\n      setGeneralSettings(res.data);\r\n      const favicon = document.getElementById(\"favicon\");\r\n      favicon.href = BASE_URL + getSystemSettings(res.data, \"favicon\");\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{\r\n        //common\r\n        loading,\r\n        setLoading,\r\n\r\n        //general settings\r\n        generalSettings,\r\n        setGeneralSettings,\r\n        getLanguages,\r\n        getCurrency,\r\n        getSettings,\r\n\r\n        //currencies\r\n        currencyList,\r\n        setCurrencyList,\r\n        setPaginatedCurrencies,\r\n        navCurrencyList,\r\n        setNavCurrencyList,\r\n        currencyListForSearch,\r\n        setCurrencyListForSearch,\r\n\r\n        //languages\r\n        languageList,\r\n        setLanguageList,\r\n        setPaginatedLanguages,\r\n        navLanguageList,\r\n        setNavLanguageList,\r\n        languageListForSearch,\r\n        setLanguageListForSearch,\r\n\r\n        //smtp\r\n        smtp,\r\n        getSmtp,\r\n        setSmtp,\r\n\r\n        //permission group\r\n        getPermissionGroups,\r\n        permissionGroup,\r\n        setPermissionGroup,\r\n        setPaginatedGropus,\r\n        permissionGroupForSearch,\r\n        setPermissionGroupForSearch,\r\n\r\n        //permissions\r\n        permissions,\r\n        setPermissions,\r\n\r\n        //pagination\r\n        dataPaginating,\r\n        setDataPaginating,\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport { SettingsContext, SettingsProvider };\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst Welcome = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Installation | Khadyo Restaurant Software</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div className=\"text-center\">\r\n                          <h3 className=\"text-success font-weight-bold\">\r\n                            Khadyo Restaurant Software Installation\r\n                          </h3>\r\n                          <p className=\"sm-text\">\r\n                            You need to know the following items before\r\n                            proceeding\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"m-5\">\r\n                          <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                              <h6 className=\"font-weight-normal\">\r\n                                <i className=\"fa  fa-check\"></i> Database Host\r\n                                Name\r\n                              </h6>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              <h6 className=\"font-weight-normal\">\r\n                                <i className=\"fa fa-check\"></i> Database Name\r\n                              </h6>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              <h6 className=\"font-weight-normal\">\r\n                                <i className=\"fa fa-check\"></i> Database\r\n                                Username\r\n                              </h6>\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                              <h6 className=\"font-weight-normal\">\r\n                                <i className=\"fa fa-check\"></i> Database\r\n                                Password\r\n                              </h6>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <div className=\"m-2\">\r\n                          <p>\r\n                            During the installation process. we will check if\r\n                            the files there needed to be written (\r\n                            <strong>.env file</strong>) have{\" \"}\r\n                            <strong>write permission</strong>. We will also\r\n                            check if\r\n                            <strong> curl</strong> is enabled on your server or\r\n                            not.\r\n                          </p>\r\n                          <br />\r\n                          <p>\r\n                            Gather the information mentioned above before\r\n                            hitting the start installation button. if you are\r\n                            ready, click below...\r\n                          </p>\r\n\r\n                          <div className=\"text-center text-uppercase col-4 offset-4 mt-4 mb-3\">\r\n                            <NavLink\r\n                              to=\"/installation/permission-chcek\"\r\n                              className=\"btn btn-secondary btn-block\"\r\n                            >\r\n                              {\" \"}\r\n                              Start Installation Process\r\n                            </NavLink>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst InstallPermission = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  const [theData, setTheData] = useState({\r\n    php_version: null,\r\n    curl_status: null,\r\n    env_status: null,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    handleCheckPermission();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 300);\r\n  }, []);\r\n\r\n  //check permission\r\n  const handleCheckPermission = () => {\r\n    const url = BASE_URL + \"/check-permission\";\r\n    return axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setTheData({\r\n          php_version: res.data[0],\r\n          curl_status: res.data[1],\r\n          env_status: res.data[2],\r\n        });\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Checking Permissions</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div className=\"text-center\">\r\n                          <h3 className=\"text-success font-weight-bold\">\r\n                            Checking Permissions\r\n                          </h3>\r\n                          <p className=\"sm-text\">\r\n                            We ran diagnosis on your server. Review the items\r\n                            that have a red mark on it. <br /> If everything is\r\n                            green, you are good to go to the next step.\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"m-5\">\r\n                          <ul className=\"list-group\">\r\n                            <li className=\"list-group-item text-semibold\">\r\n                              Php version 7.3+\r\n                              {theData.php_version !== null &&\r\n                              theData.php_version >= 7.3 ? (\r\n                                <i className=\"fa fa-check text-success pull-right\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-close text-danger pull-right\"></i>\r\n                              )}\r\n                            </li>\r\n                            <li className=\"list-group-item text-semibold\">\r\n                              Curl Enabled\r\n                              {theData.curl_status !== null &&\r\n                              theData.curl_status === true ? (\r\n                                <i className=\"fa fa-check text-success pull-right\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-close text-danger pull-right\"></i>\r\n                              )}\r\n                            </li>\r\n                            <li className=\"list-group-item text-semibold\">\r\n                              <b>.env</b> File Writeable Permission\r\n                              {theData.env_status !== null &&\r\n                              theData.env_status === true ? (\r\n                                <i className=\"fa fa-check text-success pull-right\"></i>\r\n                              ) : (\r\n                                <i className=\"fa fa-close text-danger pull-right\"></i>\r\n                              )}\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n\r\n                        <p className=\"my-2 mx-5\">\r\n                          <div className=\"text-center text-uppercase col-4 offset-4 mt-4 mb-3\">\r\n                            {theData.php_version !== null &&\r\n                            theData.php_version >= 7.3 &&\r\n                            theData.curl_status !== null &&\r\n                            (theData.curl_status === true &&\r\n                              theData.env_status) !== null &&\r\n                            theData.env_status === true ? (\r\n                              <NavLink\r\n                                to=\"/installation/database-setup\"\r\n                                className=\"btn btn-secondary btn-block\"\r\n                              >\r\n                                {\" \"}\r\n                                Go To Next Step\r\n                              </NavLink>\r\n                            ) : (\r\n                              <div className=\"text-center text-primary text-uppercase\">\r\n                                Please contact your server provider to configure\r\n                                the server accordring to the requirements\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </p>\r\n\r\n                        {/* Form ends here */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstallPermission;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst DbSetup = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //new item\r\n  let [dbData, setDbData] = useState({\r\n    DB_HOST: null,\r\n    DB_PORT: null,\r\n    DB_DATABASE: null,\r\n    DB_USERNAME: null,\r\n    DB_PASSWORD: null,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  //set data\r\n  const handleChange = (e) => {\r\n    setDbData({\r\n      ...dbData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //save data\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/setup/database\";\r\n    return axios\r\n      .post(url, dbData)\r\n      .then(() => {\r\n        handleCheckDbConnection();\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //check db connection\r\n  const handleCheckDbConnection = () => {\r\n    const url = BASE_URL + \"/check-database-connection\";\r\n    return axios\r\n      .get(url)\r\n      .then((res) => {\r\n        if (res.data === \"ok\") {\r\n          setLoading(false);\r\n          history.push(\"/installation/import-database\");\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(\r\n            `${_t(\r\n              t(\"Something went wrong, could not establish database connection\")\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Setup your database</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div className=\"text-center\">\r\n                          <h3 className=\"text-success font-weight-bold text-uppercase\">\r\n                            Setup your database\r\n                          </h3>\r\n                        </div>\r\n                        <form\r\n                          onSubmit={handleSubmit}\r\n                          className=\"col-12 col-md-8 offset-md-2 sm-text\"\r\n                        >\r\n                          <div className=\"form-group mb-3\">\r\n                            <label>Database Host</label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Database Host\"\r\n                              name=\"DB_HOST\"\r\n                              value={dbData.DB_HOST}\r\n                              onChange={handleChange}\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3\">\r\n                            <label>\r\n                              Database Port{\" \"}\r\n                              <small className=\"text-secondary\">\r\n                                (3306 *default, 3308, 8888, 8889, 7888 etc..)\r\n                                <a\r\n                                  href=\"https://www.networkinghowtos.com/howto/common-database-server-port-numbers/\"\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                  className=\"t-link\"\r\n                                >\r\n                                  <i className=\"fa fa-info-circle ml-2 lg-text\"></i>\r\n                                </a>\r\n                              </small>\r\n                            </label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Database Port\"\r\n                              name=\"DB_PORT\"\r\n                              value={dbData.DB_PORT}\r\n                              onChange={handleChange}\r\n                              required\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group mb-3\">\r\n                            <label>Database Name</label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Database Name\"\r\n                              name=\"DB_DATABASE\"\r\n                              value={dbData.DB_DATABASE}\r\n                              onChange={handleChange}\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3\">\r\n                            <label>Database Username</label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Database Username\"\r\n                              name=\"DB_USERNAME\"\r\n                              value={dbData.DB_USERNAME}\r\n                              onChange={handleChange}\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"form-group mb-3\">\r\n                            <label>Database Password</label>\r\n                            <input\r\n                              className=\"form-control\"\r\n                              placeholder=\"Database Password\"\r\n                              type=\"password\"\r\n                              name=\"DB_PASSWORD\"\r\n                              value={dbData.DB_PASSWORD}\r\n                              onChange={handleChange}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"text-uppercase mt-4 mb-3\">\r\n                            <button\r\n                              className=\"btn btn-secondary text-uppercase\"\r\n                              type=\"submit\"\r\n                            >\r\n                              Save the configuration\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                        {/* Form ends here */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DbSetup;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst ImportDb = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    handleCheckDbConnection();\r\n  }, []);\r\n\r\n  //check db connection\r\n  const handleCheckDbConnection = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/check-database-connection\";\r\n    return axios\r\n      .get(url)\r\n      .then((res) => {\r\n        if (res.data === \"error\") {\r\n          setLoading(false);\r\n          history.push(\"/installation/database-setup\");\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        history.push(\"/installation/database-setup\");\r\n      });\r\n  };\r\n\r\n  //upload fresh sql\r\n  const handleFreshSqlUpload = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/import-fresh-sql\";\r\n    return axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data === \"ok\") {\r\n          history.push(\"/installation/add-admin-user\");\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //upload demo sql\r\n  const handleDemoSqlUpload = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/import-demo-sql\";\r\n    return axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data === \"ok\") {\r\n          history.push(\"/installation/add-admin-user\");\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Import SQL</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div class=\"text-center\">\r\n                          <h3 class=\"text-success font-weight-bold text-uppercase\">\r\n                            Import the Database SQL\r\n                          </h3>\r\n                        </div>\r\n                        <p class=\"border mx-2 py-5 text-center mt-5\">\r\n                          To install a fresh system without any demo data, click\r\n                          here..\r\n                          <br />\r\n                          <button\r\n                            class=\"btn btn-secondary text-uppercase sm-text mt-3\"\r\n                            onClick={handleFreshSqlUpload}\r\n                          >\r\n                            Import fresh SQL\r\n                          </button>\r\n                        </p>\r\n\r\n                        <p class=\"border mx-2 py-5 text-center mt-3\">\r\n                          To install the system including demo data, click\r\n                          here..\r\n                          <br />\r\n                          <button\r\n                            class=\"btn btn-primary text-uppercase sm-text mt-3\"\r\n                            onClick={handleDemoSqlUpload}\r\n                          >\r\n                            Import DEMO SQL\r\n                          </button>\r\n                        </p>\r\n\r\n                        {/* Form ends here */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportDb;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst InstallationUser = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  const [details, setDetails] = useState({\r\n    name: null,\r\n    email: null,\r\n    phn_no: null,\r\n    password: null,\r\n    password_confirmation: null,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  //set data\r\n  const handleChange = (e) => {\r\n    setDetails({\r\n      ...details,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //save data\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (details.password === details.password_confirmation) {\r\n      setLoading(true);\r\n      const url = BASE_URL + \"/setup/admin/store\";\r\n      return axios\r\n        .post(url, details)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.data === \"ok\") {\r\n            history.push(\"/installation/congratulation\");\r\n          } else {\r\n            setLoading(false);\r\n            toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Something went wrong, please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Password confirmation does not match\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Add User</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div className=\"text-center mb-5\">\r\n                          <h3 className=\"text-success font-weight-bold text-uppercase\">\r\n                            Add an admin to use the system\r\n                          </h3>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label\r\n                              for=\"name\"\r\n                              className=\"col-md-4 col-form-label text-md-right\"\r\n                            >\r\n                              Name\r\n                            </label>\r\n                            <div className=\"col-md-6\">\r\n                              <input\r\n                                placeholder=\"Enter full name\"\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={details.name}\r\n                                onChange={handleChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label\r\n                              for=\"email\"\r\n                              className=\"col-md-4 col-form-label text-md-right\"\r\n                            >\r\n                              E-Mail Address\r\n                            </label>\r\n\r\n                            <div className=\"col-md-6\">\r\n                              <input\r\n                                id=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={details.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label\r\n                              for=\"phn_no\"\r\n                              className=\"col-md-4 col-form-label text-md-right\"\r\n                            >\r\n                              Phone No.\r\n                            </label>\r\n                            <div className=\"col-md-6\">\r\n                              <input\r\n                                placeholder=\"Enter phone number\"\r\n                                id=\"phn_no\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"phn_no\"\r\n                                value={details.phn_no}\r\n                                onChange={handleChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label\r\n                              for=\"password\"\r\n                              className=\"col-md-4 col-form-label text-md-right\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n\r\n                            <div className=\"col-md-6\">\r\n                              <input\r\n                                id=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={details.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label\r\n                              for=\"password-confirm\"\r\n                              className=\"col-md-4 col-form-label text-md-right\"\r\n                            >\r\n                              Confirm Password\r\n                            </label>\r\n\r\n                            <div className=\"col-md-6 mb-3\">\r\n                              <input\r\n                                id=\"password-confirm\"\r\n                                placeholder=\"Enter confirm password\"\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password_confirmation\"\r\n                                value={details.password_confirmation}\r\n                                onChange={handleChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row mb-3\">\r\n                            <label className=\"col-md-4 col-form-label text-md-right\"></label>\r\n\r\n                            <div className=\"col-md-6 mb-3\">\r\n                              <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary px-5\"\r\n                              >\r\n                                Save\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n\r\n                        {/* Form ends here */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstallationUser;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\n\r\n//functions\r\nimport { _t, tableLoading } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst InstallationCongratulation = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Congratulations\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <div id=\"main\" className=\"main-height-100\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-10 offset-1 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"installation-full-page\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\"></li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <div className=\"text-center\">\r\n                          <h3 className=\"text-success font-weight-bold text-uppercase text-decoration-underline\">\r\n                            Congratulations!\r\n                          </h3>\r\n                        </div>\r\n\r\n                        <div className=\"text-center pt-5\">\r\n                          <p className=\"pt-5\">\r\n                            You have successfully completed the installation\r\n                            process\r\n                          </p>\r\n                          <p className=\"text-uppercase\">\r\n                            Do not forget to give us a positive rating\r\n                          </p>\r\n                          <div className=\"text-center\">\r\n                            <NavLink\r\n                              to=\"/\"\r\n                              className=\"btn btn-primary px-4 mt-2 mb-3 text-uppercase\"\r\n                            >\r\n                              Start using\r\n                            </NavLink>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form ends here */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InstallationCongratulation;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { consolee } from \"../../functions/Functions\";\r\n\r\nconst Refresh = (props) => {\r\n  //redirect to intended url\r\n  props.location.state\r\n    ? props.history.replace(props.location.state)\r\n    : props.history.replace(\"/\");\r\n\r\n  // consolee();\r\n  return <></>;\r\n};\r\n\r\nexport default withRouter(Refresh);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../BaseUrl\";\r\n\r\n//functions\r\nimport { getCookie, deleteCookie } from \"../functions/Functions\";\r\n\r\n//3rd party packages\r\n\r\n// creating context api\r\nconst UserContext = React.createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const history = useHistory();\r\n\r\n  // State hooks  here\r\n  //loading\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataPaginating, setDataPaginating] = useState(false);\r\n\r\n  // auth user\r\n  const [authUserInfo, setAuthUserInfo] = useState({\r\n    details: null,\r\n    permissions: null,\r\n  });\r\n\r\n  //waiter\r\n  const [waiterList, setWaiterList] = useState(null);\r\n  const [waiterForSearch, setWaiterForSearch] = useState(null);\r\n\r\n  //customer\r\n  const [customerList, setCustomerList] = useState(null);\r\n  const [customerForSearch, setCustomerForSearch] = useState(null);\r\n\r\n  //adminStaff\r\n  const [adminStaffList, setAdminStaffList] = useState(null);\r\n  const [adminStaffForSearch, setAdminStaffListforSearch] = useState(null);\r\n\r\n  //useEffect- to get data on render\r\n  useEffect(() => {\r\n    //call- unauthenticated\r\n\r\n    //call if authenticated\r\n    if (getCookie() !== undefined) {\r\n      getAuthUser();\r\n      getWaiter();\r\n      getCustomer();\r\n      getAdminStaff();\r\n    }\r\n  }, []);\r\n\r\n  //get authenticated user\r\n  const getAuthUser = () => {\r\n    setLoading(true);\r\n    const langUrl = BASE_URL + \"/auth/user\";\r\n    return axios\r\n      .get(langUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data[0].is_banned === 0) {\r\n          setAuthUserInfo({\r\n            ...authUserInfo,\r\n            details: res.data[0],\r\n            permissions: res.data[1],\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          deleteCookie();\r\n        }\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get waiter\r\n  const getWaiter = () => {\r\n    setLoading(true);\r\n    const waiterUrl = BASE_URL + \"/settings/get-waiter\";\r\n    return axios\r\n      .get(waiterUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setWaiterList(res.data[0]);\r\n        setWaiterForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated waiter\r\n  const setPaginatedWaiter = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-waiter?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setWaiterList(res.data[0]);\r\n        setWaiterForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get customer\r\n  const getCustomer = () => {\r\n    setLoading(true);\r\n    const customerUrl = BASE_URL + \"/settings/get-customer\";\r\n    return axios\r\n      .get(customerUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated customer\r\n  const setPaginatedCustomer = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-customer?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get adminStaff\r\n  const getAdminStaff = () => {\r\n    setLoading(true);\r\n    const adminStaffUrl = BASE_URL + \"/settings/get-admin-staff\";\r\n    return axios\r\n      .get(adminStaffUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setAdminStaffList(res.data[0]);\r\n        setAdminStaffListforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated adminStaff\r\n  const setPaginatedAdminStaff = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-admin-staff?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setAdminStaffList(res.data[0]);\r\n        setAdminStaffListforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        //auth user\r\n        getAuthUser,\r\n        setAuthUserInfo,\r\n        authUserInfo,\r\n\r\n        //waiter\r\n        getWaiter,\r\n        waiterList,\r\n        setWaiterList,\r\n        setPaginatedWaiter,\r\n        waiterForSearch,\r\n        setWaiterForSearch,\r\n\r\n        //customer\r\n        getCustomer,\r\n        customerList,\r\n        setCustomerList,\r\n        setPaginatedCustomer,\r\n        customerForSearch,\r\n        setCustomerForSearch,\r\n\r\n        //adminStaff\r\n        getAdminStaff,\r\n        adminStaffList,\r\n        setAdminStaffList,\r\n        setPaginatedAdminStaff,\r\n        adminStaffForSearch,\r\n        setAdminStaffListforSearch,\r\n\r\n        //pagination\r\n        dataPaginating,\r\n        setDataPaginating,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../BaseUrl\";\r\n\r\n//functions\r\nimport { getCookie } from \"../functions/Functions\";\r\n\r\n//3rd party packages\r\n\r\n// creating context api\r\nconst RestaurantContext = React.createContext();\r\n\r\nconst RestaurantProvider = ({ children }) => {\r\n  // State hooks  here\r\n  //loading\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataPaginating, setDataPaginating] = useState(false);\r\n\r\n  //branch\r\n  const [branchList, setBranchList] = useState(null);\r\n  const [branchForSearch, setBranchforSearch] = useState(null);\r\n\r\n  //table\r\n  const [tableList, setTableList] = useState(null);\r\n  const [tableForSearch, setTableforSearch] = useState(null);\r\n\r\n  //table\r\n  const [deptTagList, setDeptTagList] = useState(null);\r\n  const [deptTagForSearch, setDeptTagForSearch] = useState(null);\r\n\r\n  //Payment Type\r\n  const [paymentTypeList, setPaymentTypeList] = useState(null);\r\n  const [paymentTypeForSearch, setPaymentTypeforSearch] = useState(null);\r\n\r\n  //work period\r\n  const [workPeriodList, setWorkPeriodList] = useState(null);\r\n  const [workPeriodForSearch, setWorkPeriodListForSearch] = useState(null);\r\n\r\n  //submitted orders\r\n  const [submittedOrders, setSubmittedOrders] = useState(null);\r\n  const [submittedOrdersForSearch, setSubmittedOrdersForSearch] = useState(\r\n    null\r\n  );\r\n\r\n  //settled orders\r\n  const [settledOrders, setSettledOrders] = useState(null);\r\n  const [settledOrdersForSearch, setSettledOrdersForSearch] = useState(null);\r\n\r\n  //kitchen new orders\r\n  const [kithcenNewOrders, setKithcenNewOrders] = useState(null);\r\n\r\n  //settled orders\r\n  const [allOrders, setAllOrders] = useState(null);\r\n  const [allOrdersForSearch, setAllOrdersForSearch] = useState(null);\r\n\r\n  //useEffect- to get data on render\r\n  useEffect(() => {\r\n    //call- unauthenticated\r\n\r\n    //call if authenticated\r\n    if (getCookie() !== undefined) {\r\n      getBranch();\r\n      getTable();\r\n      getDeptTag();\r\n      getPaymentType();\r\n      getWorkPeriod();\r\n    }\r\n  }, []);\r\n\r\n  //get branch\r\n  const getBranch = () => {\r\n    setLoading(true);\r\n    const branchUrl = BASE_URL + \"/settings/get-branch\";\r\n    return axios\r\n      .get(branchUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setBranchList(res.data[0]);\r\n        setBranchforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated branch\r\n  const setPaginatedBranch = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-branch?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setBranchList(res.data[0]);\r\n        setBranchforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get tables\r\n  const getTable = () => {\r\n    setLoading(true);\r\n    const branchUrl = BASE_URL + \"/settings/get-table\";\r\n    return axios\r\n      .get(branchUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated tables\r\n  const setPaginatedTable = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-table?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get payment types\r\n  const getPaymentType = () => {\r\n    setLoading(true);\r\n    const paymentTypeUrl = BASE_URL + \"/settings/get-payment-type\";\r\n    return axios\r\n      .get(paymentTypeUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPaymentTypeList(res.data[0]);\r\n        setPaymentTypeforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated payment types\r\n  const setPaginatedPaymentType = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-payment-type?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPaymentTypeList(res.data[0]);\r\n        setPaymentTypeforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get dept Tag\r\n  const getDeptTag = () => {\r\n    setLoading(true);\r\n    const deptTagUrl = BASE_URL + \"/settings/get-dept-tag\";\r\n    return axios\r\n      .get(deptTagUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setDeptTagList(res.data[0]);\r\n        setDeptTagForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated dept Tag\r\n  const setPaginatedDeptTag = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-dept-tag?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setDeptTagList(res.data[0]);\r\n        setDeptTagForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get work period\r\n  const getWorkPeriod = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/get-work-period\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setWorkPeriodList(res.data[0]);\r\n        setWorkPeriodListForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated work period\r\n  const setPaginatedWorkPeriod = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-work-period?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setWorkPeriodList(res.data[0]);\r\n        setWorkPeriodListForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get submitted orders- not settled\r\n  const getSubmittedOrders = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/get-submitted-orders\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSubmittedOrders(res.data[0]);\r\n        setSubmittedOrdersForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated submitted orders- not settled\r\n  const setPaginatedSubmittedOrders = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-submitted-orders?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSubmittedOrders(res.data[0]);\r\n        setSubmittedOrdersForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get settled orders\r\n  const getSettledOrders = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/get-settled-orders\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSettledOrders(res.data[0]);\r\n        setSettledOrdersForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated settled orders\r\n  const setPaginatedSettledOrders = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-settled-orders?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSettledOrders(res.data[0]);\r\n        setSettledOrdersForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get kithcen new orders\r\n  const getKitchenNewOrders = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/get-new-orders\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setKithcenNewOrders(res.data[0]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //get all orders for order history\r\n  const getAllOrders = () => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/get-order-history\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setAllOrders(res.data[0]);\r\n        setAllOrdersForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated settled orders\r\n  const setPaginatedAllOrders = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-order-history?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setAllOrders(res.data[0]);\r\n        setAllOrdersForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  return (\r\n    <RestaurantContext.Provider\r\n      value={{\r\n        //common\r\n        loading,\r\n        setLoading,\r\n        //branch\r\n        getBranch,\r\n        branchList,\r\n        setBranchList,\r\n        setPaginatedBranch,\r\n        branchForSearch,\r\n        setBranchforSearch,\r\n\r\n        //table\r\n        getTable,\r\n        tableList,\r\n        setTableList,\r\n        setPaginatedTable,\r\n        tableForSearch,\r\n        setTableforSearch,\r\n\r\n        //dept-tag\r\n        getDeptTag,\r\n        deptTagList,\r\n        setDeptTagList,\r\n        setPaginatedDeptTag,\r\n        deptTagForSearch,\r\n        setDeptTagForSearch,\r\n\r\n        //payment types\r\n        getPaymentType,\r\n        paymentTypeList,\r\n        setPaymentTypeList,\r\n        setPaginatedPaymentType,\r\n        paymentTypeForSearch,\r\n        setPaymentTypeforSearch,\r\n\r\n        //work period\r\n        getWorkPeriod,\r\n        workPeriodList,\r\n        setWorkPeriodList,\r\n        setPaginatedWorkPeriod,\r\n        workPeriodForSearch,\r\n        setWorkPeriodListForSearch,\r\n\r\n        //submitted orders\r\n        getSubmittedOrders,\r\n        submittedOrders,\r\n        setSubmittedOrders,\r\n        setPaginatedSubmittedOrders,\r\n        submittedOrdersForSearch,\r\n        setSubmittedOrdersForSearch,\r\n\r\n        //settled orders\r\n        getSettledOrders,\r\n        settledOrders,\r\n        setSettledOrders,\r\n        setPaginatedSettledOrders,\r\n        settledOrdersForSearch,\r\n        setSettledOrdersForSearch,\r\n\r\n        //kitchen dashboard\r\n        getKitchenNewOrders,\r\n        kithcenNewOrders,\r\n        setKithcenNewOrders,\r\n\r\n        //order histories\r\n        getAllOrders,\r\n        allOrders,\r\n        setAllOrders,\r\n        setPaginatedAllOrders,\r\n        allOrdersForSearch,\r\n        setAllOrdersForSearch,\r\n\r\n        //pagination\r\n        dataPaginating,\r\n        setDataPaginating,\r\n      }}\r\n    >\r\n      {children}\r\n    </RestaurantContext.Provider>\r\n  );\r\n};\r\n\r\nexport { RestaurantContext, RestaurantProvider };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../BaseUrl\";\r\n\r\n//functions\r\nimport { getCookie } from \"../functions/Functions\";\r\n\r\n//3rd party packages\r\n\r\n// creating context api\r\nconst FoodContext = React.createContext();\r\n\r\nconst FoodProvider = ({ children }) => {\r\n  // State hooks  here\r\n  //loading\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataPaginating, setDataPaginating] = useState(false);\r\n\r\n  //foods\r\n  const [foodList, setFoodList] = useState(null);\r\n  const [foodForSearch, setFoodForSearch] = useState(null);\r\n\r\n  //food group\r\n  const [foodGroupList, setFoodGroupList] = useState(null);\r\n  const [foodGroupForSearch, setFoodGroupforSearch] = useState(null);\r\n\r\n  //food unit\r\n  const [foodUnitList, setFoodUnitList] = useState(null);\r\n  const [foodUnitForSearch, setFoodUnitforSearch] = useState(null);\r\n\r\n  //variation\r\n  const [variationList, setVariationList] = useState(null);\r\n  const [variationForSearch, setVariationForSearch] = useState(null);\r\n\r\n  //property Group\r\n  const [propertyGroupList, setPropertyGroupList] = useState(null);\r\n  const [propertyGroupForSearch, setPropertyGroupForSearch] = useState(null);\r\n\r\n  //property Item\r\n  const [propertyItemList, setPropertyItemList] = useState(null);\r\n  const [propertyItemForSearch, setPropertyItemForSearch] = useState(null);\r\n  const [propertyItemGroup, setPropertyItemGroup] = useState(null);\r\n\r\n  //useEffect- to get data on render\r\n  useEffect(() => {\r\n    //call- unauthenticated\r\n\r\n    //call if authenticated\r\n    if (getCookie() !== undefined) {\r\n      getFood();\r\n      getFoodGroup();\r\n      getFoodUnit();\r\n      getVariation();\r\n      getPropertyGroup();\r\n    }\r\n  }, []);\r\n\r\n  //get foods\r\n  const getFood = () => {\r\n    setLoading(true);\r\n    const foodItemUrl = BASE_URL + \"/settings/get-food-item\";\r\n    return axios\r\n      .get(foodItemUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n      });\r\n  };\r\n\r\n  // get paginated food\r\n  const setPaginatedFood = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-food-item?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get food groups\r\n  const getFoodGroup = () => {\r\n    setLoading(true);\r\n    const foodGroupUrl = BASE_URL + \"/settings/get-food-group\";\r\n    return axios\r\n      .get(foodGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated food groups\r\n  const setPaginatedFoodGroup = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-food-group?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get food units\r\n  const getFoodUnit = () => {\r\n    setLoading(true);\r\n    const foodUnitUrl = BASE_URL + \"/settings/get-food-unit\";\r\n    return axios\r\n      .get(foodUnitUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodUnitList(res.data[0]);\r\n        setFoodUnitforSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated food units\r\n  const setPaginatedFoodUnit = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-food-unit?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodUnitList(res.data[0]);\r\n        setFoodUnitforSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get variations\r\n  const getVariation = () => {\r\n    setLoading(true);\r\n    const variationUrl = BASE_URL + \"/settings/get-variation\";\r\n    return axios\r\n      .get(variationUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setVariationList(res.data[0]);\r\n        setVariationForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated variations\r\n  const setPaginatedVariation = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-variation?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setVariationList(res.data[0]);\r\n        setVariationForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get property group\r\n  const getPropertyGroup = () => {\r\n    setLoading(true);\r\n    const propertyGroupUrl = BASE_URL + \"/settings/get-property-group\";\r\n    return axios\r\n      .get(propertyGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPropertyGroupList(res.data[0]);\r\n        setPropertyGroupForSearch(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // get paginated property group\r\n  const setPaginatedPropertyGroup = (pageNo) => {\r\n    setDataPaginating(true);\r\n    const url = BASE_URL + \"/settings/get-property-group?page=\" + pageNo;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPropertyGroupList(res.data[0]);\r\n        setPropertyGroupForSearch(res.data[1]);\r\n        setDataPaginating(false);\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  //get property item\r\n  const getPropertyItem = (slug) => {\r\n    setLoading(true);\r\n    const propertyItemUrl = BASE_URL + \"/settings/get-property-item/\" + slug;\r\n    return axios\r\n      .get(propertyItemUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPropertyItemList(res.data[0]);\r\n        setPropertyItemForSearch(res.data[0]);\r\n        setPropertyItemGroup(res.data[1]);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <FoodContext.Provider\r\n      value={{\r\n        // common\r\n        loading,\r\n        setLoading,\r\n\r\n        //food\r\n        getFood,\r\n        foodList,\r\n        setFoodList,\r\n        setPaginatedFood,\r\n        foodForSearch,\r\n        setFoodForSearch,\r\n\r\n        //food group\r\n        getFoodGroup,\r\n        foodGroupList,\r\n        setFoodGroupList,\r\n        setPaginatedFoodGroup,\r\n        foodGroupForSearch,\r\n        setFoodGroupforSearch,\r\n\r\n        //food units\r\n        getFoodUnit,\r\n        foodUnitList,\r\n        setFoodUnitList,\r\n        setPaginatedFoodUnit,\r\n        foodUnitForSearch,\r\n        setFoodUnitforSearch,\r\n\r\n        //variation\r\n        getVariation,\r\n        variationList,\r\n        setVariationList,\r\n        setPaginatedVariation,\r\n        variationForSearch,\r\n        setVariationForSearch,\r\n\r\n        //property group\r\n        getPropertyGroup,\r\n        propertyGroupList,\r\n        setPropertyGroupList,\r\n        setPaginatedPropertyGroup,\r\n        propertyGroupForSearch,\r\n        setPropertyGroupForSearch,\r\n\r\n        //property Item\r\n        getPropertyItem,\r\n        propertyItemList,\r\n        setPropertyItemList,\r\n        propertyItemForSearch,\r\n        setPropertyItemForSearch,\r\n        propertyItemGroup,\r\n        setPropertyItemGroup,\r\n\r\n        //pagination\r\n        dataPaginating,\r\n        setDataPaginating,\r\n      }}\r\n    >\r\n      {children}\r\n    </FoodContext.Provider>\r\n  );\r\n};\r\n\r\nexport { FoodContext, FoodProvider };\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  getSystemSettings,\r\n} from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\nimport { UserContext } from \"../../contexts/User\";\r\nimport { RestaurantContext } from \"../../contexts/Restaurant\";\r\nimport { FoodContext } from \"../../contexts/Food\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let {\r\n    loading,\r\n    setLoading,\r\n    generalSettings,\r\n    getSmtp,\r\n    getPermissionGroups,\r\n    getLanguages,\r\n    getCurrency,\r\n    getSettings,\r\n  } = useContext(SettingsContext);\r\n  let {\r\n    getAuthUser,\r\n    authUserInfo,\r\n    getCustomer,\r\n    getWaiter,\r\n    getAdminStaff,\r\n  } = useContext(UserContext);\r\n  let {\r\n    getBranch,\r\n    getTable,\r\n    getDeptTag,\r\n    getPaymentType,\r\n    getWorkPeriod,\r\n  } = useContext(RestaurantContext);\r\n\r\n  let { getFood, getFoodGroup, getPropertyGroup, getVariation } = useContext(\r\n    FoodContext\r\n  );\r\n\r\n  //state hooks here\r\n  const [credentials, setCredentials] = useState({\r\n    email: null,\r\n    password: null,\r\n    remember_me: false,\r\n    install_check_reload: true,\r\n    install_no: false,\r\n  });\r\n\r\n  // install check\r\n  const checkInstall = async () => {\r\n    const url = BASE_URL + \"/check-install\";\r\n    let result = await axios.get(url);\r\n    return result.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    const fetchData = async () => {\r\n      let result = await checkInstall();\r\n      if (result === \"YES\") {\r\n        getSettings();\r\n        handleJquery();\r\n        checkAuth();\r\n        setCredentials({\r\n          ...credentials,\r\n          install_no: false,\r\n          install_check_reload: false,\r\n        });\r\n      } else {\r\n        setCredentials({\r\n          ...credentials,\r\n          install_no: true,\r\n          install_check_reload: false,\r\n        });\r\n        handleJquery();\r\n        checkAuth();\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  //jQuery\r\n  const handleJquery = () => {\r\n    //obj Image Animation\r\n    var hoverLayer = $(\"body\");\r\n    var objImgOne = $(\".fk-global-img__obj\");\r\n\r\n    //Animation Init\r\n    hoverLayer.mousemove(function (e) {\r\n      var valueX = (e.pageX * -1) / 60;\r\n      var valueY = (e.pageY * -1) / 80;\r\n      if (objImgOne.length) {\r\n        objImgOne.css({\r\n          transform: \"translate3d(\" + valueX + \"px,\" + valueY + \"px, 0)\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //redirect if logged in\r\n  const checkAuth = () => {\r\n    getCookie() !== undefined && history.replace(\"/dashboard\");\r\n  };\r\n\r\n  //set credentials here on input change\r\n  const handleCredentials = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n      remember_me: !credentials.remember_me,\r\n    });\r\n  };\r\n\r\n  //try for login, submit credentials to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/auth/login\";\r\n    return axios\r\n      .post(url, credentials)\r\n      .then((res) => {\r\n        if (res.data[2] === 0) {\r\n          let access_token = {\r\n            _user: res.data[0].access_token.slice(0, 8),\r\n            sbb: res.data[0].access_token.slice(8, 10),\r\n            frr: res.data[0].access_token.slice(10, 13),\r\n            xss: res.data[0].access_token.slice(13),\r\n          };\r\n          let date = new Date();\r\n          date.setFullYear(date.getFullYear() + 1);\r\n          cookies.set(\"_user\", access_token._user, {\r\n            path: \"/\",\r\n            expires: date,\r\n            sameSite: \"lax\",\r\n          });\r\n          cookies.set(\"sbb\", access_token.sbb, {\r\n            path: \"/\",\r\n            expires: date,\r\n            sameSite: \"lax\",\r\n          });\r\n          cookies.set(\"frr\", access_token.frr, {\r\n            path: \"/\",\r\n            expires: date,\r\n            sameSite: \"lax\",\r\n          });\r\n          cookies.set(\"xss\", access_token.xss, {\r\n            path: \"/\",\r\n            expires: date,\r\n            sameSite: \"lax\",\r\n          });\r\n          // todo:: get data if have permission here after authentication\r\n          //common\r\n          getAuthUser();\r\n          getPermissionGroups();\r\n          getBranch();\r\n          getLanguages();\r\n          getCurrency();\r\n\r\n          //permission based -data[3] permissions of this user\r\n          if (res.data[3] !== null && res.data[3].includes(\"Manage\")) {\r\n            getSmtp();\r\n          }\r\n          if (res.data[3] !== null) {\r\n            if (\r\n              res.data[3].includes(\"Customer\") ||\r\n              res.data[3].includes(\"POS\")\r\n            ) {\r\n              getAdminStaff();\r\n              getWorkPeriod();\r\n              getCustomer();\r\n              getTable();\r\n              getWaiter();\r\n              getDeptTag();\r\n              getPaymentType();\r\n              getFood();\r\n              getFoodGroup();\r\n              getPropertyGroup();\r\n              getVariation();\r\n            }\r\n          }\r\n\r\n          history.push(\"/dashboard\");\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Sorry, you do not have access!\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Email or password is wrong!\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const style = {\r\n    logo: {\r\n      backgroundColor: \"none\",\r\n      // generalSettings &&\r\n      // getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Sign In\"))}</title>\r\n      </Helmet>\r\n      <main>\r\n        <div className=\"fk-global-access\">\r\n          <div className=\"d-none d-lg-block\">\r\n            <div className=\"fk-global-img text-center\">\r\n              <img\r\n                src=\"/khadyo/assets/img/sign-in.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid mx-auto fk-global-img__is\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-1.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-1\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-8.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-2\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-7.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-6\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-9.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-8\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"container my-md-auto\">\r\n            {credentials.install_no ? (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"fk-brand fk-brand--sr-lg\">\r\n                    {window.location.pathname === \"/\" ? (\r\n                      <NavLink\r\n                        to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                        exact\r\n                        className=\"t-link w-100\"\r\n                      >\r\n                        <span className=\"fk-brand__img fk-brand__img--fk login-page-background\"></span>\r\n                      </NavLink>\r\n                    ) : (\r\n                      <NavLink to=\"/\" className=\"t-link w-100\">\r\n                        <span className=\"fk-brand__img fk-brand__img--fk login-page-background\"></span>\r\n                      </NavLink>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"fk-brand fk-brand--sr-lg\">\r\n                    {window.location.pathname === \"/\" ? (\r\n                      <NavLink\r\n                        to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                        exact\r\n                        className=\"t-link w-100\"\r\n                      >\r\n                        <span\r\n                          className=\"fk-brand__img fk-brand__img--fk\"\r\n                          style={style.logo}\r\n                        ></span>\r\n                      </NavLink>\r\n                    ) : (\r\n                      <NavLink to=\"/\" className=\"t-link w-100\">\r\n                        <span\r\n                          className=\"fk-brand__img fk-brand__img--fk\"\r\n                          style={style.logo}\r\n                        ></span>\r\n                      </NavLink>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {credentials.install_no ? (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-lg-6 col-xl-4 t-mt-50\">\r\n                  <div className=\"fk-global-form\">\r\n                    <div key=\"login-form\">\r\n                      <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                        {_t(t(\"Not Installed\"))}\r\n                      </h3>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                          Your application is not ready to use, Install to\r\n                          continue. Follow our documentation to get installation\r\n                          guide.\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                          <div className=\"col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div className=\"t-mr-8\">\r\n                                <NavLink\r\n                                  to=\"/installation\"\r\n                                  className=\"btn btn-primary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Install\"))}\r\n                                </NavLink>\r\n                              </div>\r\n                              <div className=\"t-mr-8\">\r\n                                <a\r\n                                  href=\"http://docs.khadyo.com\"\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                  className=\"btn btn-info sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Online Documentation\"))}\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-lg-6 col-xl-4 t-mt-50\">\r\n                  <div className=\"fk-global-form\">\r\n                    {loading ? (\r\n                      <div key=\"login-form\">\r\n                        <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                          {_t(t(\"waiting for response\"))}\r\n                        </h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                          <div className=\"row\">\r\n                            {modalLoading(3)}\r\n                            <div className=\"col-12\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <div className=\"t-mr-8\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary sm-text text-uppercase\"\r\n                                  >\r\n                                    {_t(t(\"Please wait\"))}\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    ) : (\r\n                      <div key=\"loading\">\r\n                        {!credentials.install_check_reload ? (\r\n                          <>\r\n                            <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                              {_t(t(\"sign in\"))}\r\n                            </h3>\r\n                            <form onSubmit={handleSubmit}>\r\n                              <div className=\"row\">\r\n                                <div className=\"p-2 t-mb-15 d-none\">\r\n                                  <div className=\"col-12 mb-1\">\r\n                                    <div className=\"card p-2\">\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-12 text-center sm-text\">\r\n                                          Demo login credentials\r\n                                          <div className=\"text-primary\">\r\n                                            This password section is only for\r\n                                            demo\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"col-12 mb-1 pointer-cursor\"\r\n                                    onClick={() => {\r\n                                      setCredentials({\r\n                                        ...credentials,\r\n                                        email: \"admin@mail.com\",\r\n                                        password: \"khadyo@123\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"card p-2 \">\r\n                                      <div className=\"row d-flex align-items-center\">\r\n                                        <div className=\"col-12 col-md-5\">\r\n                                          Admin: admin@mail.com\r\n                                        </div>\r\n                                        <div className=\"col-12 col-md-4\">\r\n                                          password: khadyo@123\r\n                                        </div>\r\n                                        <div className=\"col-12 col-md-3 text-right\">\r\n                                          <span className=\"btn btn-sm btn-primary\">\r\n                                            copy\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div\r\n                                    className=\"col-12 pointer-cursor\"\r\n                                    onClick={() => {\r\n                                      setCredentials({\r\n                                        ...credentials,\r\n                                        email: \"staff@mail.com\",\r\n                                        password: \"khadyo@123\",\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <div className=\"card p-2\">\r\n                                      <div className=\"row d-flex align-items-center\">\r\n                                        <div className=\"col-12 col-md-5\">\r\n                                          Staff: staff@mail.com\r\n                                        </div>\r\n                                        <div className=\"col-12 col-md-4\">\r\n                                          password: khadyo@123\r\n                                        </div>\r\n                                        <div className=\"col-12 col-md-3 text-right\">\r\n                                          <span className=\"btn btn-sm btn-primary\">\r\n                                            copy\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 t-mb-15\">\r\n                                  <input\r\n                                    onChange={handleCredentials}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    value={credentials.email}\r\n                                    required\r\n                                    autoComplete=\"off\"\r\n                                    className=\"form-control border-0 rounded-1\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-12 t-mb-15\">\r\n                                  <input\r\n                                    onChange={handleCredentials}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={credentials.password}\r\n                                    required\r\n                                    autoComplete=\"off\"\r\n                                    className=\"form-control border-0 rounded-1\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-6 t-mb-15\">\r\n                                  <label className=\"mx-checkbox\">\r\n                                    <input\r\n                                      onChange={handleCredentials}\r\n                                      name=\"remember_me\"\r\n                                      type=\"checkbox\"\r\n                                      className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                    />\r\n                                    <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8\">\r\n                                      {_t(t(\"Remember Me\"))}\r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"col-6 t-mb-15 text-right\">\r\n                                  <NavLink\r\n                                    to=\"/reset-password\"\r\n                                    className=\"t-link sm-text\"\r\n                                  >\r\n                                    {_t(t(\"Forgot password\"))}?\r\n                                  </NavLink>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                  <div className=\"d-flex align-items-center\">\r\n                                    <div className=\"t-mr-8\">\r\n                                      <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-success sm-text text-uppercase\"\r\n                                      >\r\n                                        {_t(t(\"sign in\"))}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </form>\r\n                          </>\r\n                        ) : (\r\n                          modalLoading(5)\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  getSystemSettings,\r\n} from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\nimport { UserContext } from \"../../contexts/User\";\r\nimport { RestaurantContext } from \"../../contexts/Restaurant\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst ForgetPw = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let { loading, setLoading, generalSettings } = useContext(SettingsContext);\r\n  let { authUserInfo } = useContext(UserContext);\r\n\r\n  //state hooks here\r\n  const [credentials, setCredentials] = useState({\r\n    email: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    handleJquery();\r\n    checkAuth();\r\n  }, []);\r\n\r\n  //jQuery\r\n  const handleJquery = () => {\r\n    //obj Image Animation\r\n    var hoverLayer = $(\"body\");\r\n    var objImgOne = $(\".fk-global-img__obj\");\r\n\r\n    //Animation Init\r\n    hoverLayer.mousemove(function (e) {\r\n      var valueX = (e.pageX * -1) / 60;\r\n      var valueY = (e.pageY * -1) / 80;\r\n      if (objImgOne.length) {\r\n        objImgOne.css({\r\n          transform: \"translate3d(\" + valueX + \"px,\" + valueY + \"px, 0)\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //redirect if logged in\r\n  const checkAuth = () => {\r\n    getCookie() !== undefined && history.replace(\"/dashboard\");\r\n  };\r\n\r\n  //set credentials here on input change\r\n  const handleCredentials = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //submit credentials to server to send token to email\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/auth/resetPassword\";\r\n    return axios\r\n      .post(url, credentials)\r\n      .then((res) => {\r\n        if (res.data === \"banned\") {\r\n          toast.error(`${_t(t(\"Sorry, you are banned!\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n        if (res.data === \"noUser\") {\r\n          toast.error(`${_t(t(\"Sorry, no user with this email!\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n        if (res.data === \"ok\") {\r\n          toast.success(\r\n            `${_t(\r\n              t(\r\n                \"A link has been sent to your email, Please check your email to reset your password\"\r\n              )\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n        if (res.data === \"smtp\") {\r\n          toast.error(\r\n            `${_t(\r\n              t(\r\n                \"Email configuration needs to be setup by admin to reset password\"\r\n              )\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again!\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const style = {\r\n    logo: {\r\n      backgroundColor: \"none\",\r\n      // generalSettings &&\r\n      // getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Reset Password\"))}</title>\r\n      </Helmet>\r\n      <main>\r\n        <div className=\"fk-global-access\">\r\n          <div className=\"d-none d-lg-block\">\r\n            <div className=\"fk-global-img text-center\">\r\n              <img\r\n                src=\"/khadyo/assets/img/verifiy-img.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid mx-auto fk-global-img__is\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-1.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-1\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-8.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-2\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-7.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-6\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-9.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-8\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"container my-md-auto\">\r\n            <div className=\"row\">\r\n              <div className=\"fk-brand fk-brand--sr-lg\">\r\n                {window.location.pathname === \"/\" ? (\r\n                  <NavLink\r\n                    to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                    exact\r\n                    className=\"t-link w-100\"\r\n                  >\r\n                    <span\r\n                      className=\"fk-brand__img fk-brand__img--fk\"\r\n                      style={style.logo}\r\n                    ></span>\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink to=\"/\" className=\"t-link w-100\">\r\n                    <span\r\n                      className=\"fk-brand__img fk-brand__img--fk\"\r\n                      style={style.logo}\r\n                    ></span>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-lg-6 col-xl-4 t-mt-50\">\r\n                <div className=\"fk-global-form\">\r\n                  {loading ? (\r\n                    <div key=\"login-form\">\r\n                      <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                        {_t(t(\"Generating link\"))}\r\n                      </h3>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                          {modalLoading(3)}\r\n                          <div className=\"col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div className=\"t-mr-8\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Please wait\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  ) : (\r\n                    <div key=\"loading\">\r\n                      <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                        {_t(t(\"reset password\"))}\r\n                      </h3>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12 t-mb-15\">\r\n                            <input\r\n                              onChange={handleCredentials}\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Enter your email\"\r\n                              value={credentials.email}\r\n                              required\r\n                              className=\"form-control border-0 rounded-1\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div className=\"t-mr-8\">\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn btn-success sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Reset Password\"))}\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"t-mr-8 ml-auto\">\r\n                                <NavLink\r\n                                  to=\"/login\"\r\n                                  className=\"btn btn-primary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Sign in\"))}\r\n                                </NavLink>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgetPw;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { NavLink, useHistory, useParams } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  getSystemSettings,\r\n} from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\nimport { UserContext } from \"../../contexts/User\";\r\nimport { RestaurantContext } from \"../../contexts/Restaurant\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SetNewPw = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const { token } = useParams();\r\n\r\n  //getting context values here\r\n  let { loading, setLoading, generalSettings } = useContext(SettingsContext);\r\n\r\n  //state hooks here\r\n  const [credentials, setCredentials] = useState({\r\n    token: token,\r\n    email: null,\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    handleJquery();\r\n    checkAuth();\r\n  }, []);\r\n\r\n  //jQuery\r\n  const handleJquery = () => {\r\n    //obj Image Animation\r\n    var hoverLayer = $(\"body\");\r\n    var objImgOne = $(\".fk-global-img__obj\");\r\n\r\n    //Animation Init\r\n    hoverLayer.mousemove(function (e) {\r\n      var valueX = (e.pageX * -1) / 60;\r\n      var valueY = (e.pageY * -1) / 80;\r\n      if (objImgOne.length) {\r\n        objImgOne.css({\r\n          transform: \"translate3d(\" + valueX + \"px,\" + valueY + \"px, 0)\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //redirect if logged in\r\n  const checkAuth = () => {\r\n    getCookie() !== undefined && history.replace(\"/dashboard\");\r\n  };\r\n\r\n  //set credentials here on input change\r\n  const handleCredentials = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //submit credentials to server to send token to email\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/auth/setNewPassword\";\r\n    return axios\r\n      .post(url, credentials)\r\n      .then((res) => {\r\n        if (res.data === \"noUser\") {\r\n          toast.error(\r\n            `${_t(\r\n              t(\"Sorry, email does not match or the link has been expired\")\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n        if (res.data === \"ok\") {\r\n          toast.success(`${_t(t(\"Please login to continue\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n          history.push(\"/login\");\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.data.errors.password) {\r\n          error.response.data.errors.password.forEach((item) => {\r\n            if (item === \"The password confirmation does not match.\") {\r\n              toast.error(`${_t(t(\"Password confirmation does not match\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n            if (item === \"The password must be at least 6 characters.\") {\r\n              toast.error(\r\n                `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                }\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const style = {\r\n    logo: {\r\n      backgroundColor: \"none\",\r\n      // generalSettings &&\r\n      // getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Set New Password\"))}</title>\r\n      </Helmet>\r\n      <main>\r\n        <div className=\"fk-global-access\">\r\n          <div className=\"d-none d-lg-block\">\r\n            <div className=\"fk-global-img text-center\">\r\n              <img\r\n                src=\"/khadyo/assets/img/verifiy-img.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid mx-auto fk-global-img__is\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-1.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-1\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-8.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-2\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-7.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-6\"\r\n              />\r\n              <img\r\n                src=\"/khadyo/assets/img/obj-9.png\"\r\n                alt=\"khadyo\"\r\n                className=\"img-fluid fk-global-img__obj fk-global-img__obj-8\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"container my-md-auto\">\r\n            <div className=\"row\">\r\n              <div className=\"fk-brand fk-brand--sr-lg\">\r\n                {window.location.pathname === \"/\" ? (\r\n                  <NavLink\r\n                    to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                    exact\r\n                    className=\"t-link w-100\"\r\n                  >\r\n                    <span\r\n                      className=\"fk-brand__img fk-brand__img--fk\"\r\n                      style={style.logo}\r\n                    ></span>\r\n                  </NavLink>\r\n                ) : (\r\n                  <NavLink to=\"/\" className=\"t-link w-100\">\r\n                    <span\r\n                      className=\"fk-brand__img fk-brand__img--fk\"\r\n                      style={style.logo}\r\n                    ></span>\r\n                  </NavLink>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-lg-6 col-xl-4 t-mt-50\">\r\n                <div className=\"fk-global-form\">\r\n                  {loading ? (\r\n                    <div key=\"login-form\">\r\n                      <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                        {_t(t(\"Updating password\"))}\r\n                      </h3>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                          {modalLoading(3)}\r\n                          <div className=\"col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div className=\"t-mr-8\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Please wait\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  ) : (\r\n                    <div key=\"loading\">\r\n                      <h3 className=\"mt-0 text-capitalize font-weight-bold\">\r\n                        {_t(t(\"Set New Password\"))}\r\n                      </h3>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12 t-mb-15\">\r\n                            <input\r\n                              onChange={handleCredentials}\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Enter your email\"\r\n                              value={credentials.email}\r\n                              required\r\n                              className=\"form-control border-0 rounded-1\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12 t-mb-15\">\r\n                            <input\r\n                              onChange={handleCredentials}\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              placeholder=\"Enter new password\"\r\n                              value={credentials.password}\r\n                              required\r\n                              className=\"form-control border-0 rounded-1\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12 t-mb-15\">\r\n                            <input\r\n                              onChange={handleCredentials}\r\n                              type=\"password\"\r\n                              name=\"password_confirmation\"\r\n                              placeholder=\"Confirm password\"\r\n                              value={credentials.password_confirmation}\r\n                              required\r\n                              className=\"form-control border-0 rounded-1\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-12\">\r\n                            <div className=\"d-flex align-items-center\">\r\n                              <div className=\"t-mr-8\">\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn btn-success sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"Update\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SetNewPw;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { NavLink, useHistory, useParams } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  getSystemSettings,\r\n} from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst NotFound = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const { token } = useParams();\r\n\r\n  //getting context values here\r\n  let { loading, setLoading, generalSettings } = useContext(SettingsContext);\r\n\r\n  //state hooks here\r\n  const [credentials, setCredentials] = useState({\r\n    token: token,\r\n    email: null,\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    handleJquery();\r\n  }, []);\r\n\r\n  //jQuery\r\n  const handleJquery = () => {\r\n    //obj Image Animation\r\n    var hoverLayer = $(\"body\");\r\n    var objImgOne = $(\".fk-global-img__obj\");\r\n\r\n    //Animation Init\r\n    hoverLayer.mousemove(function (e) {\r\n      var valueX = (e.pageX * -1) / 60;\r\n      var valueY = (e.pageY * -1) / 80;\r\n      if (objImgOne.length) {\r\n        objImgOne.css({\r\n          transform: \"translate3d(\" + valueX + \"px,\" + valueY + \"px, 0)\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //redirect if logged in\r\n  const checkAuth = () => {\r\n    getCookie() !== undefined && history.replace(\"/dashboard\");\r\n  };\r\n\r\n  //set credentials here on input change\r\n  const handleCredentials = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //submit credentials to server to send token to email\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/auth/setNewPassword\";\r\n    return axios\r\n      .post(url, credentials)\r\n      .then((res) => {\r\n        if (res.data === \"noUser\") {\r\n          toast.error(\r\n            `${_t(\r\n              t(\"Sorry, email does not match or the link has been expired\")\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n        if (res.data === \"ok\") {\r\n          toast.success(`${_t(t(\"Please login to continue\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n          history.push(\"/login\");\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.data.errors.password) {\r\n          error.response.data.errors.password.forEach((item) => {\r\n            if (item === \"The password confirmation does not match.\") {\r\n              toast.error(`${_t(t(\"Password confirmation does not match\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n            if (item === \"The password must be at least 6 characters.\") {\r\n              toast.error(\r\n                `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                }\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const style = {\r\n    logo: {\r\n      backgroundColor: \"none\",\r\n      // generalSettings &&\r\n      // getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"404\"))}</title>\r\n      </Helmet>\r\n      <main class=\"fk-page-404\">\r\n        <div class=\"fk-page-404__img mt-auto\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\">\r\n                <img src=\"/khadyo/assets/img/404.png\" class=\"img-fluid\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"fk-page-404__return-home t-mt-30 mb-auto\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 text-center\">\r\n                <NavLink\r\n                  to=\"/\"\r\n                  class=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center\"\r\n                >\r\n                  go to homepage\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\n//3rd party packages\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n//functions\r\nimport { _t } from \"../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst NoPermission = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Cheecking access\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"fk-scroll--index t-mt-15 t-mb-15\" data-simplebar>\r\n          <div className=\"container\">\r\n            <div className=\"row gx-3\">\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                <Skeleton style={{ height: \"250px\" }} className=\"bg-white\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoPermission;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RestaurantLanding = () => {\r\n  return (\r\n    <>\r\n      <Redirect to=\"/login\" />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestaurantLanding;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavLink, withRouter, useHistory } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../contexts/Settings\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  restaurantMenuLink,\r\n  deleteCookie,\r\n  getSystemSettings,\r\n} from \"../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst RestaurantHome = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    generalSettings,\r\n  } = useContext(SettingsContext);\r\n  const { authUserInfo } = useContext(UserContext);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  //logout\r\n  const handleLogout = () => {\r\n    deleteCookie();\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          {generalSettings && getSystemSettings(generalSettings, \"siteName\")}\r\n        </title>\r\n      </Helmet>\r\n      <main>\r\n        <div className=\"fk-scroll--index t-mt-15 t-mb-15\" data-simplebar>\r\n          <div className=\"container\">\r\n            <div className=\"row gx-3\">\r\n              {!loading ? (\r\n                <>\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Work period\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-1.jpg\",\r\n                        [_t(t(\"Work Periods\"))],\r\n                        \"fa fa-clock-o\",\r\n                        \"t-text-alpha\",\r\n                        [_t(t(\"Time\"))],\r\n                        [_t(t(\"Work Periods\"))],\r\n                        \"/dashboard/work-periods\"\r\n                      )\r\n                    : null}\r\n\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"POS\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-2.jpg\",\r\n                        [_t(t(\"Point of Sale\"))],\r\n                        \"fa fa-cart-plus\",\r\n                        \"t-text-gamma\",\r\n                        [_t(t(\"Pos\"))],\r\n                        [_t(t(\"Point of Sale\"))],\r\n                        \"/dashboard/pos\"\r\n                      )\r\n                    : null}\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Order history\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-3.jpg\",\r\n                        [_t(t(\"Order Histories\"))],\r\n                        \"fa fa-pencil\",\r\n                        \"t-text-delta\",\r\n                        [_t(t(\"Orders\"))],\r\n                        [_t(t(\"Order Histories\"))],\r\n                        \"/dashboard/orders\"\r\n                      )\r\n                    : null}\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Customer\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-4.jpg\",\r\n                        [_t(t(\"Customers\"))],\r\n                        \"fa fa-user-circle-o\",\r\n                        \"t-text-primary\",\r\n                        [_t(t(\"Customers\"))],\r\n                        [_t(t(\"Customers\"))],\r\n                        \"/dashboard/customers\"\r\n                      )\r\n                    : null}\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Kitchen\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-9.jpg\",\r\n                        [_t(t(\"Kitchen\"))],\r\n                        \"fa fa-coffee\",\r\n                        \"t-text-epsilon\",\r\n                        [_t(t(\"Kitchen\"))],\r\n                        [_t(t(\"Kitchen\"))],\r\n                        \"/dashboard/kitchen\"\r\n                      )\r\n                    : null}\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Report\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-7.jpg\",\r\n                        [_t(t(\"Reports\"))],\r\n                        \"fa fa-clock-o\",\r\n                        \"t-text-kappa\",\r\n                        [_t(t(\"Reports\"))],\r\n                        [_t(t(\"Reports\"))],\r\n                        \"/dashboard/reports\"\r\n                      )\r\n                    : null}\r\n                  {/* image, imgAltTxt, smallInfoIcon, infoTextColorName, infoText, title, redirectToUrl */}\r\n                  {authUserInfo.permissions !== null &&\r\n                  authUserInfo.permissions.includes(\"Manage\")\r\n                    ? restaurantMenuLink(\r\n                        \"/khadyo/assets/img/product-img-8.png\",\r\n                        [_t(t(\"Manage\"))],\r\n                        \"fa fa-clock-o\",\r\n                        \"t-text-zeta\",\r\n                        [_t(t(\"Manage\"))],\r\n                        [_t(t(\"Manage\"))],\r\n                        \"/dashboard/manage/food/add-new\"\r\n                      )\r\n                    : null}\r\n\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-15\">\r\n                    <button\r\n                      onClick={handleLogout}\r\n                      className=\"t-link product-card t-bg-white pb-2 border-0 text-left\"\r\n                    >\r\n                      <div className=\"product-card__head\">\r\n                        <img\r\n                          src=\"/khadyo/assets/img/product-img-6.jpg\"\r\n                          alt={_t(t(\"Logout\"))}\r\n                          className=\"img-fluid\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"product-card__body\">\r\n                        <div className=\"product-card__add\">\r\n                          <span className=\"product-card__add-icon\">\r\n                            <span className=\"las la-plus\"></span>\r\n                          </span>\r\n                        </div>\r\n                        <span\r\n                          className={`product-card__sub-title t-text-alpha text-uppercase`}\r\n                        >\r\n                          <span className=\"fa fa-clock-o\"></span>{\" \"}\r\n                          {_t(t(\"Logout\"))}\r\n                        </span>\r\n                        <span className=\"product-card__title text-capitalize\">\r\n                          {_t(t(\"Logout\"))}\r\n                        </span>\r\n                      </div>\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6 col-lg-4 t-mb-30\">\r\n                    <Skeleton\r\n                      style={{ height: \"250px\" }}\r\n                      className=\"bg-white\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(RestaurantHome);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  pageLoading,\r\n  deleteCookie,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst UpdateProfile = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    dataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  const { authUserInfo, setAuthUserInfo } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  //new adminStaff\r\n  let [newAdminStaff, setAdminStaff] = useState({\r\n    phn_no: \"\",\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n    image: null,\r\n    edit: false,\r\n    uploading: false,\r\n  });\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (authUserInfo && authUserInfo.details) {\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        phn_no: authUserInfo.details.phn_no,\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, [authUserInfo]);\r\n\r\n  //set image hook\r\n  const handleAdminStaffImage = (e) => {\r\n    setAdminStaff({\r\n      ...newAdminStaff,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewAdminStaff = (e) => {\r\n    setAdminStaff({ ...newAdminStaff, [e.target.name]: e.target.value });\r\n  };\r\n  //set name, phn no hook\r\n  const handleUpdateAdminStaff = (e) => {\r\n    e.preventDefault();\r\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"phn_no\", newAdminStaff.phn_no);\r\n    formData.append(\"image\", newAdminStaff.image);\r\n\r\n    return axios\r\n      .post(adminStaffUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setAuthUserInfo({\r\n          ...authUserInfo,\r\n          details: { ...authUserInfo.details, phn_no: newAdminStaff.phn_no },\r\n        });\r\n        setAdminStaff({\r\n          ...newAdminStaff,\r\n          password: \"\",\r\n          password_confirmation: \"\",\r\n          image: null,\r\n        });\r\n        toast.success(`${_t(t(\"Profile updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"An user exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"An user exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n\r\n          if (error.response.data.errors.image) {\r\n            error.response.data.errors.image.forEach((item) => {\r\n              if (item === \"Please select a valid image file\") {\r\n                toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n              if (item === \"Please select a file less than 5MB\") {\r\n                toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set name, phn no hook\r\n  const handleUpdateAdminStaffPassword = (e) => {\r\n    e.preventDefault();\r\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"password\", newAdminStaff.password);\r\n    formData.append(\r\n      \"password_confirmation\",\r\n      newAdminStaff.password_confirmation\r\n    );\r\n    return axios\r\n      .post(adminStaffUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        handleLogout();\r\n        toast.success(`${_t(t(\"Profile updated, please login to continue\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.password) {\r\n            error.response.data.errors.password.forEach((item) => {\r\n              if (item === \"Password confirmation does not match\") {\r\n                toast.error(\r\n                  `${_t(t(\"Password confirmation does not match\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //logout\r\n  const handleLogout = () => {\r\n    deleteCookie();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Update Password\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {_t(t(\"Update Password\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"fk-scroll--order-history profile-update-full\"\r\n                    data-simplebar\r\n                  >\r\n                    <div className=\"mt-5 t-pt-30 t-pl-15  t-pr-15\">\r\n                      <div className=\"\">\r\n                        <div className=\"card col-8 offset-2 mb-3 mb-md-0 p-5\">\r\n                          <div key=\"fragment-permission-2\">\r\n                            <form onSubmit={handleUpdateAdminStaffPassword}>\r\n                              <div className=\"mt-3\">\r\n                                <label\r\n                                  htmlFor=\"password\"\r\n                                  className=\"form-label\"\r\n                                >\r\n                                  {_t(t(\"Password\"))}\r\n                                </label>\r\n                                <input\r\n                                  type=\"password\"\r\n                                  className=\"form-control\"\r\n                                  id=\"password\"\r\n                                  name=\"password\"\r\n                                  placeholder={_t(t(\"Password\"))}\r\n                                  value={newAdminStaff.password || \"\"}\r\n                                  onChange={handleSetNewAdminStaff}\r\n                                  required\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"mt-3\">\r\n                                <label\r\n                                  htmlFor=\"password_confirmation\"\r\n                                  className=\"form-label\"\r\n                                >\r\n                                  {_t(t(\"Confirm Password\"))}\r\n                                </label>\r\n                                <input\r\n                                  type=\"password\"\r\n                                  className=\"form-control\"\r\n                                  id=\"password_confirmation\"\r\n                                  name=\"password_confirmation\"\r\n                                  placeholder={_t(t(\"Confirm Password\"))}\r\n                                  value={\r\n                                    newAdminStaff.password_confirmation || \"\"\r\n                                  }\r\n                                  required\r\n                                  onChange={handleSetNewAdminStaff}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"mt-4\">\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase px-5 py-2 mb-2 mb-md-0\"\r\n                                >\r\n                                  {_t(t(\"Update Password\"))}\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst WorkPeriod = () => {\r\n  var weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  var month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    dataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  const { authUserInfo } = useContext(UserContext);\r\n\r\n  const {\r\n    //branch\r\n    branchForSearch,\r\n\r\n    //work period\r\n    getWorkPeriod,\r\n    workPeriodList,\r\n    setWorkPeriodList,\r\n    setPaginatedWorkPeriod,\r\n    workPeriodForSearch,\r\n    setWorkPeriodListForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  //new unit\r\n  let [newWorkPeriod, setNewWorkPeriod] = useState({\r\n    user_type: null,\r\n    branch_id: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedWorkPeriod, setSearchedWorkPeriod] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {\r\n    authUserInfo.details &&\r\n      setNewWorkPeriod({\r\n        branch_id: authUserInfo.details.branch_id\r\n          ? authUserInfo.details.branch_id\r\n          : null,\r\n        user_type: authUserInfo.details.user_type,\r\n      });\r\n  }, []);\r\n\r\n  //set branch id\r\n  const handleSetBranchId = (branch) => {\r\n    setNewWorkPeriod({\r\n      ...newWorkPeriod,\r\n      branch_id: branch.id,\r\n    });\r\n  };\r\n\r\n  //search work periods here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedWorkPeriod({ ...searchedWorkPeriod, searched: false });\r\n    } else {\r\n      let searchedList = workPeriodForSearch.filter((item) => {\r\n        let lowerCaseItemBranchName = item.branch_name.toLowerCase();\r\n        let lowerCaseItemUserName = item.started_by.toLowerCase();\r\n        let lowerCaseItemDate = item.date.toLowerCase();\r\n        let lowerCaseItemUserName2 =\r\n          item.ended_by && item.ended_by.toLowerCase();\r\n        return (\r\n          lowerCaseItemBranchName.includes(searchInput) ||\r\n          lowerCaseItemUserName.includes(searchInput) ||\r\n          lowerCaseItemDate.includes(searchInput) ||\r\n          (lowerCaseItemUserName2 &&\r\n            lowerCaseItemUserName2.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedWorkPeriod({\r\n        ...searchedWorkPeriod,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Save New work period\r\n  const handleSaveNewWorkPeriod = (e) => {\r\n    e.preventDefault();\r\n    if (newWorkPeriod.branch_id) {\r\n      setNewWorkPeriod({\r\n        ...newWorkPeriod,\r\n        uploading: true,\r\n      });\r\n      const url = BASE_URL + `/settings/new-work-period`;\r\n      let date =\r\n        weekday[new Date().getDay()] +\r\n        \", \" +\r\n        new Date().getDate() +\r\n        \" \" +\r\n        month[new Date().getMonth()] +\r\n        \", \" +\r\n        new Date().getFullYear();\r\n\r\n      let time = new Date().getTime();\r\n\r\n      let formData = {\r\n        date: date,\r\n        branch_id: newWorkPeriod.branch_id,\r\n        started_at: time,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data === \"exist\") {\r\n            authUserInfo.details &&\r\n              setNewWorkPeriod({\r\n                branch_id: authUserInfo.details.branch_id\r\n                  ? authUserInfo.details.branch_id\r\n                  : null,\r\n                user_type: authUserInfo.details.user_type,\r\n\r\n                uploading: false,\r\n              });\r\n            toast.error(\r\n              `${_t(t(\"Please end the started work period first\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          } else {\r\n            authUserInfo.details &&\r\n              setNewWorkPeriod({\r\n                branch_id: authUserInfo.details.branch_id\r\n                  ? authUserInfo.details.branch_id\r\n                  : null,\r\n                user_type: authUserInfo.details.user_type,\r\n\r\n                uploading: false,\r\n              });\r\n            setWorkPeriodList(res.data[0]);\r\n            setWorkPeriodListForSearch(res.data[1]);\r\n            setSearchedWorkPeriod({\r\n              ...searchedWorkPeriod,\r\n              list: res.data[1],\r\n            });\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"Work period has been started\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          setNewWorkPeriod({\r\n            ...newWorkPeriod,\r\n            uploading: false,\r\n          });\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //milisec to hour min\r\n  const millisToMinutesAndHours = (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var hours = Math.floor(minutes / 60);\r\n    minutes = Math.floor(minutes % 60);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return `${hours} ${_t(t(\"hr\"))} - ${minutes} ${_t(t(\"min\"))} - ${\r\n      seconds < 10 ? \"0\" : \"\"\r\n    }${seconds} ${_t(t(\"sec\"))}`;\r\n  };\r\n\r\n  //end confirmation modal of workPeriod\r\n  const handleDeleteConfirmation = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to end now?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleEndWorkPeriod(id);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, end work period!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //end here\r\n  const handleEndWorkPeriod = (id) => {\r\n    setNewWorkPeriod({\r\n      ...newWorkPeriod,\r\n      uploading: true,\r\n    });\r\n    const url = BASE_URL + `/settings/update-work-period`;\r\n    let time = new Date().getTime();\r\n    let formData = {\r\n      id: id,\r\n      ended_at: time,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"orderExist\") {\r\n          authUserInfo.details &&\r\n            setNewWorkPeriod({\r\n              branch_id: authUserInfo.details.branch_id\r\n                ? authUserInfo.details.branch_id\r\n                : null,\r\n              user_type: authUserInfo.details.user_type,\r\n\r\n              uploading: false,\r\n            });\r\n          setWorkPeriodList(res.data[0]);\r\n          setWorkPeriodListForSearch(res.data[1]);\r\n          setSearchedWorkPeriod({\r\n            ...searchedWorkPeriod,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Work period has been ended\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        } else {\r\n          setLoading(false);\r\n          setNewWorkPeriod({\r\n            ...newWorkPeriod,\r\n            uploading: false,\r\n          });\r\n          toast.error(\r\n            `${_t(\r\n              t(\"All submitted orders need to be settled to end workperiod\")\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewWorkPeriod({\r\n          ...newWorkPeriod,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Work Periods\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {newWorkPeriod.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedWorkPeriod.searched\r\n                              ? _t(t(\"Work periods\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                            placeholder={\r\n                              _t(t(\"Search by branch, date, user\")) + \"..\"\r\n                            }\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7 t-mb-15 mb-md-0\">\r\n                      <div className=\"row gx-2 align-items-center\">\r\n                        {authUserInfo.details !== null &&\r\n                        authUserInfo.details.user_type !== \"staff\" ? (\r\n                          <>\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0 mt-3 mt-md-0\">\r\n                              <Select\r\n                                options={branchForSearch && branchForSearch}\r\n                                components={makeAnimated()}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.name}\r\n                                classNamePrefix=\"select\"\r\n                                className=\"xsm-text\"\r\n                                onChange={handleSetBranchId}\r\n                                maxMenuHeight=\"200px\"\r\n                                placeholder={\r\n                                  _t(t(\"Please select a branch\")) + \"..\"\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                                <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                                  <button\r\n                                    onClick={handleSaveNewWorkPeriod}\r\n                                    className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                  >\r\n                                    {_t(t(\"start work period\"))}\r\n                                  </button>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"col-12 col-md-5 ml-auto mt-2 mt-md-0\">\r\n                            <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                              <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                                <button\r\n                                  onClick={handleSaveNewWorkPeriod}\r\n                                  className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"start work period\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Started by\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Date\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Started at\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Ended at\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Ended by\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Total time\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {!searchedWorkPeriod.searched\r\n                              ? [\r\n                                  workPeriodList && [\r\n                                    workPeriodList.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      workPeriodList.data.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (workPeriodList.current_page -\r\n                                                  1) *\r\n                                                  workPeriodList.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center text-secondary\">\r\n                                              {item.branch_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.started_by}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.date}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center text-green\">\r\n                                              <Moment format=\"LT\">\r\n                                                {\r\n                                                  new Date(\r\n                                                    parseInt(item.started_at)\r\n                                                  )\r\n                                                }\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center text-primary\">\r\n                                              {item.ended_at ? (\r\n                                                <Moment format=\"LT\">\r\n                                                  {\r\n                                                    new Date(\r\n                                                      parseInt(item.ended_at)\r\n                                                    )\r\n                                                  }\r\n                                                </Moment>\r\n                                              ) : (\r\n                                                \"-\"\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.ended_at ? (\r\n                                                item.ended_by\r\n                                              ) : (\r\n                                                <button\r\n                                                  className=\"btn btn-primary btn-sm py-0 px-4\"\r\n                                                  onClick={() => {\r\n                                                    handleDeleteConfirmation(\r\n                                                      item.id\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  {_t(t(\"End\"))}\r\n                                                </button>\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.ended_at\r\n                                                ? millisToMinutesAndHours(\r\n                                                    parseInt(\r\n                                                      item.ended_at -\r\n                                                        item.started_at\r\n                                                    )\r\n                                                  )\r\n                                                : \"-\"}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedWorkPeriod && [\r\n                                    searchedWorkPeriod.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedWorkPeriod.list.map(\r\n                                        (item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (workPeriodList.current_page -\r\n                                                    1) *\r\n                                                    workPeriodList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center text-secondary\">\r\n                                                {item.branch_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.started_by}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.date}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                <Moment format=\"LT\">\r\n                                                  {\r\n                                                    new Date(\r\n                                                      parseInt(item.started_at)\r\n                                                    )\r\n                                                  }\r\n                                                </Moment>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.ended_at ? (\r\n                                                  <Moment format=\"LT\">\r\n                                                    {\r\n                                                      new Date(\r\n                                                        parseInt(item.ended_at)\r\n                                                      )\r\n                                                    }\r\n                                                  </Moment>\r\n                                                ) : (\r\n                                                  \"-\"\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.ended_at ? (\r\n                                                  item.ended_by\r\n                                                ) : (\r\n                                                  <button\r\n                                                    className=\"btn btn-primary btn-sm py-0 px-4\"\r\n                                                    onClick={() => {\r\n                                                      handleDeleteConfirmation(\r\n                                                        item.id\r\n                                                      );\r\n                                                    }}\r\n                                                  >\r\n                                                    {_t(t(\"End\"))}\r\n                                                  </button>\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.ended_at\r\n                                                  ? millisToMinutesAndHours(\r\n                                                      parseInt(\r\n                                                        item.ended_at -\r\n                                                          item.started_at\r\n                                                      )\r\n                                                    )\r\n                                                  : \"-\"}\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        }\r\n                                      )\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {newWorkPeriod.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedWorkPeriod.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                workPeriodList,\r\n                                setPaginatedWorkPeriod\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(workPeriodList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedWorkPeriod({\r\n                                      ...searchedWorkPeriod,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedWorkPeriod,\r\n                                    workPeriodForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkPeriod;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst Customers = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  const {\r\n    authUserInfo,\r\n\r\n    //customer\r\n    getCustomer,\r\n    customerList,\r\n    setCustomerList,\r\n    setPaginatedCustomer,\r\n    customerForSearch,\r\n    setCustomerForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(UserContext);\r\n\r\n  const {\r\n    //branch\r\n    branchForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // States hook here\r\n  //new customer\r\n  let [newCustomer, setNewCustomer] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phn_no: \"\",\r\n    address: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedCustomer, setSearchedCustomer] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewCustomer = (e) => {\r\n    setNewCustomer({ ...newCustomer, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewCustomer({ ...newCustomer, branch });\r\n  };\r\n\r\n  //Save New customer\r\n  const handleSaveNewCustomer = (e) => {\r\n    e.preventDefault();\r\n    let checkBranch = false;\r\n    if (\r\n      authUserInfo.details !== null &&\r\n      authUserInfo.details.user_type !== \"staff\"\r\n    ) {\r\n      checkBranch = true;\r\n    }\r\n    if (checkBranch) {\r\n      if (newCustomer.branch !== null) {\r\n        setNewCustomer({\r\n          ...newCustomer,\r\n          uploading: true,\r\n        });\r\n        const customerUrl = BASE_URL + `/settings/new-customer`;\r\n        let formData = new FormData();\r\n        formData.append(\"name\", newCustomer.name);\r\n        formData.append(\"phn_no\", newCustomer.phn_no);\r\n        formData.append(\"email\", newCustomer.email);\r\n        formData.append(\"address\", newCustomer.address);\r\n        formData.append(\"branch_id\", newCustomer.branch.id);\r\n        return axios\r\n          .post(customerUrl, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setNewCustomer({\r\n              name: \"\",\r\n              email: \"\",\r\n              phn_no: \"\",\r\n              address: \"\",\r\n              branch: null,\r\n              selectedBranch: null,\r\n              edit: false,\r\n              editSlug: null,\r\n              uploading: false,\r\n            });\r\n            setCustomerList(res.data[0]);\r\n            setCustomerForSearch(res.data[1]);\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"Customer has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setNewCustomer({\r\n              ...newCustomer,\r\n              uploading: false,\r\n            });\r\n            if (error && error.response.data.errors) {\r\n              if (error.response.data.errors.phn_no) {\r\n                error.response.data.errors.phn_no.forEach((item) => {\r\n                  if (item === \"A customer exists with this phone number\") {\r\n                    toast.error(\r\n                      `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      }\r\n    } else {\r\n      setNewCustomer({\r\n        ...newCustomer,\r\n        uploading: true,\r\n      });\r\n      const customerUrl = BASE_URL + `/settings/new-customer`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newCustomer.name);\r\n      formData.append(\"phn_no\", newCustomer.phn_no);\r\n      formData.append(\"email\", newCustomer.email);\r\n      formData.append(\"address\", newCustomer.address);\r\n      if (authUserInfo.details !== null) {\r\n        formData.append(\"branch_id\", authUserInfo.details.branch_id);\r\n      }\r\n      return axios\r\n        .post(customerUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewCustomer({\r\n            name: \"\",\r\n            email: \"\",\r\n            phn_no: \"\",\r\n            address: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setCustomerList(res.data[0]);\r\n          setCustomerForSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Customer has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewCustomer({\r\n            ...newCustomer,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"A customer exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let customer = customerForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n\r\n    let selectedOptionForBranch = null;\r\n    if (\r\n      authUserInfo.details !== null &&\r\n      authUserInfo.details.user_type !== \"staff\"\r\n    ) {\r\n      if (customer[0].branch_id) {\r\n        selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n          return branchItem.id === customer[0].branch_id;\r\n        });\r\n      }\r\n    }\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      name: customer[0].name,\r\n      email: customer[0].email,\r\n      phn_no: customer[0].phn_no,\r\n      address: customer[0].address,\r\n      selectedBranch: selectedOptionForBranch\r\n        ? selectedOptionForBranch[0]\r\n        : null,\r\n      editSlug: customer[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update customer\r\n  const handleUpdateCustomer = (e) => {\r\n    e.preventDefault();\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      uploading: true,\r\n    });\r\n    const customerUrl = BASE_URL + `/settings/update-customer`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newCustomer.name);\r\n    formData.append(\"phn_no\", newCustomer.phn_no);\r\n    formData.append(\"email\", newCustomer.email);\r\n    formData.append(\"address\", newCustomer.address);\r\n    if (newCustomer.branch !== null) {\r\n      formData.append(\"branch_id\", newCustomer.branch.id);\r\n    }\r\n    formData.append(\"editSlug\", newCustomer.editSlug);\r\n    return axios\r\n      .post(customerUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewCustomer({\r\n          name: \"\",\r\n          email: \"\",\r\n          phn_no: \"\",\r\n          address: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewCustomer({\r\n          ...newCustomer,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"A customer exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search customers here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedCustomer({ ...searchedCustomer, searched: false });\r\n    } else {\r\n      let searchedList = customerForSearch.filter((item) => {\r\n        //name\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n\r\n        //email\r\n        let lowerCaseItemEmail =\r\n          item.email !== null && item.email.toLowerCase();\r\n\r\n        //phn no\r\n        let lowerCaseItemPhnNo =\r\n          item.phn_no !== null && item.phn_no.toLowerCase();\r\n\r\n        //address\r\n        let lowerCaseItemAddress =\r\n          item.address !== null && item.address.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemEmail && lowerCaseItemEmail.includes(searchInput)) ||\r\n          (lowerCaseItemPhnNo && lowerCaseItemPhnNo.includes(searchInput)) ||\r\n          (lowerCaseItemAddress &&\r\n            lowerCaseItemAddress.includes(searchInput)) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedCustomer({\r\n        ...searchedCustomer,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of waiter\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteCustomer(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete customer here\r\n  const handleDeleteCustomer = (slug) => {\r\n    setLoading(true);\r\n    const customerUrl = BASE_URL + `/settings/delete-customer/${slug}`;\r\n    return axios\r\n      .get(customerUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Customers\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addCustomer\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newCustomer.edit\r\n                    ? _t(t(\"Add new customer\"))\r\n                    : _t(t(\"Update customer\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newCustomer.uploading === false ? (\r\n                <div key=\"fragment-customer-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newCustomer.edit\r\n                        ? handleSaveNewCustomer\r\n                        : handleUpdateCustomer\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Mr. John\"\r\n                        value={newCustomer.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    {authUserInfo.details !== null &&\r\n                      authUserInfo.details.user_type !== \"staff\" && (\r\n                        <div className=\"mt-3\">\r\n                          <label className=\"form-label mb-0\">\r\n                            {_t(t(\"Select a branch\"))}{\" \"}\r\n                            {newCustomer.edit ? (\r\n                              <small className=\"text-primary\">\r\n                                {\"( \"}\r\n                                {_t(\r\n                                  t(\r\n                                    \"Leave empty if you do not want to change branch\"\r\n                                  )\r\n                                )}\r\n                                {\" )\"}\r\n                              </small>\r\n                            ) : (\r\n                              <small className=\"text-primary\">*</small>\r\n                            )}\r\n                          </label>\r\n                          {newCustomer.edit &&\r\n                            newCustomer.selectedBranch !== null && (\r\n                              <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                                <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                                  {newCustomer.selectedBranch.name}\r\n                                </li>\r\n                              </ul>\r\n                            )}\r\n                          <Select\r\n                            options={branchForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            className=\"basic-multi-select mt-2\"\r\n                            classNamePrefix=\"select\"\r\n                            onChange={handleSetBranch}\r\n                            placeholder={_t(t(\"Please select a branch\"))}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"email\" className=\"form-label\">\r\n                        {_t(t(\"Email\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"e.g. customer@example.com\"\r\n                        value={newCustomer.email || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newCustomer.phn_no || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"address\" className=\"form-label\">\r\n                        {_t(t(\"Address\"))}\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        placeholder=\"Type customer address\"\r\n                        value={newCustomer.address || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newCustomer.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newCustomer.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {newCustomer.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedCustomer.searched\r\n                              ? _t(t(\"Customers\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                            placeholder={_t(t(\"Search\")) + \"..\"}\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7 t-mb-15 mb-md-0\">\r\n                      <div className=\"row gx-2 align-items-center\">\r\n                        <div className=\"col-12 col-md-5 ml-auto mt-2 mt-md-0\">\r\n                          <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                            <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                              <button\r\n                                className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#addCustomer\"\r\n                                onClick={() => {\r\n                                  setNewCustomer({\r\n                                    ...newCustomer,\r\n                                    branch: null,\r\n                                    edit: false,\r\n                                    uploading: false,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {_t(t(\"add new\"))}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Name\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"email\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Phn no\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Address\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Action\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                            {!searchedCustomer.searched\r\n                              ? [\r\n                                  customerList && [\r\n                                    customerList.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"7\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      customerList.data.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (customerList.current_page -\r\n                                                  1) *\r\n                                                  customerList.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.email || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.phn_no ? (\r\n                                                <a\r\n                                                  href={`tel:${item.phn_no}`}\r\n                                                  rel=\"noopener noreferrer\"\r\n                                                >\r\n                                                  {item.phn_no}\r\n                                                </a>\r\n                                              ) : (\r\n                                                \"-\"\r\n                                              )}\r\n                                            </td>\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.address || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <div className=\"dropdown\">\r\n                                                <button\r\n                                                  className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                  type=\"button\"\r\n                                                  data-toggle=\"dropdown\"\r\n                                                >\r\n                                                  <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                </button>\r\n                                                <div className=\"dropdown-menu\">\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      setNewCustomer({\r\n                                                        ...newCustomer,\r\n                                                        branch: null,\r\n                                                      });\r\n                                                      handleSetEdit(item.slug);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#addCustomer\"\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-pencil\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Edit\"))}\r\n                                                  </button>\r\n\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      handleDeleteConfirmation(\r\n                                                        item.slug\r\n                                                      );\r\n                                                    }}\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-trash\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Delete\"))}\r\n                                                  </button>\r\n                                                </div>\r\n                                              </div>\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedCustomer && [\r\n                                    searchedCustomer.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"7\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedCustomer.list.map(\r\n                                        (item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (customerList.current_page -\r\n                                                    1) *\r\n                                                    customerList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.email || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.phn_no ? (\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                ) : (\r\n                                                  \"-\"\r\n                                                )}\r\n                                              </td>\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.address || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewCustomer({\r\n                                                          ...newCustomer,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addCustomer\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        }\r\n                                      )\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {newCustomer.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedCustomer.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(customerList, setPaginatedCustomer)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(customerList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedCustomer({\r\n                                      ...searchedCustomer,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedCustomer,\r\n                                    customerForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","class Engine {\r\n  constructor() {\r\n    this.number = \"\";\r\n\r\n    this.previousInput = null;\r\n    this.previousNumber = null;\r\n    this.previousOperation = null;\r\n    this.repeatNumber = null;\r\n    this.repeatOperation = null;\r\n    this.clearable = false;\r\n\r\n    this.OperationEnum = {\r\n      addition: \"+\",\r\n      subtraction: \"-\",\r\n      multiplication: \"x\",\r\n      division: \"\\u00F7\",\r\n      percentage: \"%\",\r\n      sign: \"+/-\",\r\n      equal: \"=\",\r\n      allClear: \"AC\",\r\n      allClear: \"C\",\r\n    };\r\n  }\r\n\r\n  updatePreviousStatus(number, input) {\r\n    this.previousNumber = number;\r\n    this.previousInput = input;\r\n    this.previousOperation = input;\r\n  }\r\n\r\n  // Handle and process all digit inputs including .\r\n  handleDigitInput(input) {\r\n    this.clearable = true;\r\n\r\n    if (this.isOperation(this.previousInput)) {\r\n      this.number = \"\";\r\n    }\r\n\r\n    if (input === \".\" && this.containDecimalPoint(this.number)) {\r\n      return this.number;\r\n    }\r\n\r\n    if (input === \".\" && this.number === \"\") {\r\n      this.number = \"0.\";\r\n      return this.number;\r\n    }\r\n\r\n    this.number += input;\r\n\r\n    this.previousInput = input;\r\n\r\n    return this.removeZero(this.number);\r\n  }\r\n\r\n  // Handle all operation other than digit inputs.\r\n  handleOperationInput(input) {\r\n    if (\r\n      input === this.OperationEnum.addition ||\r\n      input === this.OperationEnum.subtraction ||\r\n      input === this.OperationEnum.multiplication ||\r\n      input === this.OperationEnum.division\r\n    ) {\r\n      return this.handleBaiscMathOperation(input);\r\n    }\r\n\r\n    if (input === this.OperationEnum.percentage) {\r\n      return this.handlePercentageOperation();\r\n    }\r\n\r\n    if (input === this.OperationEnum.sign) {\r\n      return this.handleSignOperation();\r\n    }\r\n\r\n    if (input === this.OperationEnum.allClear) {\r\n      return this.handleAllClearOperation();\r\n    }\r\n\r\n    if (input === this.OperationEnum.clear) {\r\n      return this.handleClearOperation();\r\n    }\r\n\r\n    if (input === this.OperationEnum.equal) {\r\n      return this.handleEqualOperation(input);\r\n    }\r\n  }\r\n\r\n  // Only handle basic +, -, /, x operations\r\n  handleBaiscMathOperation(input) {\r\n    this.repeatNumber = null;\r\n    this.repeatOperation = null;\r\n\r\n    if (this.previousNumber == null) {\r\n      this.updatePreviousStatus(this.number, input);\r\n\r\n      return this.number;\r\n    } else {\r\n      let temp = this.previousInput;\r\n      this.previousInput = input;\r\n\r\n      if (\r\n        temp !== input &&\r\n        this.previousOperation !== this.OperationEnum.equal &&\r\n        temp !== \"=\"\r\n      ) {\r\n        if (this.previousOperation === this.OperationEnum.addition) {\r\n          this.number = this.add(this.previousNumber, this.number);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.subtraction) {\r\n          this.number = this.subtract(this.previousNumber, this.number);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.multiplication) {\r\n          this.number = this.muliply(this.previousNumber, this.number);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.division) {\r\n          this.number = this.divide(this.previousNumber, this.number);\r\n        }\r\n\r\n        this.updatePreviousStatus(this.number, input);\r\n\r\n        return this.number;\r\n      } else {\r\n        this.updatePreviousStatus(this.number, input);\r\n\r\n        return this.number;\r\n      }\r\n    }\r\n  }\r\n\r\n  handlePercentageOperation() {\r\n    if (this.number === \"\") {\r\n      this.number = \"0\";\r\n    }\r\n\r\n    this.number = this.percentage(this.number);\r\n\r\n    return this.number;\r\n  }\r\n\r\n  handleSignOperation() {\r\n    if (this.number === \"\") {\r\n      this.number = \"0\";\r\n    }\r\n\r\n    this.number = this.changeSign(this.number);\r\n\r\n    return this.number;\r\n  }\r\n\r\n  handleAllClearOperation() {\r\n    return this.allClear();\r\n  }\r\n\r\n  handleClearOperation() {\r\n    return this.clear();\r\n  }\r\n\r\n  // Paramter operation is one of add, subtract, multiply or divide\r\n  perform(operation) {\r\n    if (this.repeatNumber !== null) {\r\n      this.number = operation(this.number, this.repeatNumber);\r\n    } else {\r\n      this.repeatNumber = this.number;\r\n      this.number = operation(this.previousNumber, this.number);\r\n    }\r\n  }\r\n\r\n  handleEqualOperation(input) {\r\n    if (this.previousNumber == null) {\r\n      this.updatePreviousStatus(this.number, input);\r\n\r\n      return this.number;\r\n    } else {\r\n      this.previousInput = input;\r\n\r\n      if (\r\n        this.previousOperation !== this.OperationEnum.equal &&\r\n        input === this.OperationEnum.equal\r\n      ) {\r\n        let temp = this.number;\r\n\r\n        if (this.previousOperation === this.OperationEnum.addition) {\r\n          this.perform(this.add);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.subtraction) {\r\n          this.perform(this.subtract);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.multiplication) {\r\n          this.perform(this.muliply);\r\n        }\r\n        if (this.previousOperation === this.OperationEnum.division) {\r\n          this.perform(this.divide);\r\n        }\r\n\r\n        this.repeatNumber = temp;\r\n        this.repeatOperation = this.previousOperation;\r\n        this.previousInput = input;\r\n        this.previousOperation = input;\r\n\r\n        return this.number;\r\n      } else {\r\n        let temp = this.number;\r\n\r\n        if (this.repeatNumber != null) {\r\n          if (this.repeatOperation === this.OperationEnum.addition) {\r\n            this.number = this.add(this.number, this.repeatNumber);\r\n          }\r\n          if (this.repeatOperation === this.OperationEnum.subtraction) {\r\n            this.number = this.subtract(this.number, this.repeatNumber);\r\n          }\r\n          if (this.repeatOperation === this.OperationEnum.multiplication) {\r\n            this.number = this.muliply(this.number, this.repeatNumber);\r\n          }\r\n          if (this.repeatOperation === this.OperationEnum.division) {\r\n            this.number = this.divide(this.number, this.repeatNumber);\r\n          }\r\n        }\r\n\r\n        this.updatePreviousStatus(temp, input);\r\n\r\n        return this.number;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculate(input) {\r\n    if (this.isDigit(input)) {\r\n      return this.handleDigitInput(input);\r\n    }\r\n\r\n    if (this.isOperation(input)) {\r\n      return this.handleOperationInput(input);\r\n    }\r\n\r\n    return \"Error\";\r\n  }\r\n\r\n  isDigit(input) {\r\n    return !isNaN(input) || input === \".\";\r\n  }\r\n\r\n  isOperation(input) {\r\n    return Object.values(this.OperationEnum).includes(input);\r\n  }\r\n\r\n  add(previousNumber, number) {\r\n    return (parseFloat(previousNumber) + parseFloat(number)).toString();\r\n  }\r\n\r\n  subtract(previousNumber, number) {\r\n    return (parseFloat(previousNumber) - parseFloat(number)).toString();\r\n  }\r\n\r\n  muliply(previousNumber, number) {\r\n    return (parseFloat(previousNumber) * parseFloat(number)).toString();\r\n  }\r\n\r\n  divide(previousNumber, number) {\r\n    return (parseFloat(previousNumber) / parseFloat(number)).toString();\r\n  }\r\n\r\n  percentage(number) {\r\n    return (parseFloat(number) / 100).toString();\r\n  }\r\n\r\n  changeSign(number) {\r\n    return parseFloat(number) === 0\r\n      ? \"0\"\r\n      : (parseFloat(number) * -1).toString();\r\n  }\r\n\r\n  clear() {\r\n    this.previousInput = null;\r\n    this.previousNumber = null;\r\n    this.previousOperation = null;\r\n    this.repeatNumber = null;\r\n    this.repeatOperation = null;\r\n    this.clearable = false;\r\n\r\n    return this.number;\r\n  }\r\n\r\n  allClear() {\r\n    this.number = \"\";\r\n    this.previousInput = null;\r\n    this.previousNumber = null;\r\n    this.previousOperation = null;\r\n    this.repeatNumber = null;\r\n    this.repeatOperation = null;\r\n    this.clearable = false;\r\n\r\n    return \"0\";\r\n  }\r\n\r\n  removeZero(number) {\r\n    if (number.length > 1 && number[0] === \"0\" && number[1] !== \".\") {\r\n      return this.removeZero(number.substr(1, number.length));\r\n    }\r\n\r\n    return number;\r\n  }\r\n\r\n  containDecimalPoint(number) {\r\n    return number.includes(\".\");\r\n  }\r\n}\r\n\r\nexport default Engine;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Display.css\";\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { display: props.display, width: window.width };\r\n\r\n    this.divRef = React.createRef();\r\n    this.spanRef = React.createRef();\r\n\r\n    this.previousWidth = window.width;\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({ ...this.state, width: window.innerWidth });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.divRef} className=\"Display\">\r\n        <span ref={this.spanRef} className=\"DisplaySpan\">\r\n          {this.props.display}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let divWidth = this.divRef.current.clientWidth;\r\n    this.previousWidth = divWidth;\r\n  }\r\n}\r\n\r\nDisplay.propTypes = {\r\n  display: PropTypes.string,\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GlobalHotKeys } from \"react-hotkeys\";\r\nimport \"./Button.css\";\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.keyMap = {\r\n      1: \"1\",\r\n      2: \"2\",\r\n      3: \"3\",\r\n      4: \"4\",\r\n      5: \"5\",\r\n      6: \"6\",\r\n      7: \"7\",\r\n      8: \"8\",\r\n      9: \"9\",\r\n      0: \"0\",\r\n      EQUAL: \"=\",\r\n      MULTIPLY: \"shift+8\",\r\n      ADD: \"shift+=\",\r\n      SUBTRACT: \"-\",\r\n      DIVIDE: \"/\",\r\n      AC: \"c\",\r\n      DOT: \".\",\r\n      PERCENT: \"shift+5\",\r\n      ENTER: \"enter\",\r\n    };\r\n    this.handlers = {\r\n      1: () => {\r\n        this.props.onClick(\"1\");\r\n      },\r\n      2: () => {\r\n        this.props.onClick(\"2\");\r\n      },\r\n      3: () => {\r\n        this.props.onClick(\"3\");\r\n      },\r\n      4: () => {\r\n        this.props.onClick(\"4\");\r\n      },\r\n      5: () => {\r\n        this.props.onClick(\"5\");\r\n      },\r\n      6: () => {\r\n        this.props.onClick(\"6\");\r\n      },\r\n      7: () => {\r\n        this.props.onClick(\"7\");\r\n      },\r\n      8: () => {\r\n        this.props.onClick(\"8\");\r\n      },\r\n      9: () => {\r\n        this.props.onClick(\"9\");\r\n      },\r\n      0: () => {\r\n        this.props.onClick(\"0\");\r\n      },\r\n      EQUAL: () => {\r\n        this.props.onClick(\"=\");\r\n      },\r\n      MULTIPLY: () => {\r\n        this.props.onClick(\"*\");\r\n      },\r\n      SUBTRACT: () => {\r\n        this.props.onClick(\"-\");\r\n      },\r\n      ADD: () => {\r\n        this.props.onClick(\"+\");\r\n      },\r\n      DIVIDE: () => {\r\n        this.props.onClick(\"÷\");\r\n      },\r\n      AC: () => {\r\n        this.props.onClick(\"AC\");\r\n      },\r\n      DOT: () => {\r\n        this.props.onClick(\".\");\r\n      },\r\n      PERCENT: () => {\r\n        this.props.onClick(\"%\");\r\n      },\r\n      ENTER: () => {\r\n        this.props.onClick(\"=\");\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GlobalHotKeys keyMap={this.keyMap} handlers={this.handlers}>\r\n        <button\r\n          className={this.props.className}\r\n          onClick={this.props.onClick.bind(null, this.props.value)}\r\n        >\r\n          {this.props.value}\r\n        </button>\r\n      </GlobalHotKeys>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  value: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nimport Engine from \"./Engine.js\";\r\n\r\nimport Display from \"./Display.js\";\r\nimport Button from \"./Button.js\";\r\n\r\nimport \"./Calculator.css\";\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      display: \"0\",\r\n      engine: new Engine(),\r\n    };\r\n\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n  }\r\n\r\n  handleButtonClick(value) {\r\n    this.setState({\r\n      display: this.state.engine.calculate(value),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Calculator\">\r\n        <Display display={this.state.display} />\r\n\r\n        <Button\r\n          value=\"C\"\r\n          className=\"Button BlackButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"+/-\"\r\n          className=\"Button BlackButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"%\"\r\n          className=\"Button BlackButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value={\"\\u00F7\"}\r\n          className=\"Button OrangeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Button\r\n          value=\"7\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"8\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"9\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"x\"\r\n          className=\"Button OrangeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Button\r\n          value=\"4\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"5\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"6\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"-\"\r\n          className=\"Button OrangeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Button\r\n          value=\"1\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"2\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"3\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"+\"\r\n          className=\"Button OrangeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n\r\n        <br />\r\n\r\n        <Button\r\n          value=\"0\"\r\n          className=\"Button GrayButton LargeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\".\"\r\n          className=\"Button GrayButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n        <Button\r\n          value=\"=\"\r\n          className=\"Button OrangeButton\"\r\n          onClick={this.handleButtonClick}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n  getSystemSettings,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\nimport Calculator from \"./calc/Calculator\";\r\n\r\nconst Pos = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    generalSettings,\r\n  } = useContext(SettingsContext);\r\n\r\n  const {\r\n    authUserInfo,\r\n    //customer\r\n    customerForSearch,\r\n    setCustomerForSearch,\r\n    //waiter\r\n    waiterForSearch,\r\n  } = useContext(UserContext);\r\n\r\n  const {\r\n    //food\r\n    foodForSearch,\r\n    //food group\r\n    foodGroupForSearch,\r\n    //property group\r\n    propertyGroupForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  const {\r\n    //work period\r\n    workPeriodForSearch,\r\n    //branch\r\n    branchForSearch,\r\n    //table\r\n    tableForSearch,\r\n    //dept-tag\r\n    deptTagForSearch,\r\n    //payment-type\r\n    paymentTypeForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // State hooks here\r\n  const [foodItem, setFoodItem] = useState({\r\n    foodGroup: null,\r\n    items: null,\r\n    selectedItem: null,\r\n    variations: null,\r\n    properties: null,\r\n  });\r\n\r\n  //calculator\r\n  const [calculatorMenu, setCalculatorMenu] = useState(false);\r\n  //new order\r\n  const [newOrder, setNewOrder] = useState(null);\r\n  //active index of order list\r\n  const [activeItemInOrder, setActiveItemInOrder] = useState(null);\r\n  //checked variations\r\n  const [selectedVariation, setSelectedVariation] = useState([]);\r\n  //selected groups\r\n  const [selectedPropertyGroup, setSelectedPropertyGroup] = useState([]);\r\n  //checked properties\r\n  const [selectedProperties, setSelectedProperties] = useState([]);\r\n\r\n  //the sub total\r\n  const [theSubTotal, setTheSubTotal] = useState(0);\r\n  //total payable\r\n  const [totalPayable, setTotalPaybale] = useState(0);\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //vat\r\n  const [theVat, setTheVat] = useState(0);\r\n\r\n  //vat settings\r\n  const [newSettings, setNewSettings] = useState(null);\r\n\r\n  //order details users\r\n  const [orderDetailUsers, setOrderDetailusers] = useState({\r\n    theCustomers: null,\r\n    theTables: null,\r\n    theWaiters: null,\r\n  });\r\n\r\n  //order details\r\n  const [orderDetails, setOrderDetails] = useState({\r\n    branch: null,\r\n    customer: null,\r\n    table: null,\r\n    waiter: null,\r\n    dept_tag: null,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n    total_guest: 1,\r\n    newCustomer: false,\r\n    newCustomerInfo: {\r\n      name: \"\",\r\n      number: \"\",\r\n    },\r\n    token: null,\r\n    serviceCharge: 0,\r\n    discount: 0,\r\n  });\r\n\r\n  //useEffect- to get data on render\r\n  useEffect(() => {\r\n    if (foodGroupForSearch) {\r\n      let tempItems =\r\n        foodForSearch &&\r\n        foodForSearch.filter((tempItem) => {\r\n          return parseInt(tempItem.food_group_id) === foodGroupForSearch[0].id;\r\n        });\r\n      if (tempItems && tempItems.length > 0) {\r\n        // initial group & item being active here, variations, properties\r\n        setFoodItem({\r\n          foodGroup: foodGroupForSearch[0],\r\n          items: tempItems,\r\n          selectedItem: tempItems[0],\r\n          variations:\r\n            parseInt(tempItems[0].has_variation) === 1\r\n              ? tempItems[0].variations\r\n              : null,\r\n          properties:\r\n            parseInt(tempItems[0].has_property) === 1\r\n              ? tempItems[0].properties\r\n              : null,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (authUserInfo.details) {\r\n      let theBranch =\r\n        branchForSearch &&\r\n        branchForSearch.find((branch) => {\r\n          return authUserInfo.details.branch_id === branch.id;\r\n        });\r\n      setOrderDetails({\r\n        ...orderDetails,\r\n        branch: theBranch !== undefined ? theBranch : null,\r\n      });\r\n\r\n      //set work period\r\n      let theWorkPeriod = null;\r\n      if (theBranch !== undefined && theBranch !== null) {\r\n        theWorkPeriod =\r\n          workPeriodForSearch &&\r\n          workPeriodForSearch.filter((tempWorkPeriod) => {\r\n            return theBranch.id === parseInt(tempWorkPeriod.branch_id);\r\n          });\r\n\r\n        //filter it with ended_at === null;\r\n        theWorkPeriod =\r\n          theWorkPeriod &&\r\n          theWorkPeriod.find((endAtNullItem) => {\r\n            return endAtNullItem.ended_at === null;\r\n          });\r\n      }\r\n      //set work period here\r\n      setNewSettings({\r\n        ...newSettings,\r\n        vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\r\n        workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n      });\r\n    } else {\r\n      // user type admin\r\n      setNewSettings({\r\n        ...newSettings,\r\n        vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\r\n      });\r\n    }\r\n    setOrderDetailusers({\r\n      theCustomers: customerForSearch ? customerForSearch : null,\r\n      theTables: tableForSearch ? tableForSearch : null,\r\n      theWaiters: waiterForSearch ? waiterForSearch : null,\r\n    });\r\n  }, [\r\n    authUserInfo,\r\n    workPeriodForSearch,\r\n    customerForSearch,\r\n    tableForSearch,\r\n    branchForSearch,\r\n    waiterForSearch,\r\n    generalSettings,\r\n    foodGroupForSearch,\r\n    foodForSearch,\r\n  ]);\r\n\r\n  //add new item to order list\r\n  const handleOrderItem = (tempFoodItem) => {\r\n    let oldOrderItems = [];\r\n    let newOrderItem = null;\r\n    let tempSelectedVariations = [];\r\n    if (newOrder) {\r\n      newOrder.map((eachOldOrderItem) => {\r\n        //push all old items to new array to setNewOrder\r\n        oldOrderItems.push(eachOldOrderItem);\r\n\r\n        //set selected variations of each order item\r\n        let tempArray = [];\r\n        if (eachOldOrderItem.variation !== null) {\r\n          tempArray.push(eachOldOrderItem.variation.food_with_variation_id);\r\n        } else {\r\n          tempArray.push(null);\r\n        }\r\n        tempSelectedVariations.push(tempArray);\r\n      });\r\n      //add new order item\r\n      newOrderItem = {\r\n        item: tempFoodItem,\r\n        variation:\r\n          parseInt(tempFoodItem.has_variation) === 1\r\n            ? tempFoodItem.variations[0]\r\n            : null,\r\n        quantity: 1,\r\n      };\r\n      //set selected variations of new item\r\n      let tempArray = [];\r\n      if (parseInt(tempFoodItem.has_variation) === 1) {\r\n        tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n      } else {\r\n        tempArray.push(null);\r\n      }\r\n      tempSelectedVariations.push(tempArray);\r\n      //push new item to new array to setNewOrder\r\n      oldOrderItems.push(newOrderItem);\r\n    } else {\r\n      //if no item in newOrder List\r\n      setOrderDetails({\r\n        //set token here on first order item add,\r\n        ...orderDetails,\r\n        token: {\r\n          time: new Date().getTime(),\r\n          id: Math.floor(1000 + Math.random() * 9000),\r\n        },\r\n      });\r\n      newOrderItem = {\r\n        //add new order item\r\n        item: tempFoodItem,\r\n        variation:\r\n          parseInt(tempFoodItem.has_variation) === 1\r\n            ? tempFoodItem.variations[0]\r\n            : null,\r\n        quantity: 1,\r\n      };\r\n\r\n      //set selected variations of new item\r\n      let tempArray = [];\r\n      if (parseInt(tempFoodItem.has_variation) === 1) {\r\n        tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n      } else {\r\n        tempArray.push(null);\r\n      }\r\n      tempSelectedVariations.push(tempArray);\r\n\r\n      //push new item to new array to setNewOrder\r\n      oldOrderItems.push(newOrderItem);\r\n    }\r\n\r\n    //set new order list with new array of all order items\r\n    setNewOrder(oldOrderItems);\r\n\r\n    //set order list active item index to add class \"actve\"\r\n    setActiveItemInOrder(oldOrderItems.length - 1);\r\n\r\n    //set selected variations\r\n    setSelectedVariation(tempSelectedVariations);\r\n\r\n    //calculate subTotalPrice\r\n    totalPrice(oldOrderItems);\r\n\r\n    //sound\r\n    if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n      let beep = document.getElementById(\"myAudio\");\r\n      beep.play();\r\n    }\r\n  };\r\n\r\n  //set order item's variation on change of variation\r\n  const handleOrderItemVariation = (tempFoodItemVariation) => {\r\n    if (activeItemInOrder !== null) {\r\n      if (newOrder) {\r\n        let oldOrderItems = []; //array to push order items\r\n        let newOrderItemTemp = null; //to edit selected item\r\n        let tempSelectedVariations = []; //to set selected variations array for order items\r\n        newOrder.map((newOrderItem, index) => {\r\n          let tempArray = [];\r\n          if (index === activeItemInOrder) {\r\n            //changing variation of selected food item\r\n            newOrderItemTemp = {\r\n              ...newOrderItem,\r\n              variation: tempFoodItemVariation,\r\n            };\r\n            //push updated item to orderlist\r\n            oldOrderItems.push(newOrderItemTemp);\r\n\r\n            //set updated variation for selected variation\r\n            tempArray.push(tempFoodItemVariation.food_with_variation_id);\r\n          } else {\r\n            //set other items as it was which are not selected to edit\r\n            newOrderItemTemp = newOrderItem;\r\n            oldOrderItems.push(newOrderItemTemp);\r\n            if (newOrderItemTemp.variation) {\r\n              //set updated variation for selected variations\r\n              tempArray.push(newOrderItemTemp.variation.food_with_variation_id);\r\n            }\r\n          }\r\n\r\n          //push to the array to set selectedVariations\r\n          tempSelectedVariations.push(tempArray);\r\n        });\r\n        //set variations here\r\n        setSelectedVariation(tempSelectedVariations);\r\n\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n      }\r\n    }\r\n  };\r\n\r\n  //to check which variation is selected\r\n  const checkChecked = (variationItem) => {\r\n    //if variationItem.food_with_variation_id of selected item exist in selectedVariation - return true\r\n    if (selectedVariation[activeItemInOrder] !== undefined) {\r\n      if (\r\n        selectedVariation[activeItemInOrder][0] ===\r\n        variationItem.food_with_variation_id\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of item from order list\r\n  const handleDeleteConfirmation = (removeIndex) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleRemoveItemFromOrderList(removeIndex);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //remove item from order list\r\n  const handleRemoveItemFromOrderList = (removeIndex) => {\r\n    let oldOrderItems = []; //array to push order items\r\n    newOrder.map((newOrderItem, index) => {\r\n      if (index !== removeIndex) {\r\n        //push item to orderlist\r\n        oldOrderItems.push(newOrderItem);\r\n      }\r\n    });\r\n\r\n    //delete variations here\r\n    let tempSelectedVariations = selectedVariation.filter(\r\n      (selectedVariationItem, variationIndex) => {\r\n        return variationIndex !== removeIndex;\r\n      }\r\n    );\r\n    //delete properties here\r\n    let tempSelectedProperties = selectedProperties.filter(\r\n      (selectedPropertyItem, propertyIndex) => {\r\n        return propertyIndex !== removeIndex;\r\n      }\r\n    );\r\n\r\n    //delete property group here\r\n    let tempSelectedPropertyGroup = selectedPropertyGroup.filter(\r\n      (selectedPropertyGroupItem, propertyGroupIndex) => {\r\n        return propertyGroupIndex !== removeIndex;\r\n      }\r\n    );\r\n\r\n    //set property group here\r\n    setSelectedPropertyGroup(tempSelectedPropertyGroup);\r\n\r\n    //set variations here\r\n    setSelectedVariation(tempSelectedVariations);\r\n\r\n    //set properties here\r\n    setSelectedProperties(tempSelectedProperties);\r\n\r\n    //set updated order list\r\n    setNewOrder(oldOrderItems);\r\n\r\n    //set active item in order list\r\n    setActiveItemInOrder(null);\r\n\r\n    //calculate subTotalPrice\r\n    totalPrice(oldOrderItems);\r\n    //sound\r\n    if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n      let beep = document.getElementById(\"myAudio\");\r\n      beep.play();\r\n    }\r\n  };\r\n\r\n  //handle order item quantity\r\n  const handleOrderItemQty = (action) => {\r\n    if (activeItemInOrder !== null) {\r\n      if (newOrder) {\r\n        let newOrderItemTemp = null; //to edit selected item\r\n        let oldOrderItems = []; //array to push order items\r\n        newOrder.map((newOrderItem, index) => {\r\n          if (index === activeItemInOrder) {\r\n            //update qty here\r\n            if (action === \"+\") {\r\n              //increase qty\r\n              newOrderItemTemp = {\r\n                ...newOrderItem,\r\n                quantity: newOrderItem.quantity + 1,\r\n              };\r\n            } else {\r\n              //if qty !==1 decrease\r\n              if (newOrderItem.quantity !== 1) {\r\n                newOrderItemTemp = {\r\n                  ...newOrderItem,\r\n                  quantity: newOrderItem.quantity - 1,\r\n                };\r\n              } else {\r\n                newOrderItemTemp = {\r\n                  ...newOrderItem,\r\n                  quantity: newOrderItem.quantity,\r\n                };\r\n              }\r\n            }\r\n            oldOrderItems.push(newOrderItemTemp);\r\n          } else {\r\n            // set other items as it was which are not selected to edit\r\n            oldOrderItems.push(newOrderItem);\r\n          }\r\n        });\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n      }\r\n    }\r\n  };\r\n\r\n  //cancel order confirmation\r\n  const handleCancelConfirmation = () => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body bg-primary text-white\">\r\n            <h1 className=\"text-white\">{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">\r\n              {_t(t(\"You want to cancel this order?\"))}\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-warning text-dark\"\r\n                onClick={() => {\r\n                  handleCancel();\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //cancel order\r\n  const handleCancel = () => {\r\n    setLoading(true);\r\n    setNewOrder(null);\r\n    setActiveItemInOrder(null);\r\n    setSelectedVariation([]);\r\n    setSelectedPropertyGroup([]);\r\n    setSelectedProperties([]);\r\n    setTheSubTotal(0);\r\n    setTheVat(0);\r\n    setTotalPaybale(0);\r\n    setReturnMoneyUsd(0);\r\n    setPaidMoney(0);\r\n    setOrderDetails({\r\n      branch: orderDetails.branch,\r\n      customer: null,\r\n      table: null,\r\n      waiter: null,\r\n      dept_tag: null,\r\n      payment_type: null,\r\n      payment_amount: null,\r\n      total_guest: 1,\r\n      newCustomer: false,\r\n      newCustomerInfo: {\r\n        name: \"\",\r\n        number: \"\",\r\n      },\r\n      token: null,\r\n      serviceCharge: 0,\r\n      discount: 0,\r\n    });\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 200);\r\n  };\r\n\r\n  //add properties\r\n  const handleAddProperties = (property) => {\r\n    let propertyItem = {\r\n      item: property,\r\n      quantity: 1,\r\n    };\r\n    if (activeItemInOrder !== null) {\r\n      if (newOrder) {\r\n        let oldOrderItems = []; //array to push order items\r\n        let newOrderItemTemp = null; //to edit selected item\r\n\r\n        let tempSelectedProperties = []; //to set selected properties array for order items\r\n        let tempSelectedPropertyGroup = []; //to set selected property group array for order items properties\r\n\r\n        newOrder.map((newOrderItem, index) => {\r\n          let tempArray = []; //for selected properties\r\n          let tempArrayPropertyGroup = []; //for selected property groups\r\n\r\n          if (index === activeItemInOrder) {\r\n            let tempPropertyArray = []; //for property items\r\n            if (newOrderItem.properties) {\r\n              newOrderItem.properties.map((eachPropertyItem) => {\r\n                tempPropertyArray.push(eachPropertyItem);\r\n                //set updated property for selected variation\r\n                tempArray.push(eachPropertyItem.item.id);\r\n\r\n                //handle selected property group\r\n                tempArrayPropertyGroup.push(\r\n                  eachPropertyItem.item.property_group_id\r\n                );\r\n              });\r\n              tempPropertyArray.push(propertyItem);\r\n              //for selected properties\r\n              tempArray.push(propertyItem.item.id);\r\n              //handle selected property group\r\n              tempArrayPropertyGroup.push(propertyItem.item.property_group_id);\r\n            } else {\r\n              tempPropertyArray.push(propertyItem);\r\n              //for selected properties\r\n              tempArray.push(propertyItem.item.id);\r\n              //handle selected property group\r\n              tempArrayPropertyGroup.push(propertyItem.item.property_group_id);\r\n            }\r\n\r\n            //changing properties of selected food item\r\n            newOrderItemTemp = {\r\n              ...newOrderItem,\r\n              properties: tempPropertyArray,\r\n            };\r\n            //push updated item to orderlist\r\n            oldOrderItems.push(newOrderItemTemp);\r\n          } else {\r\n            // set other items as it was which are not selected to edit\r\n            newOrderItemTemp = newOrderItem;\r\n            oldOrderItems.push(newOrderItemTemp);\r\n            if (newOrderItem.properties) {\r\n              newOrderItem.properties.map((eachPropertyItem) => {\r\n                //set updated properties for selected properties\r\n                tempArray.push(eachPropertyItem.item.id);\r\n\r\n                //set updated property groups for selected groups\r\n                tempArrayPropertyGroup.push(\r\n                  eachPropertyItem.item.property_group_id\r\n                );\r\n              });\r\n            }\r\n          }\r\n          //push to the array to set selected properties\r\n          tempSelectedProperties.push(tempArray);\r\n          //push to the array to set selected property groups\r\n          tempSelectedPropertyGroup.push(tempArrayPropertyGroup);\r\n        });\r\n\r\n        //set selected properties here\r\n        setSelectedProperties(tempSelectedProperties);\r\n\r\n        //handle selected property groups\r\n        let newSelectedPropertyGroup = [];\r\n        tempSelectedPropertyGroup.map((eachSelectedGroupArray) => {\r\n          let unique = [...new Set(eachSelectedGroupArray)];\r\n          newSelectedPropertyGroup.push(unique);\r\n        });\r\n        //set selected property groups here\r\n        setSelectedPropertyGroup(newSelectedPropertyGroup);\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n      }\r\n    }\r\n  };\r\n\r\n  //remove properties\r\n  const handleRemoveProperties = (propertyItem) => {\r\n    if (activeItemInOrder !== null) {\r\n      if (newOrder) {\r\n        let oldOrderItems = []; //array to push order items\r\n        let newOrderItemTemp = null; //to edit selected item\r\n        let newSelectedProperties = []; //for selected properties\r\n        let allPropertyGroups = []; //for selected property groups\r\n\r\n        newOrder.map((newOrderItem, index) => {\r\n          if (index === activeItemInOrder) {\r\n            let tempPropertyArray = []; //for property items\r\n            if (newOrderItem.properties) {\r\n              newOrderItem.properties.map((eachPropertyItem) => {\r\n                if (eachPropertyItem.item.id !== propertyItem.id) {\r\n                  tempPropertyArray.push(eachPropertyItem);\r\n                }\r\n              });\r\n\r\n              //removing properties from selected properties array\r\n              selectedProperties.map((selectedProperty, propertyIndex) => {\r\n                if (propertyIndex !== activeItemInOrder) {\r\n                  //pushing other order items properties in selected array\r\n                  newSelectedProperties.push(selectedProperty);\r\n                } else {\r\n                  let theProperties = selectedProperty.filter((filterThis) => {\r\n                    return filterThis !== propertyItem.id;\r\n                  });\r\n                  //pushing this order items properties in selected array or [] if not a single property item is selected\r\n                  newSelectedProperties.push(theProperties);\r\n                }\r\n              });\r\n            }\r\n\r\n            //changing properties of selected food item\r\n            newOrderItemTemp = {\r\n              ...newOrderItem,\r\n              properties: tempPropertyArray,\r\n            };\r\n\r\n            //set selected properties here\r\n            setSelectedProperties(newSelectedProperties);\r\n            //push updated item to orderlist\r\n            oldOrderItems.push(newOrderItemTemp);\r\n\r\n            //property group for selected property group array\r\n            selectedPropertyGroup.map((groupItem, groupItemIndex) => {\r\n              if (index === groupItemIndex) {\r\n                let tempGroupArray = []; // for selected group of each order item (index of array wise new array)\r\n                groupItem.map((filterThisItem) => {\r\n                  if (filterThisItem !== propertyItem.property_group_id) {\r\n                    //push if removable property item's group !== groupItem\r\n                    tempGroupArray.push(filterThisItem);\r\n                  }\r\n                });\r\n\r\n                //push all groups of modified new properties array of this item\r\n                tempPropertyArray.map((pushThis) => {\r\n                  tempGroupArray.push(pushThis.item.property_group_id);\r\n                });\r\n\r\n                //remove duplicate groups\r\n                let unique = [...new Set(tempGroupArray)];\r\n                allPropertyGroups.push(unique);\r\n              } else {\r\n                //keep other selected groups as it was\r\n                allPropertyGroups.push(groupItem);\r\n              }\r\n            });\r\n          } else {\r\n            // set other items as it was which are not selected to edit\r\n            newOrderItemTemp = newOrderItem;\r\n            oldOrderItems.push(newOrderItemTemp);\r\n          }\r\n        });\r\n\r\n        //set new selected property groups\r\n        setSelectedPropertyGroup(allPropertyGroups);\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n      }\r\n    }\r\n  };\r\n\r\n  //to check which property is selected\r\n  const checkCheckedProperties = (propertyItem) => {\r\n    //if property.id of selected item exist in selected properties - return true\r\n    if (selectedProperties[activeItemInOrder] !== undefined) {\r\n      if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  //handle property quantity\r\n  const handlePropertyQty = (propertyItem, action) => {\r\n    if (activeItemInOrder !== null) {\r\n      if (newOrder) {\r\n        let newOrderItemTemp = null; //to edit selected item\r\n        let oldOrderItems = []; //array to push order items\r\n        let tempPropertyItemsArray = []; //for each property items\r\n        newOrder.map((newOrderItem, index) => {\r\n          if (index === activeItemInOrder) {\r\n            //if has property items\r\n            if (newOrderItem.properties) {\r\n              newOrderItem.properties.map((eachPropertyItem) => {\r\n                //loop through the properties to change the specific one's quantity and keep the rest as it was\r\n                if (eachPropertyItem.item.id !== propertyItem.id) {\r\n                  //keep others as it was\r\n                  tempPropertyItemsArray.push(eachPropertyItem);\r\n                } else {\r\n                  //coming here if the specific item's id === selected property item's id\r\n                  let newPropertyItemForQtyUpdate = null;\r\n                  //update qty here\r\n                  if (action === \"+\") {\r\n                    //increase qty\r\n                    newPropertyItemForQtyUpdate = {\r\n                      ...eachPropertyItem,\r\n                      quantity: eachPropertyItem.quantity + 1,\r\n                    };\r\n                    tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\r\n                  } else {\r\n                    //if qty !==1 decrease\r\n                    if (eachPropertyItem.quantity !== 1) {\r\n                      newPropertyItemForQtyUpdate = {\r\n                        ...eachPropertyItem,\r\n                        quantity: eachPropertyItem.quantity - 1,\r\n                      };\r\n                      tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\r\n                    } else {\r\n                      tempPropertyItemsArray.push(eachPropertyItem);\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              //changing properties of selected food item\r\n              newOrderItemTemp = {\r\n                ...newOrderItem,\r\n                properties: tempPropertyItemsArray,\r\n              };\r\n              //push updated item to orderlist\r\n              oldOrderItems.push(newOrderItemTemp);\r\n            } else {\r\n              //push updated item to orderlist\r\n              oldOrderItems.push(newOrderItem);\r\n            }\r\n          } else {\r\n            // set other items as it was which are not selected to edit\r\n            oldOrderItems.push(newOrderItem);\r\n          }\r\n        });\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n      }\r\n    }\r\n  };\r\n\r\n  //to check selected property item's quantity\r\n  const checkCheckedPropertyQuantity = (propertyItem) => {\r\n    //if propertyItem.id of selected item exist in selectedProperties - return the quantity of that property item from the order list item\r\n    if (selectedProperties[activeItemInOrder] !== undefined) {\r\n      if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\r\n        //get order of activeItemInOrder index\r\n        if (newOrder) {\r\n          if (newOrder[activeItemInOrder] !== undefined) {\r\n            let orderItem = newOrder[activeItemInOrder];\r\n            let theItem = orderItem.properties.find((theItemTemp) => {\r\n              return theItemTemp.item.id === propertyItem.id;\r\n            });\r\n            return theItem.quantity;\r\n          } else {\r\n            return 1;\r\n          }\r\n        } else {\r\n          return 1;\r\n        }\r\n      } else {\r\n        return 1;\r\n      }\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  //show price of each item in order list\r\n  const showPriceOfEachOrderItem = (itemIndex) => {\r\n    if (newOrder) {\r\n      let price = 0;\r\n      let orderItem = newOrder[itemIndex];\r\n      //check price * quantity (variation price / item price)\r\n      if (parseInt(orderItem.item.has_variation) === 1) {\r\n        price = parseFloat(orderItem.variation.food_with_variation_price);\r\n      } else {\r\n        price = parseFloat(orderItem.item.price);\r\n      }\r\n\r\n      //calculate total price of properties\r\n      if (orderItem.properties) {\r\n        if (orderItem.properties.length > 0) {\r\n          orderItem.properties.map((getEachItemPrice) => {\r\n            let totalPropertyPrice =\r\n              parseFloat(getEachItemPrice.item.extra_price) *\r\n              getEachItemPrice.quantity;\r\n            price = price + totalPropertyPrice;\r\n          });\r\n        }\r\n      }\r\n\r\n      let formattedPrice = formatPrice(price * orderItem.quantity);\r\n      return formattedPrice;\r\n    }\r\n  };\r\n\r\n  //show total price\r\n  const totalPrice = (allOrderItems) => {\r\n    let subTotal = 0;\r\n    allOrderItems.map((orderItem) => {\r\n      let price = 0;\r\n      //check price * quantity (variation price / item price)\r\n      if (parseInt(orderItem.item.has_variation) === 1) {\r\n        price = parseFloat(orderItem.variation.food_with_variation_price);\r\n      } else {\r\n        price = parseFloat(orderItem.item.price);\r\n      }\r\n\r\n      //calculate total price of properties\r\n      if (orderItem.properties) {\r\n        if (orderItem.properties.length > 0) {\r\n          orderItem.properties.map((getEachItemPrice) => {\r\n            let totalPropertyPrice =\r\n              parseFloat(getEachItemPrice.item.extra_price) *\r\n              getEachItemPrice.quantity;\r\n            price = price + totalPropertyPrice;\r\n          });\r\n        }\r\n      }\r\n      subTotal = subTotal + price * orderItem.quantity;\r\n    });\r\n    setTheSubTotal(subTotal);\r\n\r\n    let tempVat = 0;\r\n    if (newSettings) {\r\n      tempVat = (subTotal * parseFloat(newSettings.vat)) / 100;\r\n      setTheVat(tempVat);\r\n    }\r\n\r\n    let totalPayable = 0;\r\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    let usdServiceCharge =\r\n      parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\r\n    let usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\r\n\r\n    totalPayable = subTotal + tempVat + usdServiceCharge - usdDiscount;\r\n    setTotalPaybale(totalPayable);\r\n\r\n    //calculate paid amount to set return amount\r\n    handleCalculatePaid(orderDetails.payment_amount, orderDetails.payment_type);\r\n  };\r\n\r\n  //search food here\r\n  const handleSearch = (e) => {\r\n    setActiveItemInOrder(null);\r\n    let searchInput = e.target.value.toLowerCase();\r\n    let searchedList = foodForSearch.filter((item) => {\r\n      let lowerCaseItemName = item.name.toLowerCase();\r\n      let lowerCaseItemGroup = item.food_group.toLowerCase();\r\n      return (\r\n        lowerCaseItemName.includes(searchInput) ||\r\n        lowerCaseItemGroup.includes(searchInput)\r\n      );\r\n    });\r\n    setFoodItem({\r\n      foodGroup: null,\r\n      items: searchedList.length > 0 ? searchedList : null,\r\n      selectedItem: null,\r\n      variations: null,\r\n      properties: null,\r\n    });\r\n  };\r\n\r\n  //set order detals additional info here\r\n  //set branch\r\n  const handleSetBranch = (branch) => {\r\n    setLoading(true);\r\n    let tempCustomers =\r\n      customerForSearch !== null &&\r\n      customerForSearch.filter((eachCustomer) => {\r\n        return eachCustomer.branch_id === branch.id;\r\n      });\r\n    let tempTables =\r\n      tableForSearch !== null &&\r\n      tableForSearch.filter((eachTable) => {\r\n        return eachTable.branch_id === branch.id;\r\n      });\r\n    let tempWaiters =\r\n      waiterForSearch !== null &&\r\n      waiterForSearch.filter((eachWaiter) => {\r\n        return eachWaiter.branch_id === branch.id;\r\n      });\r\n    setOrderDetailusers({\r\n      theCustomers: tempCustomers,\r\n      theTables: tempTables,\r\n      theWaiters: tempWaiters,\r\n    });\r\n\r\n    setNewOrder(null);\r\n    setActiveItemInOrder(null);\r\n    setSelectedVariation([]);\r\n    setSelectedPropertyGroup([]);\r\n    setSelectedProperties([]);\r\n    setTheSubTotal(0);\r\n    setTheVat(0);\r\n    setTotalPaybale(0);\r\n    setReturnMoneyUsd(0);\r\n    setPaidMoney(0);\r\n    setOrderDetails({\r\n      branch: branch,\r\n      customer: null,\r\n      table: null,\r\n      waiter: null,\r\n      dept_tag: null,\r\n      payment_type: null,\r\n      payment_amount: null,\r\n      total_guest: 1,\r\n      newCustomer: false,\r\n      newCustomerInfo: {\r\n        name: \"\",\r\n        number: \"\",\r\n      },\r\n      token: null,\r\n      serviceCharge: 0,\r\n      discount: 0,\r\n    });\r\n    // set work period according to branch for admin on branch change\r\n    let theWorkPeriod = null;\r\n    theWorkPeriod =\r\n      workPeriodForSearch &&\r\n      workPeriodForSearch.filter((tempWorkPeriod) => {\r\n        return branch.id === parseInt(tempWorkPeriod.branch_id);\r\n      });\r\n\r\n    theWorkPeriod = theWorkPeriod.find((endAtNullItem) => {\r\n      return endAtNullItem.ended_at === null;\r\n    });\r\n    setNewSettings({\r\n      ...newSettings,\r\n      workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n      vat: newSettings.vat,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 300);\r\n  };\r\n\r\n  //customer\r\n  const handleSetCustomer = (customer) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      customer,\r\n    });\r\n  };\r\n\r\n  //new Customer\r\n  const handleNewCustomer = (e) => {\r\n    //if name is not there, set new customer === false\r\n    if (e.target.name === \"name\") {\r\n      if (e.target.value.length > 0) {\r\n        setOrderDetails({\r\n          ...orderDetails,\r\n          newCustomer: true,\r\n          newCustomerInfo: {\r\n            ...orderDetails.newCustomerInfo,\r\n            [e.target.name]: e.target.value,\r\n          },\r\n        });\r\n      } else {\r\n        setOrderDetails({\r\n          ...orderDetails,\r\n          newCustomer: false,\r\n          newCustomerInfo: {\r\n            ...orderDetails.newCustomerInfo,\r\n            [e.target.name]: e.target.value,\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      //set phn number here\r\n      setOrderDetails({\r\n        ...orderDetails,\r\n        newCustomerInfo: {\r\n          ...orderDetails.newCustomerInfo,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  //  table\r\n  const handleSetTable = (table) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      table,\r\n    });\r\n  };\r\n\r\n  // waiter\r\n  const handleSetWaiter = (waiter) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      waiter,\r\n    });\r\n  };\r\n\r\n  // department tag\r\n  const handleSetDeptTag = (dept_tag) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      dept_tag,\r\n    });\r\n  };\r\n\r\n  //payment type\r\n  const handleSetpaymentType = (payment_type) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      payment_type,\r\n    });\r\n\r\n    //calculate paid amount to set return amount\r\n    handleCalculatePaid(orderDetails.payment_amount, payment_type);\r\n  };\r\n\r\n  //payment type\r\n  const handleTotalGuest = (e) => {\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      total_guest: e.target.value,\r\n    });\r\n  };\r\n\r\n  //payment type amount\r\n  const handlePaymentTypeAmount = (e) => {\r\n    let tempPaymentAmount = {\r\n      ...orderDetails.payment_amount,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n\r\n    setOrderDetails({\r\n      ...orderDetails,\r\n      payment_amount: tempPaymentAmount,\r\n    });\r\n\r\n    //calculate paid amount to set return amount\r\n    handleCalculatePaid(tempPaymentAmount, orderDetails.payment_type);\r\n  };\r\n\r\n  //calculate paid amount\r\n  const handleCalculatePaid = (paymentAmount, paymentType) => {\r\n    let paidAmount = 0;\r\n    if (paymentAmount !== null && paymentType !== null) {\r\n      let thePaymentArray = [];\r\n      if (paymentAmount) {\r\n        thePaymentArray = Object.entries(paymentAmount);\r\n      }\r\n      thePaymentArray.map((eachPaymentItem) => {\r\n        let thePaymentType = paymentType.find((paymentTypeItem) => {\r\n          return paymentTypeItem.id === parseInt(eachPaymentItem[0]);\r\n        });\r\n        if (eachPaymentItem[1] !== \"\") {\r\n          if (\r\n            thePaymentType &&\r\n            thePaymentType.id === parseInt(eachPaymentItem[0])\r\n          ) {\r\n            paidAmount = paidAmount + parseFloat(eachPaymentItem[1]);\r\n          }\r\n        }\r\n      });\r\n      let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n      paidAmount = paidAmount / localCurrency.rate;\r\n      let theReturnMoney = totalPayable - paidAmount;\r\n      setReturnMoneyUsd(theReturnMoney);\r\n    } else {\r\n      setReturnMoneyUsd(0);\r\n    }\r\n    setPaidMoney(paidAmount);\r\n  };\r\n\r\n  //send server req\r\n  const handleSubmitOrder = (e) => {\r\n    e.preventDefault();\r\n    if (newOrder && newOrder.length > 0) {\r\n      if (paidMoney !== 0) {\r\n        toast.error(\r\n          `${_t(\r\n            t(\"Settle order to add payments, or remove payment's amount\")\r\n          )}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            closeButton: false,\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      } else {\r\n        axiosRequest();\r\n      }\r\n    } else {\r\n      toast.error(`${_t(t(\"Please add items in order list\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //axios request for submit\r\n  const axiosRequest = () => {\r\n    let url = BASE_URL + \"/settings/new-order\";\r\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    let formData = {\r\n      branch: orderDetails.branch,\r\n      customer: orderDetails.customer,\r\n      table: orderDetails.table,\r\n      waiter: orderDetails.waiter,\r\n      dept_tag: orderDetails.dept_tag,\r\n      payment_type: orderDetails.payment_type,\r\n      payment_amount: orderDetails.payment_amount,\r\n      newCustomer: orderDetails.newCustomer ? 1 : 0,\r\n      newCustomerInfo: orderDetails.newCustomerInfo,\r\n      token: orderDetails.token,\r\n      total_guest: orderDetails.total_guest,\r\n      orderItems: newOrder,\r\n      serviceCharge: orderDetails.serviceCharge,\r\n      discount: orderDetails.discount,\r\n      subTotal: theSubTotal,\r\n      totalPayable: totalPayable,\r\n      paidMoney: paidMoney,\r\n      theVat: theVat,\r\n      localCurrency: localCurrency,\r\n      workPeriod: newSettings.workPeriod,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"ended\") {\r\n          handlePrint();\r\n          setCustomerForSearch(res.data[1]);\r\n          setOrderDetailusers({\r\n            ...orderDetailUsers,\r\n            theCustomers: res.data[1],\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Please restart the work period\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //handle settle order\r\n  const handleSettleOrder = (e) => {\r\n    e.preventDefault();\r\n    if (newOrder && newOrder.length > 0) {\r\n      if (paidMoney < totalPayable) {\r\n        toast.error(\r\n          `${_t(\r\n            t(\"Please enter paid amount atleast equal to the total bill amount\")\r\n          )}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            closeButton: false,\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      } else {\r\n        axiosRequestForSettle();\r\n      }\r\n    } else {\r\n      toast.error(`${_t(t(\"Please add items in order list\"))}`, {\r\n        position: \"bottom-center\",\r\n        closeButton: false,\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //axios request for settlement\r\n  const axiosRequestForSettle = () => {\r\n    let url = BASE_URL + \"/settings/settle-order\";\r\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    let formData = {\r\n      branch: orderDetails.branch,\r\n      customer: orderDetails.customer,\r\n      table: orderDetails.table,\r\n      waiter: orderDetails.waiter,\r\n      dept_tag: orderDetails.dept_tag,\r\n      payment_type: orderDetails.payment_type,\r\n      payment_amount: orderDetails.payment_amount,\r\n      newCustomer: orderDetails.newCustomer ? 1 : 0,\r\n      newCustomerInfo: orderDetails.newCustomerInfo,\r\n      token: orderDetails.token,\r\n      total_guest: orderDetails.total_guest,\r\n      orderItems: newOrder,\r\n      serviceCharge: orderDetails.serviceCharge,\r\n      discount: orderDetails.discount,\r\n      subTotal: theSubTotal,\r\n      totalPayable: totalPayable,\r\n      paidMoney: paidMoney,\r\n      theVat: theVat,\r\n      localCurrency: localCurrency,\r\n      workPeriod: newSettings.workPeriod,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"ended\") {\r\n          if (res.data !== \"paymentIssue\") {\r\n            handlePrint();\r\n            setCustomerForSearch(res.data[1]);\r\n            setOrderDetailusers({\r\n              ...orderDetailUsers,\r\n              theCustomers: res.data[1],\r\n            });\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(false);\r\n            toast.error(\r\n              `${_t(\r\n                t(\r\n                  \"Please enter paid amount atleast equal to the total bill amount\"\r\n                )\r\n              )}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                closeButton: false,\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Please restart the work period\"))}`, {\r\n            position: \"bottom-center\",\r\n            closeButton: false,\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //print bills\r\n  const componentRef = useRef();\r\n  const component2Ref = useRef();\r\n\r\n  // only print bill\r\n  //for pos manager\r\n  const handleOnlyPrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    onAfterPrint: () => {\r\n      if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\r\n        handleOnlyPrint2();\r\n      }\r\n    },\r\n  });\r\n\r\n  //for kithcen\r\n  const handleOnlyPrint2 = useReactToPrint({\r\n    content: () => component2Ref.current,\r\n  });\r\n\r\n  //after order submit or settle\r\n  //for pos manager\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    onAfterPrint: () => {\r\n      if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\r\n        handlePrint2();\r\n      } else {\r\n        handleOrderSubmitSuccessful();\r\n      }\r\n    },\r\n  });\r\n\r\n  //for kithcen\r\n  const handlePrint2 = useReactToPrint({\r\n    content: () => component2Ref.current,\r\n    onAfterPrint: () => {\r\n      handleOrderSubmitSuccessful();\r\n    },\r\n  });\r\n\r\n  //call after successful order submit and settle\r\n  const handleOrderSubmitSuccessful = () => {\r\n    setNewOrder(null);\r\n    setActiveItemInOrder(null);\r\n    setSelectedVariation([]);\r\n    setSelectedPropertyGroup([]);\r\n    setSelectedProperties([]);\r\n    setTheSubTotal(0);\r\n    setTheVat(0);\r\n    setTotalPaybale(0);\r\n    setReturnMoneyUsd(0);\r\n    setPaidMoney(0);\r\n    setOrderDetails({\r\n      branch: orderDetails.branch,\r\n      customer: null,\r\n      table: null,\r\n      waiter: null,\r\n      dept_tag: null,\r\n      payment_type: null,\r\n      payment_amount: null,\r\n      total_guest: 1,\r\n      newCustomer: false,\r\n      newCustomerInfo: {\r\n        name: \"\",\r\n        number: \"\",\r\n      },\r\n      token: null,\r\n      serviceCharge: 0,\r\n      discount: 0,\r\n    });\r\n    toast.success(`${_t(t(\"Order has been taken\"))}`, {\r\n      position: \"bottom-center\",\r\n      closeButton: false,\r\n      autoClose: 10000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      className: \"text-center toast-notification\",\r\n    });\r\n    //sound\r\n    if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n      let beep = document.getElementById(\"myAudio\");\r\n      beep.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"POS\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* beep sound */}\r\n      <audio id=\"myAudio\">\r\n        <source src=\"/khadyo/assets/beep/beep.mp3\" type=\"audio/mpeg\" />\r\n      </audio>\r\n\r\n      {/* Print bill */}\r\n      <div className=\"d-none\">\r\n        <div ref={componentRef}>\r\n          {newOrder && (\r\n            <div className=\"fk-print t-pt-30 t-pb-30\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <span className=\"d-block fk-print-text fk-print-text--bold text-uppercase fk-print__title text-center mb-2\">\r\n                      {getSystemSettings(generalSettings, \"siteName\")}\r\n                    </span>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-center text-capitalize\">\r\n                      {getSystemSettings(generalSettings, \"address\")}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-center text-capitalize\">\r\n                      {_t(t(\"call\"))}:{\" \"}\r\n                      {getSystemSettings(generalSettings, \"phnNo\")}\r\n                    </p>\r\n                    <hr className=\"mb-0\" />\r\n                    <span className=\"d-block fk-print-text fk-print-text--bold text-uppercase text-center lg-text\">\r\n                      {_t(t(\"Token\"))}: {orderDetails && orderDetails.token.id}\r\n                    </span>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"Vat reg\"))}: {_t(t(\"Applied\"))}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"date\"))}: <Moment format=\"LL\">{new Date()}</Moment>\r\n                      {\", \"}\r\n                      {orderDetails && (\r\n                        <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                      )}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"Total guests\"))}:{\" \"}\r\n                      {orderDetails && orderDetails.total_guest}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"waiter name\"))}:{\" \"}\r\n                      {orderDetails && orderDetails.waiter !== null\r\n                        ? orderDetails.waiter.name\r\n                        : \"\"}\r\n                    </p>\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th\r\n                            scope=\"col\"\r\n                            className=\"fk-print-text fk-print-text--bold sm-text text-capitalize\"\r\n                          >\r\n                            {_t(t(\"item\"))}\r\n                          </th>\r\n                          <th\r\n                            scope=\"col\"\r\n                            className=\"fk-print-text fk-print-text--bold sm-text text-capitalize text-center\"\r\n                          >\r\n                            {_t(t(\"qty\"))}\r\n                          </th>\r\n                          <th\r\n                            scope=\"col\"\r\n                            className=\"fk-print-text fk-print-text--bold sm-text text-capitalize text-right\"\r\n                          >\r\n                            {_t(t(\"price\"))}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {newOrder.map((printItem, printItemIndex) => {\r\n                          return (\r\n                            <tr>\r\n                              <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                <span className=\"d-block\">\r\n                                  {printItem.item.name}\r\n                                </span>\r\n                                {parseInt(printItem.item.has_variation) === 1 &&\r\n                                  printItem.variation && (\r\n                                    <span className=\"xxsm-text d-block\">\r\n                                      {_t(t(\"Variation\"))}:{\" \"}\r\n                                      {printItem.variation.variation_name}\r\n                                    </span>\r\n                                  )}\r\n\r\n                                {/* properties */}\r\n                                {printItem.properties &&\r\n                                  printItem.properties.length > 0 &&\r\n                                  selectedPropertyGroup[printItemIndex] !==\r\n                                    undefined &&\r\n                                  selectedPropertyGroup[printItemIndex].map(\r\n                                    (thisIsGroup) => {\r\n                                      let theGroup =\r\n                                        propertyGroupForSearch &&\r\n                                        propertyGroupForSearch.find(\r\n                                          (theItem) => {\r\n                                            return theItem.id === thisIsGroup;\r\n                                          }\r\n                                        );\r\n                                      return (\r\n                                        <div className=\"d-block\">\r\n                                          <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                            {theGroup && theGroup.name} :\r\n                                          </span>\r\n                                          {printItem.properties.map(\r\n                                            (propertyName, propertyIndex) => {\r\n                                              if (\r\n                                                propertyName.item\r\n                                                  .property_group_id ===\r\n                                                theGroup.id\r\n                                              ) {\r\n                                                return (\r\n                                                  <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                                    {propertyName.item.name}{\" \"}\r\n                                                    <span>\r\n                                                      {\" \"}\r\n                                                      {propertyName.quantity >\r\n                                                        1 &&\r\n                                                        \"(\" +\r\n                                                          propertyName.quantity +\r\n                                                          \")\"}\r\n                                                    </span>\r\n                                                    {printItem.properties\r\n                                                      .length -\r\n                                                      1 !==\r\n                                                      propertyIndex && \",\"}\r\n                                                  </span>\r\n                                                );\r\n                                              } else {\r\n                                                return true;\r\n                                              }\r\n                                            }\r\n                                          )}\r\n                                        </div>\r\n                                      );\r\n                                    }\r\n                                  )}\r\n                              </th>\r\n                              <td className=\"fk-print-text xsm-text text-capitalize text-center\">\r\n                                {printItem.quantity}\r\n                              </td>\r\n                              <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                {currencySymbolLeft()}\r\n                                {showPriceOfEachOrderItem(printItemIndex)}\r\n                                {currencySymbolRight()}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                    <hr />\r\n                    <hr className=\"m-0\" />\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                            <span className=\"d-block\">{_t(t(\"total\"))}</span>\r\n                          </th>\r\n                          <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(theSubTotal)}\r\n                            {currencySymbolRight()}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                            <span className=\"d-block\">\r\n                              {_t(t(\"VAT\"))}\r\n                              {\" (\"}\r\n                              {newSettings && newSettings.vat}%{\")\"}\r\n                            </span>\r\n                          </th>\r\n                          <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(theVat)}\r\n                            {currencySymbolRight()}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                            <span className=\"d-block\">\r\n                              {_t(t(\"Service Charge\"))}\r\n                            </span>\r\n                          </th>\r\n\r\n                          {orderDetails && (\r\n                            <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(orderDetails.serviceCharge)}\r\n                              {currencySymbolRight()}\r\n                            </td>\r\n                          )}\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                            <span className=\"d-block\">{_t(t(\"discount\"))}</span>\r\n                          </th>\r\n                          {orderDetails && (\r\n                            <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(orderDetails.discount)}\r\n                              {currencySymbolRight()}\r\n                            </td>\r\n                          )}\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <hr />\r\n                    <hr />\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <th className=\"fk-print-text fk-print-text--bold sm-text text-capitalize\">\r\n                            <span className=\"d-block\">\r\n                              {_t(t(\"grand total\"))}\r\n                            </span>\r\n                          </th>\r\n                          <td className=\"fk-print-text fk-print-text--bold xsm-text text-capitalize text-right\">\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(totalPayable)}\r\n                            {currencySymbolRight()}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <hr />\r\n                    <hr />\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize text-center\">\r\n                      {_t(t(\"bill prepared by\"))}:{\" \"}\r\n                      {authUserInfo &&\r\n                        authUserInfo.details &&\r\n                        authUserInfo.details.name}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize text-center\">\r\n                      {_t(t(\"looking forward to serve you again\"))}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Print bill kitchen */}\r\n      <div className=\"d-none\">\r\n        <div ref={component2Ref}>\r\n          {newOrder && (\r\n            <div className=\"fk-print t-pt-30 t-pb-30\">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <span className=\"d-block fk-print-text fk-print-text--bold text-uppercase fk-print__title text-center mb-2\">\r\n                      {getSystemSettings(generalSettings, \"siteName\")}\r\n                    </span>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-center text-capitalize\">\r\n                      {getSystemSettings(generalSettings, \"address\")}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-center text-capitalize\">\r\n                      {_t(t(\"call\"))}:{\" \"}\r\n                      {getSystemSettings(generalSettings, \"phnNo\")}\r\n                    </p>\r\n                    <hr className=\"mb-0\" />\r\n                    <span className=\"d-block fk-print-text fk-print-text--bold text-uppercase text-center lg-text\">\r\n                      {_t(t(\"Token\"))}: {orderDetails && orderDetails.token.id}\r\n                    </span>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"date\"))}: <Moment format=\"LL\">{new Date()}</Moment>\r\n                      {\", \"}\r\n                      {orderDetails && (\r\n                        <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                      )}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"Total guests\"))}:{\" \"}\r\n                      {orderDetails && orderDetails.total_guest}\r\n                    </p>\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"waiter name\"))}:{\" \"}\r\n                      {orderDetails && orderDetails.waiter !== null\r\n                        ? orderDetails.waiter.name\r\n                        : \"\"}\r\n                    </p>\r\n                    <table className=\"table mb-0 table-borderless\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th\r\n                            scope=\"col\"\r\n                            className=\"fk-print-text fk-print-text--bold sm-text text-capitalize\"\r\n                          >\r\n                            {_t(t(\"item\"))}\r\n                          </th>\r\n                          <th\r\n                            scope=\"col\"\r\n                            className=\"fk-print-text fk-print-text--bold sm-text text-capitalize text-center\"\r\n                          >\r\n                            {_t(t(\"qty\"))}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {newOrder.map((printItem, printItemIndex) => {\r\n                          return (\r\n                            <tr>\r\n                              <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                <span className=\"d-block\">\r\n                                  {printItem.item.name}\r\n                                </span>\r\n                                {parseInt(printItem.item.has_variation) === 1 &&\r\n                                  printItem.variation && (\r\n                                    <span className=\"xxsm-text d-block\">\r\n                                      {_t(t(\"Variation\"))}:{\" \"}\r\n                                      {printItem.variation.variation_name}\r\n                                    </span>\r\n                                  )}\r\n\r\n                                {/* properties */}\r\n                                {printItem.properties &&\r\n                                  printItem.properties.length > 0 &&\r\n                                  selectedPropertyGroup[printItemIndex] !==\r\n                                    undefined &&\r\n                                  selectedPropertyGroup[printItemIndex].map(\r\n                                    (thisIsGroup) => {\r\n                                      let theGroup =\r\n                                        propertyGroupForSearch &&\r\n                                        propertyGroupForSearch.find(\r\n                                          (theItem) => {\r\n                                            return theItem.id === thisIsGroup;\r\n                                          }\r\n                                        );\r\n                                      return (\r\n                                        <div className=\"d-block\">\r\n                                          <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                            {theGroup && theGroup.name} :\r\n                                          </span>\r\n                                          {printItem.properties.map(\r\n                                            (propertyName, propertyIndex) => {\r\n                                              if (\r\n                                                propertyName.item\r\n                                                  .property_group_id ===\r\n                                                theGroup.id\r\n                                              ) {\r\n                                                return (\r\n                                                  <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                                    {propertyName.item.name}{\" \"}\r\n                                                    <span>\r\n                                                      {\" \"}\r\n                                                      {propertyName.quantity >\r\n                                                        1 &&\r\n                                                        \"(\" +\r\n                                                          propertyName.quantity +\r\n                                                          \")\"}\r\n                                                    </span>\r\n                                                    {printItem.properties\r\n                                                      .length -\r\n                                                      1 !==\r\n                                                      propertyIndex && \",\"}\r\n                                                  </span>\r\n                                                );\r\n                                              } else {\r\n                                                return true;\r\n                                              }\r\n                                            }\r\n                                          )}\r\n                                        </div>\r\n                                      );\r\n                                    }\r\n                                  )}\r\n                              </th>\r\n                              <td className=\"fk-print-text xsm-text text-capitalize text-center\">\r\n                                {printItem.quantity}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n\r\n                    <hr />\r\n                    <hr />\r\n                    <p className=\"mb-0 xsm-text fk-print-text text-capitalize text-center\">\r\n                      {_t(t(\"bill prepared by\"))}:{\" \"}\r\n                      {authUserInfo &&\r\n                        authUserInfo.details &&\r\n                        authUserInfo.details.name}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Menu Addons  */}\r\n      <div className=\"modal fade\" id=\"menuAddons\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-fullscreen\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-start\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {foodItem.selectedItem !== null && foodItem.selectedItem.name}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* Variations */}\r\n              <div className=\"fk-sm-card__container\">\r\n                <div className=\"fk-sm-card__content\">\r\n                  <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                    {_t(t(\"Variations\"))}\r\n                  </h6>\r\n                </div>\r\n                {foodItem.variations && (\r\n                  <span className=\"text-capitalize xxsm-text fk-badge fk-badge--secondary\">\r\n                    {_t(t(\"Required\"))}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <hr />\r\n              <ul className=\"t-list addons-list\">\r\n                {foodItem.variations ? (\r\n                  <>\r\n                    {foodItem.variations.map((variationItem) => {\r\n                      return (\r\n                        <li className=\"addons-list__item\">\r\n                          <div className=\"d-flex align-items-center justify-content-between\">\r\n                            <div className=\"col\">\r\n                              <label className=\"mx-checkbox flex-grow-1\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                  name=\"variation\"\r\n                                  onChange={() => {\r\n                                    handleOrderItemVariation(variationItem);\r\n                                  }}\r\n                                  checked={checkChecked(variationItem)}\r\n                                />\r\n                                <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8\">\r\n                                  {variationItem.variation_name}\r\n                                </span>\r\n                              </label>\r\n                            </div>\r\n                            <div className=\"col text-right\">\r\n                              <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                {currencySymbolLeft()}\r\n                                {formatPrice(\r\n                                  variationItem.food_with_variation_price\r\n                                )}\r\n                                {currencySymbolRight()}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </>\r\n                ) : (\r\n                  <li className=\"addons-list__item\">\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                      <div className=\"col text-center text-primary text-uppercase\">\r\n                        {_t(t(\"No Variations\"))}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                )}\r\n                {/* Variations end*/}\r\n              </ul>\r\n\r\n              <div className={foodItem.properties ? \"\" : \"d-none\"}>\r\n                {/* Property group and items */}\r\n                {foodItem.properties && (\r\n                  <>\r\n                    {foodItem.properties.length > 0 ? (\r\n                      foodItem.properties.map((propertyItem) => {\r\n                        let selectedGroup = null;\r\n                        //property group\r\n                        if (propertyItem.length > 0) {\r\n                          selectedGroup =\r\n                            propertyGroupForSearch &&\r\n                            propertyGroupForSearch.find(\r\n                              (singlePropertyGroup) => {\r\n                                return (\r\n                                  singlePropertyGroup.id ===\r\n                                  propertyItem[0].property_group_id\r\n                                );\r\n                              }\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                          <>\r\n                            <div className=\"fk-sm-card__container t-mt-30\">\r\n                              <div className=\"fk-sm-card__content\">\r\n                                <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                  {selectedGroup && selectedGroup.name}\r\n                                </h6>\r\n                              </div>\r\n                              <span className=\"text-capitalize xxsm-text fk-badge fk-badge--secondary\">\r\n                                {_t(t(\"Optional\"))}\r\n                              </span>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"t-list addons-list\">\r\n                              {propertyItem.map((eachItem) => {\r\n                                return (\r\n                                  <li className=\"addons-list__item\">\r\n                                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                                      <div className=\"col\">\r\n                                        <label className=\"mx-checkbox flex-grow-1\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                            onChange={() => {\r\n                                              newOrder &&\r\n                                                newOrder.map(\r\n                                                  (newOrderItem, index) => {\r\n                                                    if (\r\n                                                      index ===\r\n                                                      activeItemInOrder\r\n                                                    ) {\r\n                                                      if (\r\n                                                        newOrderItem.properties\r\n                                                      ) {\r\n                                                        let theItem = newOrderItem.properties.find(\r\n                                                          (\r\n                                                            eachPropertyItem\r\n                                                          ) => {\r\n                                                            return (\r\n                                                              eachPropertyItem\r\n                                                                .item.id ===\r\n                                                              eachItem.id\r\n                                                            );\r\n                                                          }\r\n                                                        );\r\n\r\n                                                        if (\r\n                                                          theItem === undefined\r\n                                                        ) {\r\n                                                          handleAddProperties(\r\n                                                            eachItem\r\n                                                          );\r\n                                                        } else {\r\n                                                          handleRemoveProperties(\r\n                                                            eachItem\r\n                                                          );\r\n                                                        }\r\n                                                      } else {\r\n                                                        handleAddProperties(\r\n                                                          eachItem\r\n                                                        );\r\n                                                      }\r\n                                                    }\r\n                                                  }\r\n                                                );\r\n                                            }}\r\n                                            checked={checkCheckedProperties(\r\n                                              eachItem\r\n                                            )}\r\n                                          />\r\n                                          <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8\">\r\n                                            {eachItem.name}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"col\">\r\n                                        <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                          {eachItem.allow_multi_quantity ===\r\n                                            1 && (\r\n                                            <span\r\n                                              className=\"fk-qty__icon fk-qty__deduct\"\r\n                                              onClick={() => {\r\n                                                handlePropertyQty(\r\n                                                  eachItem,\r\n                                                  \"-\"\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              <i className=\"las la-minus\"></i>\r\n                                            </span>\r\n                                          )}\r\n                                          {eachItem.allow_multi_quantity ===\r\n                                          1 ? (\r\n                                            <input\r\n                                              type=\"text\"\r\n                                              value={checkCheckedPropertyQuantity(\r\n                                                eachItem\r\n                                              )}\r\n                                              className=\"fk-qty__input t-bg-clear\"\r\n                                              readOnly\r\n                                            />\r\n                                          ) : (\r\n                                            \"-\"\r\n                                          )}\r\n                                          {eachItem.allow_multi_quantity ===\r\n                                            1 && (\r\n                                            <span\r\n                                              className=\"fk-qty__icon fk-qty__add\"\r\n                                              onClick={() => {\r\n                                                handlePropertyQty(\r\n                                                  eachItem,\r\n                                                  \"+\"\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              <i className=\"las la-plus\"></i>\r\n                                            </span>\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"col text-right\">\r\n                                        <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(eachItem.extra_price)}\r\n                                          {currencySymbolRight()}\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  </li>\r\n                                );\r\n                              })}\r\n                            </ul>\r\n                            <hr />\r\n                          </>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <li className=\"addons-list__item\">\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                          <div className=\"col text-center text-primary text-uppercase\">\r\n                            {_t(t(\"No properties\"))}\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              {/* Property group and items */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Menu Addons End */}\r\n\r\n      {/* Show Cart  */}\r\n      <div className=\"modal fade\" id=\"showCart\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-fullscreen\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <h3>{_t(t(\"Order details\"))}</h3>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <span className=\"sm-text font-weight-bold text-uppercase font-italic\">\r\n                    {_t(t(\"Order token\"))}:{\" \"}\r\n                    {newOrder ? (\r\n                      <>\r\n                        #{orderDetails.token.id} -{\" \"}\r\n                        <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"fk-sm-card__container t-mt-30\">\r\n                <div className=\"fk-sm-card__content\">\r\n                  <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                    {_t(t(\"order items\"))}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <ul className=\"t-list addons-list\">\r\n                {/* loop through order list items */}\r\n                {newOrder && newOrder.length > 0 ? (\r\n                  newOrder.map((orderListItem, orderListItemIndex) => {\r\n                    return (\r\n                      <>\r\n                        <li\r\n                          className={`addons-list__item px-1 ${\r\n                            orderListItemIndex === activeItemInOrder && \"active\"\r\n                          }`}\r\n                        >\r\n                          <div\r\n                            className=\"d-flex align-items-center justify-content-between\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              //orderListItem's group wise all items\r\n                              let tempItems =\r\n                                foodForSearch &&\r\n                                foodForSearch.filter((tempItem) => {\r\n                                  return (\r\n                                    tempItem.food_group_id ===\r\n                                    orderListItem.item.food_group_id\r\n                                  );\r\n                                });\r\n\r\n                              //orderListItem's group\r\n                              let foodGroup =\r\n                                foodGroupForSearch &&\r\n                                foodGroupForSearch.find((groupItem) => {\r\n                                  return (\r\n                                    groupItem.id ===\r\n                                    parseInt(orderListItem.item.food_group_id)\r\n                                  );\r\n                                });\r\n\r\n                              // selected pos item\r\n                              let selectedItemTemp =\r\n                                tempItems &&\r\n                                tempItems.find((tempSelectedItem) => {\r\n                                  return (\r\n                                    tempSelectedItem.id ===\r\n                                    orderListItem.item.id\r\n                                  );\r\n                                });\r\n\r\n                              // Set variations, properties, selected item\r\n                              setFoodItem({\r\n                                ...foodItem,\r\n                                foodGroup: foodGroup,\r\n                                items: tempItems,\r\n                                selectedItem: selectedItemTemp,\r\n                                variations:\r\n                                  selectedItemTemp &&\r\n                                  parseInt(selectedItemTemp.has_variation) === 1\r\n                                    ? selectedItemTemp.variations\r\n                                    : null,\r\n                                properties:\r\n                                  selectedItemTemp &&\r\n                                  parseInt(selectedItemTemp.has_property) === 1\r\n                                    ? selectedItemTemp.properties\r\n                                    : null,\r\n                              });\r\n\r\n                              //set active order list index for background color of selected\r\n                              setActiveItemInOrder(orderListItemIndex);\r\n                            }}\r\n                          >\r\n                            <div className=\"col\">\r\n                              <span\r\n                                className={`t-text-heading sm-text text-capitalize d-block ${\r\n                                  orderListItemIndex === activeItemInOrder &&\r\n                                  \"text-white\"\r\n                                }`}\r\n                              >\r\n                                {orderListItem.item.name}\r\n                              </span>\r\n                              {parseInt(orderListItem.item.has_variation) ===\r\n                                1 &&\r\n                                orderListItem.variation && (\r\n                                  <span\r\n                                    className={`xxsm-text text-capitalize d-block ${\r\n                                      orderListItemIndex ===\r\n                                        activeItemInOrder && \"text-white\"\r\n                                    }`}\r\n                                  >\r\n                                    {_t(t(\"Variation\"))}:{\" \"}\r\n                                    {orderListItem.variation.variation_name}\r\n                                  </span>\r\n                                )}\r\n\r\n                              {/* properties */}\r\n                              {orderListItem.properties &&\r\n                                orderListItem.properties.length > 0 &&\r\n                                selectedPropertyGroup[orderListItemIndex] !==\r\n                                  undefined &&\r\n                                selectedPropertyGroup[orderListItemIndex].map(\r\n                                  (thisIsGroup) => {\r\n                                    let theGroup =\r\n                                      propertyGroupForSearch &&\r\n                                      propertyGroupForSearch.find((theItem) => {\r\n                                        return theItem.id === thisIsGroup;\r\n                                      });\r\n                                    return (\r\n                                      <div className=\"d-block\">\r\n                                        <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                          {theGroup && theGroup.name} :\r\n                                        </span>\r\n                                        {orderListItem.properties.map(\r\n                                          (propertyName, propertyIndex) => {\r\n                                            if (\r\n                                              propertyName.item\r\n                                                .property_group_id ===\r\n                                              theGroup.id\r\n                                            ) {\r\n                                              return (\r\n                                                <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                                  {propertyName.item.name}{\" \"}\r\n                                                  <span>\r\n                                                    {\" \"}\r\n                                                    {propertyName.quantity >\r\n                                                      1 &&\r\n                                                      \"(\" +\r\n                                                        propertyName.quantity +\r\n                                                        \")\"}\r\n                                                  </span>\r\n                                                  {orderListItem.properties\r\n                                                    .length -\r\n                                                    1 !==\r\n                                                    propertyIndex && \",\"}\r\n                                                </span>\r\n                                              );\r\n                                            } else {\r\n                                              return true;\r\n                                            }\r\n                                          }\r\n                                        )}\r\n                                      </div>\r\n                                    );\r\n                                  }\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Quantity */}\r\n                            <div className=\"col\">\r\n                              <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                <span\r\n                                  className=\"fk-qty__icon\"\r\n                                  onClick={() => {\r\n                                    handleOrderItemQty(\"-\");\r\n                                  }}\r\n                                >\r\n                                  <i className=\"las la-minus\"></i>\r\n                                </span>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  value={orderListItem.quantity}\r\n                                  className={`fk-qty__input t-bg-clear ${\r\n                                    orderListItemIndex === activeItemInOrder &&\r\n                                    \"text-white\"\r\n                                  }`}\r\n                                  readOnly\r\n                                />\r\n                                <span\r\n                                  className=\"fk-qty__icon\"\r\n                                  onClick={() => {\r\n                                    handleOrderItemQty(\"+\");\r\n                                  }}\r\n                                >\r\n                                  <i className=\"las la-plus\"></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col text-right\">\r\n                              <span\r\n                                className={`t-text-heading text-uppercase sm-text flex-grow-1 ${\r\n                                  orderListItemIndex === activeItemInOrder &&\r\n                                  \"text-white\"\r\n                                }`}\r\n                              >\r\n                                {parseInt(orderListItem.item.has_variation) ===\r\n                                1 ? (\r\n                                  <>\r\n                                    {currencySymbolLeft()}\r\n\r\n                                    {showPriceOfEachOrderItem(\r\n                                      orderListItemIndex\r\n                                    )}\r\n                                    {currencySymbolRight()}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    {currencySymbolLeft()}\r\n                                    {showPriceOfEachOrderItem(\r\n                                      orderListItemIndex\r\n                                    )}\r\n                                    {currencySymbolRight()}\r\n                                  </>\r\n                                )}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <span className=\"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative-mobile\">\r\n                          <span\r\n                            className=\"badge rounded-pill bg-secondary text-capitalize\"\r\n                            onClick={() => {\r\n                              handleRemoveItemFromOrderList(orderListItemIndex);\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-times\"></i>\r\n                          </span>\r\n                        </span>\r\n                      </>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-primary text-center font-weight-bold pt-2 xsm-text text-uppercase\">\r\n                    {_t(t(\"Select food item to add to the list\"))}\r\n                  </div>\r\n                )}\r\n              </ul>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <span className=\"text-capitalize sm-text\">\r\n                        {\" \"}\r\n                        {_t(t(\"sub total\"))}{\" \"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col text-center\">:</div>\r\n                    <div className=\"col text-right\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        {newOrder ? (\r\n                          <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(theSubTotal)}\r\n                            {currencySymbolRight()}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(0)}\r\n                            {currencySymbolRight()}\r\n                          </span>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <span className=\"text-capitalize sm-text\">\r\n                        {_t(t(\"VAT\"))} ({newSettings && newSettings.vat}%)\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col text-center\">:</div>\r\n                    <div className=\"col text-right\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        {currencySymbolLeft()}\r\n                        {formatPrice(theVat)}\r\n                        {currencySymbolRight()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 mb-2\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <span className=\"text-capitalize sm-text\">\r\n                        {\" \"}\r\n                        {_t(t(\"service\"))}{\" \"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col text-center\">:</div>\r\n                    <div className=\"col text-right\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"0.01\"\r\n                          min=\"0\"\r\n                          className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                          onChange={(e) => {\r\n                            if (e.target.value !== \"\") {\r\n                              setOrderDetails({\r\n                                ...orderDetails,\r\n                                serviceCharge: parseFloat(e.target.value),\r\n                              });\r\n                              let totalPayable = 0;\r\n                              let localCurrency = JSON.parse(\r\n                                localStorage.getItem(\"currency\")\r\n                              );\r\n                              let usdServiceCharge =\r\n                                parseFloat(e.target.value) / localCurrency.rate;\r\n                              let usdDiscount =\r\n                                parseFloat(orderDetails.discount) /\r\n                                localCurrency.rate;\r\n\r\n                              totalPayable =\r\n                                theSubTotal +\r\n                                theVat +\r\n                                usdServiceCharge -\r\n                                usdDiscount;\r\n                              setTotalPaybale(totalPayable);\r\n                              setReturnMoneyUsd(totalPayable - paidMoney);\r\n                            } else {\r\n                              setOrderDetails({\r\n                                ...orderDetails,\r\n                                serviceCharge: 0,\r\n                              });\r\n                              let totalPayable = 0;\r\n                              let localCurrency = JSON.parse(\r\n                                localStorage.getItem(\"currency\")\r\n                              );\r\n                              let usdServiceCharge =\r\n                                parseFloat(0) / localCurrency.rate;\r\n                              let usdDiscount =\r\n                                parseFloat(orderDetails.discount) /\r\n                                localCurrency.rate;\r\n\r\n                              totalPayable =\r\n                                theSubTotal +\r\n                                theVat +\r\n                                usdServiceCharge -\r\n                                usdDiscount;\r\n                              setTotalPaybale(totalPayable);\r\n                              setReturnMoneyUsd(totalPayable - paidMoney);\r\n                            }\r\n                          }}\r\n                          value={\r\n                            orderDetails.serviceCharge !== 0 &&\r\n                            orderDetails.serviceCharge\r\n                          }\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <span className=\"text-capitalize sm-text\">\r\n                        {\" \"}\r\n                        {_t(t(\"discount\"))}{\" \"}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col text-center\">:</div>\r\n                    <div className=\"col text-right\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        <input\r\n                          type=\"number\"\r\n                          step=\"0.01\"\r\n                          min=\"0\"\r\n                          className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                          onChange={(e) => {\r\n                            if (e.target.value !== \"\") {\r\n                              setOrderDetails({\r\n                                ...orderDetails,\r\n                                discount: parseFloat(e.target.value),\r\n                              });\r\n                              let totalPayable = 0;\r\n                              let localCurrency = JSON.parse(\r\n                                localStorage.getItem(\"currency\")\r\n                              );\r\n                              let usdServiceCharge =\r\n                                parseFloat(orderDetails.serviceCharge) /\r\n                                localCurrency.rate;\r\n                              let usdDiscount =\r\n                                parseFloat(e.target.value) / localCurrency.rate;\r\n\r\n                              totalPayable =\r\n                                theSubTotal +\r\n                                theVat +\r\n                                usdServiceCharge -\r\n                                usdDiscount;\r\n\r\n                              setTotalPaybale(totalPayable);\r\n                              setReturnMoneyUsd(totalPayable - paidMoney);\r\n                            } else {\r\n                              setOrderDetails({\r\n                                ...orderDetails,\r\n                                discount: 0,\r\n                              });\r\n                              let totalPayable = 0;\r\n                              let localCurrency = JSON.parse(\r\n                                localStorage.getItem(\"currency\")\r\n                              );\r\n                              let usdServiceCharge =\r\n                                parseFloat(orderDetails.serviceCharge) /\r\n                                localCurrency.rate;\r\n                              let usdDiscount =\r\n                                parseFloat(0) / localCurrency.rate;\r\n\r\n                              totalPayable =\r\n                                theSubTotal +\r\n                                theVat +\r\n                                usdServiceCharge -\r\n                                usdDiscount;\r\n                              setTotalPaybale(totalPayable);\r\n                              setReturnMoneyUsd(totalPayable - paidMoney);\r\n                            }\r\n                          }}\r\n                          value={\r\n                            orderDetails.discount !== 0 && orderDetails.discount\r\n                          }\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        {_t(t(\"total bill\"))}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col text-center\">:</div>\r\n                    <div className=\"col text-right\">\r\n                      <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                        {currencySymbolLeft()}\r\n                        {formatPrice(totalPayable)}\r\n                        {currencySymbolRight()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              {totalPayable <= paidMoney && returnMoneyUsd !== 0 && (\r\n                <div className=\"row\">\r\n                  <div className=\"col-12 mb-2\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <span className=\"text-capitalize sm-text font-weight-bold text-primary\">\r\n                          {_t(t(\"Return\"))}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"col text-center\">:</div>\r\n                      <div className=\"col text-right\">\r\n                        <span className=\"text-capitalize sm-text font-weight-bold text-primary\">\r\n                          {currencySymbolLeft()}\r\n                          {formatPrice(Math.abs(returnMoneyUsd))}\r\n                          {currencySymbolRight()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"row py-2 mx-1\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary xsm-text text-uppercase col-3\"\r\n                onClick={handleCancel}\r\n              >\r\n                {_t(t(\"Cancel\"))}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary xsm-text text-uppercase ml-auto mr-1 col-4\"\r\n                onClick={!loading && handleSettleOrder}\r\n              >\r\n                {!loading ? _t(t(\"settle\")) : _t(t(\"Please wait\"))}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success xsm-text text-uppercase col-4\"\r\n                onClick={!loading && handleSubmitOrder}\r\n              >\r\n                {!loading ? _t(t(\"submit\")) : _t(t(\"Please wait\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Show Cart End */}\r\n\r\n      {/* Extra Info  */}\r\n      <div className=\"modal fade\" id=\"extraInfo\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-fullscreen\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {_t(t(\"additional information\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <ul className=\"t-list addons-list\">\r\n                {authUserInfo.details &&\r\n                  authUserInfo.details.user_type !== \"staff\" && (\r\n                    <li className=\"addons-list__item mt-1 mx-1\">\r\n                      <Select\r\n                        options={branchForSearch && branchForSearch}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        classNamePrefix=\"select\"\r\n                        className=\"xsm-text\"\r\n                        onChange={handleSetBranch}\r\n                        maxMenuHeight=\"200px\"\r\n                        placeholder={_t(t(\"Branch\")) + \"..\"}\r\n                      />\r\n                    </li>\r\n                  )}\r\n                {!loading && (\r\n                  <>\r\n                    {orderDetails.branch !== null && (\r\n                      <>\r\n                        <li\r\n                          className={`addons-list__item mx-1 ${\r\n                            authUserInfo.details &&\r\n                            authUserInfo.details.user_type === \"staff\" &&\r\n                            \"mt-1\"\r\n                          }`}\r\n                        >\r\n                          <Select\r\n                            options={\r\n                              orderDetailUsers.theCustomers !== null &&\r\n                              orderDetailUsers.theCustomers\r\n                            }\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) =>\r\n                              option.name + \" (\" + option.phn_no + \")\"\r\n                            }\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text\"\r\n                            onChange={handleSetCustomer}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Customer\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n                        <li className=\"addons-list__item mx-1 border border-2 rounded-lg\">\r\n                          <div className=\"btn-group w-100\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\"\r\n                              data-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"\r\n                            >\r\n                              + {_t(t(\"Customer\"))}?\r\n                            </button>\r\n                            <ul className=\"dropdown-menu w-100 border-0 pt-4 change-background\">\r\n                              <li>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"name\"\r\n                                  className=\"form-control font-10px rounded-lg\"\r\n                                  placeholder=\"Name\"\r\n                                  autoComplete=\"off\"\r\n                                  value={orderDetails.newCustomerInfo.name}\r\n                                  onChange={handleNewCustomer}\r\n                                />\r\n                              </li>\r\n                              <li className=\"pb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"number\"\r\n                                  className=\"form-control font-10px mt-2 rounded-lg\"\r\n                                  autoComplete=\"off\"\r\n                                  placeholder=\"Number\"\r\n                                  value={orderDetails.newCustomerInfo.number}\r\n                                  onChange={handleNewCustomer}\r\n                                />\r\n                              </li>\r\n                              <li className=\"pb-1 text-right\">\r\n                                <button\r\n                                  className=\"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\"\r\n                                  onClick={() => {\r\n                                    setOrderDetails({\r\n                                      ...orderDetails,\r\n                                      newCustomer: false,\r\n                                      newCustomerInfo: {\r\n                                        name: \"\",\r\n                                        number: \"\",\r\n                                      },\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"Cancel\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </li>\r\n\r\n                        <li className=\"addons-list__item mx-1\">\r\n                          <Select\r\n                            options={deptTagForSearch && deptTagForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text\"\r\n                            onChange={handleSetDeptTag}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Dept tag\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n                        <li\r\n                          className={`addons-list__item mx-1 payment-type-parent ${\r\n                            orderDetails.payment_type !== null && \"mb-1\"\r\n                          }`}\r\n                        >\r\n                          <Select\r\n                            options={\r\n                              paymentTypeForSearch && paymentTypeForSearch\r\n                            }\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text\"\r\n                            onChange={handleSetpaymentType}\r\n                            maxMenuHeight=\"200px\"\r\n                            isMulti\r\n                            backspaceRemovesValue={false}\r\n                            clearIndicator={null}\r\n                            placeholder={_t(t(\"Payments\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n                        {orderDetails.payment_type !== null && (\r\n                          <div className=\"border mt-0 mb-2 change-background mx-1 rounded-lg\">\r\n                            <div className=\"xsm-text text-center text-white pt-1\">\r\n                              {_t(t(\"Amount\"))}\r\n                            </div>\r\n                            {orderDetails.payment_type.map(\r\n                              (eachPaymentType, paymentTypeIndex) => {\r\n                                return (\r\n                                  <li className=\"addons-list__item mx-1 mb-1\">\r\n                                    <input\r\n                                      type=\"number\"\r\n                                      min=\"0\"\r\n                                      step=\"0.01\"\r\n                                      name={eachPaymentType.id}\r\n                                      autoComplete=\"off\"\r\n                                      className=\"form-control xsm-text pl-2\"\r\n                                      onChange={handlePaymentTypeAmount}\r\n                                      placeholder={eachPaymentType.name}\r\n                                      value={\r\n                                        orderDetails.payment_amount &&\r\n                                        orderDetails.payment_amount[\r\n                                          eachPaymentType.id\r\n                                        ]\r\n                                      }\r\n                                    />\r\n                                  </li>\r\n                                );\r\n                              }\r\n                            )}\r\n                          </div>\r\n                        )}\r\n\r\n                        <li className=\"addons-list__item mx-1\">\r\n                          <Select\r\n                            options={\r\n                              orderDetailUsers.theTables !== null &&\r\n                              orderDetailUsers.theTables\r\n                            }\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text\"\r\n                            onChange={handleSetTable}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Table\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n                        <li className=\"addons-list__item mx-1\">\r\n                          <Select\r\n                            options={\r\n                              orderDetailUsers.theWaiters !== null &&\r\n                              orderDetailUsers.theWaiters\r\n                            }\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text\"\r\n                            onChange={handleSetWaiter}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Waiter\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n\r\n                        <li className=\"addons-list__item mx-1\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control xsm-text py-2 pl-2\"\r\n                            min=\"1\"\r\n                            onChange={handleTotalGuest}\r\n                            placeholder={_t(t(\"Total guests\")) + \"..\"}\r\n                          />\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Extra Info End */}\r\n\r\n      <main id=\"main\" data-simplebar>\r\n        {/* Mobile Screen Only   */}\r\n        <div className=\"d-md-none t-mb-15\">\r\n          {/* Show start work period options here */}\r\n          {newSettings && newSettings.workPeriod === null && (\r\n            <div className=\"fk-left-overlay\">\r\n              <div className=\"fk-left-overlay__content text-center m-auto\">\r\n                <h5\r\n                  className={`text-primary text-uppercase ${\r\n                    authUserInfo.details &&\r\n                    authUserInfo.details.user_type !== \"staff\" &&\r\n                    \"mb-0\"\r\n                  }`}\r\n                >\r\n                  {authUserInfo.details &&\r\n                  authUserInfo.details.user_type !== \"staff\"\r\n                    ? _t(t(\"Select branch to active POS\"))\r\n                    : _t(t(\"start workperiod\"))}\r\n                </h5>\r\n                {authUserInfo.details &&\r\n                  authUserInfo.details.user_type !== \"staff\" && (\r\n                    <>\r\n                      <h6 className=\"mt-1 text-uppercase xsm-text mb-1\">\r\n                        {_t(t(\"Start workperiod if it is not started\"))}\r\n                      </h6>\r\n                      <small className=\"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\">\r\n                        (\r\n                        {_t(\r\n                          t(\"Use staff account not to see this multiple times\")\r\n                        )}\r\n                        )\r\n                      </small>\r\n                    </>\r\n                  )}\r\n                <NavLink\r\n                  to=\"/dashboard\"\r\n                  className=\"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\"\r\n                >\r\n                  {_t(t(\"Goto Dashboard\"))}\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Show start work period options here */}\r\n          {foodGroupForSearch &&\r\n            foodGroupForSearch.map((mobileGroup, mobileGroupIndex) => {\r\n              let tempItems =\r\n                foodForSearch &&\r\n                foodForSearch.filter((tempItem) => {\r\n                  return parseInt(tempItem.food_group_id) === mobileGroup.id;\r\n                });\r\n              return (\r\n                <div\r\n                  className=\"fk-sm-card t-mt-10\"\r\n                  id={`card-${mobileGroupIndex + 1}`}\r\n                >\r\n                  <h3 className=\"mt-0 t-mb-30 text-capitalize\">\r\n                    {mobileGroup.name}\r\n                  </h3>\r\n                  <ul className=\"t-list fk-sm-card-list\">\r\n                    {tempItems !== null && tempItems.length > 0\r\n                      ? [\r\n                          tempItems.map((mobileItem, mobileItemIndex) => {\r\n                            return (\r\n                              <li\r\n                                className=\"fk-sm-card-list__item\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#menuAddons\"\r\n                                key={mobileItemIndex}\r\n                                onClick={() => {\r\n                                  //set active item in order list\r\n                                  setActiveItemInOrder(mobileItemIndex);\r\n                                  // set variations, properties and selected items here\r\n                                  setFoodItem({\r\n                                    ...foodItem,\r\n                                    foodGroup: mobileGroup,\r\n                                    selectedItem: mobileItem,\r\n                                    variations:\r\n                                      mobileItem &&\r\n                                      parseInt(mobileItem.has_variation) === 1\r\n                                        ? mobileItem.variations\r\n                                        : null,\r\n                                    properties:\r\n                                      mobileItem &&\r\n                                      parseInt(mobileItem.has_property) === 1\r\n                                        ? mobileItem.properties\r\n                                        : null,\r\n                                  });\r\n                                  handleOrderItem(mobileItem);\r\n                                }}\r\n                              >\r\n                                <div className=\"fk-sm-card__container align-items-center\">\r\n                                  <div className=\"fk-sm-card__content\">\r\n                                    <h6 className=\"text-capitalize fk-sm-card__title\">\r\n                                      {mobileItem.name}\r\n                                    </h6>\r\n                                    {mobileItem.has_variation === \"0\" && (\r\n                                      <p className=\"t-mt-10 mb-0 sm-text text-uppercase t-text-dark--light-20\">\r\n                                        {currencySymbolLeft()}\r\n                                        {formatPrice(\r\n                                          parseFloat(mobileItem.price)\r\n                                        )}\r\n                                        {currencySymbolRight()}\r\n                                      </p>\r\n                                    )}\r\n                                  </div>\r\n                                  <div className=\"fk-sm-card__action\">\r\n                                    <div\r\n                                      className=\"fk-sm-card__img fk-sm-card__img--1\"\r\n                                      style={{\r\n                                        backgroundImage: `url(${mobileItem.image})`,\r\n                                      }}\r\n                                    ></div>\r\n                                    <div className=\"fk-sm-card__cart\">\r\n                                      <i className=\"las la-plus\"></i>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            );\r\n                          }),\r\n                        ]\r\n                      : \"\"}\r\n                  </ul>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <div className=\"fk-sm-footnav\" style={{ zIndex: 10 }}>\r\n            <div className=\"fk-sm-footnav__container\">\r\n              <ul className=\"t-list fk-sm-footnav__list justify-content-center\">\r\n                <li\r\n                  className=\"fk-sm-footnav__list-item\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#extraInfo\"\r\n                >\r\n                  <span className=\"t-link fk-sm-footnav__link\">\r\n                    <i className=\"las la-edit\"></i>\r\n                  </span>\r\n                </li>\r\n                <li\r\n                  className=\"fk-sm-footnav__list-item\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#showCart\"\r\n                >\r\n                  <span className=\"t-link fk-sm-footnav__link\">\r\n                    <i className=\"las la-shopping-cart\"></i>\r\n                  </span>\r\n                </li>\r\n                <li className=\"fk-sm-footnav__list-item\">\r\n                  <NavLink\r\n                    to=\"/dashboard/pos/submitted\"\r\n                    className=\"t-link fk-sm-footnav__link\"\r\n                  >\r\n                    <i className=\"las la-share-square\"></i>\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Mobile Screen Only   */}\r\n\r\n        {/* Show In Tab   */}\r\n        <div className=\"fk-main d-none d-md-block t-mt-10\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row gx-2\">\r\n              {/* Left Side  */}\r\n              <div className=\"col-md-7\">\r\n                <div className=\"fk-left-over\">\r\n                  {/* Show start work period options here */}\r\n                  {newSettings && newSettings.workPeriod === null && (\r\n                    <div className=\"fk-left-overlay\">\r\n                      <div className=\"fk-left-overlay__content text-center m-auto\">\r\n                        <h5\r\n                          className={`text-primary text-uppercase ${\r\n                            authUserInfo.details &&\r\n                            authUserInfo.details.user_type !== \"staff\" &&\r\n                            \"mb-0\"\r\n                          }`}\r\n                        >\r\n                          {authUserInfo.details &&\r\n                          authUserInfo.details.user_type !== \"staff\"\r\n                            ? _t(t(\"Select branch to active POS\"))\r\n                            : _t(t(\"start workperiod\"))}\r\n                        </h5>\r\n                        {authUserInfo.details &&\r\n                          authUserInfo.details.user_type !== \"staff\" && (\r\n                            <>\r\n                              <h6 className=\"mt-1 text-uppercase xsm-text mb-1\">\r\n                                {_t(t(\"Start workperiod if it is not started\"))}\r\n                              </h6>\r\n                              <small className=\"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\">\r\n                                (\r\n                                {_t(\r\n                                  t(\r\n                                    \"Use staff account not to see this multiple times\"\r\n                                  )\r\n                                )}\r\n                                )\r\n                              </small>\r\n                            </>\r\n                          )}\r\n                        <NavLink\r\n                          to=\"/dashboard\"\r\n                          className=\"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\"\r\n                        >\r\n                          {_t(t(\"Goto Dashboard\"))}\r\n                        </NavLink>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {/* Show start work period options here */}\r\n\r\n                  <div className=\"row gx-2 align-items-center\">\r\n                    <div className=\"col-md-4 col-lg-5 col-xl-6 col-xxl-7\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-2 rounded-0\"\r\n                            placeholder={_t(t(\"Search by name, group\")) + \"..\"}\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-lg-7 col-xl-6 col-xxl-5\">\r\n                      <div className=\"row align-items-center gx-2\">\r\n                        <div className=\"col\">\r\n                          {window.location.pathname ===\r\n                          \"/dashboard/pos/settled\" ? (\r\n                            <NavLink\r\n                              to=\"/refresh\"\r\n                              className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\"\r\n                            >\r\n                              {_t(t(\"Settled\"))}\r\n                            </NavLink>\r\n                          ) : (\r\n                            <NavLink\r\n                              to=\"/dashboard/pos/settled\"\r\n                              className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\"\r\n                            >\r\n                              {_t(t(\"Settled\"))}\r\n                            </NavLink>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          {window.location.pathname ===\r\n                          \"/dashboard/pos/submitted\" ? (\r\n                            <NavLink\r\n                              to=\"/refresh\"\r\n                              className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\"\r\n                            >\r\n                              {_t(t(\"Submitted\"))}\r\n                            </NavLink>\r\n                          ) : (\r\n                            <NavLink\r\n                              to=\"/dashboard/pos/submitted\"\r\n                              className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\"\r\n                            >\r\n                              {_t(t(\"Submitted\"))}\r\n                            </NavLink>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row t-mt-10 gx-2\">\r\n                    {/* Left Menu   */}\r\n                    <div className=\"col-md-4 col-xl-3\">\r\n                      <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                        <ul className=\"t-list fk-pos-nav list-group\">\r\n                          {/* Food groups */}\r\n                          {foodGroupForSearch &&\r\n                            foodGroupForSearch.map((groupItem, groupIndex) => {\r\n                              return (\r\n                                <li\r\n                                  className=\"fk-pos-nav__list\"\r\n                                  key={groupIndex}\r\n                                >\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                      // set active group, group items, initial item active, todo:: set variations and properties\r\n                                      let tempItems =\r\n                                        foodForSearch &&\r\n                                        foodForSearch.filter((tempItem) => {\r\n                                          return (\r\n                                            parseInt(tempItem.food_group_id) ===\r\n                                            groupItem.id\r\n                                          );\r\n                                        });\r\n\r\n                                      if (tempItems && tempItems.length > 0) {\r\n                                        setFoodItem({\r\n                                          ...foodItem,\r\n                                          foodGroup: groupItem,\r\n                                          items: tempItems,\r\n                                          selectedItem:\r\n                                            tempItems && tempItems[0],\r\n                                          variations:\r\n                                            tempItems &&\r\n                                            parseInt(\r\n                                              tempItems[0].has_variation\r\n                                            ) === 1\r\n                                              ? tempItems[0].variations\r\n                                              : null,\r\n                                          properties:\r\n                                            tempItems &&\r\n                                            parseInt(\r\n                                              tempItems[0].has_property\r\n                                            ) === 1\r\n                                              ? tempItems[0].properties\r\n                                              : null,\r\n                                        });\r\n                                      } else {\r\n                                        setFoodItem({\r\n                                          foodGroup: groupItem,\r\n                                          items: null,\r\n                                          selectedItem: null,\r\n                                          variations: null,\r\n                                          properties: null,\r\n                                        });\r\n                                      }\r\n\r\n                                      //set active item in order list\r\n                                      setActiveItemInOrder(null);\r\n                                    }}\r\n                                    //set active or !\r\n                                    className={`w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase ${\r\n                                      foodItem.foodGroup &&\r\n                                      foodItem.foodGroup.id === groupItem.id &&\r\n                                      \"active\"\r\n                                    }`}\r\n                                  >\r\n                                    {groupItem.name}\r\n                                  </button>\r\n                                </li>\r\n                              );\r\n                            })}\r\n                          {/* Food groups */}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                    {/* Left Menu  End */}\r\n\r\n                    {/* Dish Addons   */}\r\n                    <div className=\"col-md-8 col-xl-9\">\r\n                      <div className=\"\">\r\n                        <div className=\"active\" id=\"nav-1\">\r\n                          <div className=\"row gx-1\">\r\n                            <div className=\"col-xl-6 col-xxl-5 order-xl-2\">\r\n                              <div className=\"tab-content t-mb-10 mb-xl-0\">\r\n                                <div className=\"\" id=\"addons-1\">\r\n                                  <div className=\"t-bg-white\">\r\n                                    <div\r\n                                      className=\"fk-addons-variation\"\r\n                                      data-simplebar\r\n                                    >\r\n                                      {/* Variations */}\r\n                                      <div className=\"fk-addons-table\">\r\n                                        <div className=\"fk-addons-table__head text-center\">\r\n                                          {_t(t(\"variations\"))}\r\n                                        </div>\r\n                                        {foodItem.variations ? (\r\n                                          <>\r\n                                            <div className=\"fk-addons-table__info\">\r\n                                              <div className=\"row g-0\">\r\n                                                <div className=\"col-8 pl-3 border-right\">\r\n                                                  <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                    {_t(t(\"name\"))}\r\n                                                  </span>\r\n                                                </div>\r\n                                                <div className=\"col-4 text-center\">\r\n                                                  <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                    {_t(t(\"price\"))}\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                            <div className=\"fk-addons-table__body\">\r\n                                              {foodItem.variations.map(\r\n                                                (variationItem) => {\r\n                                                  return (\r\n                                                    <div className=\"fk-addons-table__body-row\">\r\n                                                      <div className=\"row g-0\">\r\n                                                        <div className=\"col-8 border-right t-pl-10 t-pr-10\">\r\n                                                          <label className=\"mx-checkbox\">\r\n                                                            <input\r\n                                                              type=\"radio\"\r\n                                                              className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\"\r\n                                                              name=\"variation\"\r\n                                                              onChange={() => {\r\n                                                                handleOrderItemVariation(\r\n                                                                  variationItem\r\n                                                                );\r\n                                                              }}\r\n                                                              checked={checkChecked(\r\n                                                                variationItem\r\n                                                              )}\r\n                                                            />\r\n                                                            <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\">\r\n                                                              {\r\n                                                                variationItem.variation_name\r\n                                                              }\r\n                                                            </span>\r\n                                                          </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-4 text-center\">\r\n                                                          <span className=\"fk-addons-table__body-text sm-text\">\r\n                                                            {currencySymbolLeft()}\r\n                                                            {formatPrice(\r\n                                                              variationItem.food_with_variation_price\r\n                                                            )}\r\n                                                            {currencySymbolRight()}\r\n                                                          </span>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  );\r\n                                                }\r\n                                              )}\r\n                                            </div>\r\n                                          </>\r\n                                        ) : (\r\n                                          <div className=\"fk-addons-table__info py-4\">\r\n                                            <div className=\"row g-0\">\r\n                                              <div className=\"col-12 text-center border-right\">\r\n                                                <span className=\"fk-addons-table__info-text text-capitalize text-primary\">\r\n                                                  {_t(t(\"No variations\"))}\r\n                                                </span>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                      {/* Variations end*/}\r\n\r\n                                      <div\r\n                                        className={\r\n                                          foodItem.properties ? \"\" : \"d-none\"\r\n                                        }\r\n                                      >\r\n                                        {/* Property group and items */}\r\n                                        {foodItem.properties && (\r\n                                          <>\r\n                                            {foodItem.properties.length > 0 ? (\r\n                                              foodItem.properties.map(\r\n                                                (propertyItem) => {\r\n                                                  //property group\r\n                                                  let selectedGroup = null;\r\n                                                  //property group\r\n                                                  if (propertyItem.length > 0) {\r\n                                                    selectedGroup =\r\n                                                      propertyGroupForSearch &&\r\n                                                      propertyGroupForSearch.find(\r\n                                                        (\r\n                                                          singlePropertyGroup\r\n                                                        ) => {\r\n                                                          return (\r\n                                                            singlePropertyGroup.id ===\r\n                                                            propertyItem[0]\r\n                                                              .property_group_id\r\n                                                          );\r\n                                                        }\r\n                                                      );\r\n                                                  }\r\n                                                  return (\r\n                                                    <div className=\"fk-addons-table\">\r\n                                                      <div className=\"fk-addons-table__head text-center\">\r\n                                                        {selectedGroup &&\r\n                                                          selectedGroup.name}\r\n                                                      </div>\r\n                                                      <div className=\"fk-addons-table__info\">\r\n                                                        <div className=\"row g-0\">\r\n                                                          <div className=\"col-5 pl-3 border-right\">\r\n                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                              {_t(t(\"name\"))}\r\n                                                            </span>\r\n                                                          </div>\r\n                                                          <div className=\"col-3 text-center border-right\">\r\n                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                              {_t(t(\"QTY\"))}\r\n                                                            </span>\r\n                                                          </div>\r\n                                                          <div className=\"col-4 text-center\">\r\n                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                              {_t(\r\n                                                                t(\"Unit price\")\r\n                                                              )}\r\n                                                            </span>\r\n                                                          </div>\r\n                                                        </div>\r\n                                                      </div>\r\n                                                      <div className=\"fk-addons-table__body\">\r\n                                                        {propertyItem.map(\r\n                                                          (eachItem) => {\r\n                                                            return (\r\n                                                              <div className=\"fk-addons-table__body-row\">\r\n                                                                <div className=\"row g-0\">\r\n                                                                  <div className=\"col-5 border-right t-pl-10 t-pr-10\">\r\n                                                                    <label className=\"mx-checkbox\">\r\n                                                                      <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\"\r\n                                                                        onChange={() => {\r\n                                                                          newOrder &&\r\n                                                                            newOrder.map(\r\n                                                                              (\r\n                                                                                newOrderItem,\r\n                                                                                index\r\n                                                                              ) => {\r\n                                                                                if (\r\n                                                                                  index ===\r\n                                                                                  activeItemInOrder\r\n                                                                                ) {\r\n                                                                                  if (\r\n                                                                                    newOrderItem.properties\r\n                                                                                  ) {\r\n                                                                                    let theItem = newOrderItem.properties.find(\r\n                                                                                      (\r\n                                                                                        eachPropertyItem\r\n                                                                                      ) => {\r\n                                                                                        return (\r\n                                                                                          eachPropertyItem\r\n                                                                                            .item\r\n                                                                                            .id ===\r\n                                                                                          eachItem.id\r\n                                                                                        );\r\n                                                                                      }\r\n                                                                                    );\r\n\r\n                                                                                    if (\r\n                                                                                      theItem ===\r\n                                                                                      undefined\r\n                                                                                    ) {\r\n                                                                                      handleAddProperties(\r\n                                                                                        eachItem\r\n                                                                                      );\r\n                                                                                    } else {\r\n                                                                                      handleRemoveProperties(\r\n                                                                                        eachItem\r\n                                                                                      );\r\n                                                                                    }\r\n                                                                                  } else {\r\n                                                                                    handleAddProperties(\r\n                                                                                      eachItem\r\n                                                                                    );\r\n                                                                                  }\r\n                                                                                }\r\n                                                                              }\r\n                                                                            );\r\n                                                                        }}\r\n                                                                        checked={checkCheckedProperties(\r\n                                                                          eachItem\r\n                                                                        )}\r\n                                                                      />\r\n                                                                      <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\">\r\n                                                                        {\r\n                                                                          eachItem.name\r\n                                                                        }\r\n                                                                      </span>\r\n                                                                    </label>\r\n                                                                  </div>\r\n                                                                  <div className=\"col-3 text-center border-right\">\r\n                                                                    <div className=\"fk-qty justify-content-center t-pt-10 t-pb-10\">\r\n                                                                      {eachItem.allow_multi_quantity ===\r\n                                                                        1 && (\r\n                                                                        <span\r\n                                                                          className=\"fk-qty__icon fk-qty__deduct\"\r\n                                                                          onClick={() => {\r\n                                                                            handlePropertyQty(\r\n                                                                              eachItem,\r\n                                                                              \"-\"\r\n                                                                            );\r\n                                                                          }}\r\n                                                                        >\r\n                                                                          <i className=\"las la-minus\"></i>\r\n                                                                        </span>\r\n                                                                      )}\r\n                                                                      {eachItem.allow_multi_quantity ===\r\n                                                                      1 ? (\r\n                                                                        <input\r\n                                                                          type=\"text\"\r\n                                                                          value={checkCheckedPropertyQuantity(\r\n                                                                            eachItem\r\n                                                                          )}\r\n                                                                          className=\"fk-qty__input t-bg-clear\"\r\n                                                                          readOnly\r\n                                                                        />\r\n                                                                      ) : (\r\n                                                                        \"-\"\r\n                                                                      )}\r\n                                                                      {eachItem.allow_multi_quantity ===\r\n                                                                        1 && (\r\n                                                                        <span\r\n                                                                          className=\"fk-qty__icon fk-qty__add\"\r\n                                                                          onClick={() => {\r\n                                                                            handlePropertyQty(\r\n                                                                              eachItem,\r\n                                                                              \"+\"\r\n                                                                            );\r\n                                                                          }}\r\n                                                                        >\r\n                                                                          <i className=\"las la-plus\"></i>\r\n                                                                        </span>\r\n                                                                      )}\r\n                                                                    </div>\r\n                                                                  </div>\r\n                                                                  <div className=\"col-4 text-center\">\r\n                                                                    <span className=\"fk-addons-table__body-text sm-text\">\r\n                                                                      {currencySymbolLeft()}\r\n                                                                      {formatPrice(\r\n                                                                        eachItem.extra_price\r\n                                                                      )}\r\n                                                                      {currencySymbolRight()}\r\n                                                                    </span>\r\n                                                                  </div>\r\n                                                                </div>\r\n                                                              </div>\r\n                                                            );\r\n                                                          }\r\n                                                        )}\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  );\r\n                                                }\r\n                                              )\r\n                                            ) : (\r\n                                              <div className=\"fk-addons-table__info py-4\">\r\n                                                <div className=\"row g-0\">\r\n                                                  <div className=\"col-12 text-center border-right\">\r\n                                                    <span className=\"fk-addons-table__info-text text-capitalize text-primary\">\r\n                                                      {_t(t(\"No properties\"))}\r\n                                                    </span>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            )}\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                      {/* Property group and items */}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-xxl-7 order-xl-1\">\r\n                              <div className=\"fk-dish--scroll\" data-simplebar>\r\n                                <div className=\"list-group fk-dish row gx-2\">\r\n                                  {foodItem.items &&\r\n                                    foodItem.items.map(\r\n                                      (tempFoodItem, tempFoodItemIndex) => {\r\n                                        return (\r\n                                          <div\r\n                                            onClick={() => {\r\n                                              // set variations, properties and selected items here\r\n                                              setFoodItem({\r\n                                                ...foodItem,\r\n                                                selectedItem: tempFoodItem,\r\n                                                variations:\r\n                                                  tempFoodItem &&\r\n                                                  parseInt(\r\n                                                    tempFoodItem.has_variation\r\n                                                  ) === 1\r\n                                                    ? tempFoodItem.variations\r\n                                                    : null,\r\n                                                properties:\r\n                                                  tempFoodItem &&\r\n                                                  parseInt(\r\n                                                    tempFoodItem.has_property\r\n                                                  ) === 1\r\n                                                    ? tempFoodItem.properties\r\n                                                    : null,\r\n                                              });\r\n                                              handleOrderItem(tempFoodItem);\r\n                                            }}\r\n                                            className={`fk-dish__link t-mb-10 col-md-6 col-lg-4 col-xl-6 col-xxl-4 t-link border-0 pointer-cursor ${\r\n                                              foodItem.selectedItem &&\r\n                                              foodItem.selectedItem.id ===\r\n                                                tempFoodItem.id &&\r\n                                              \"active\"\r\n                                            }`}\r\n                                          >\r\n                                            <div className=\"fk-dish-card w-100\">\r\n                                              <div className=\"fk-dish-card__img w-100\">\r\n                                                <img\r\n                                                  src={tempFoodItem.image}\r\n                                                  alt=\"\"\r\n                                                  className=\"img-fluid m-auto w-100\"\r\n                                                />\r\n                                              </div>\r\n                                              <span className=\"fk-dish-card__title text-center text-uppercase\">\r\n                                                {tempFoodItem.name}\r\n                                              </span>\r\n                                            </div>\r\n                                          </div>\r\n                                        );\r\n                                      }\r\n                                    )}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* Dish Addons  End */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Left Side End */}\r\n\r\n              {/* Right Side  */}\r\n              <div className=\"col-md-5\">\r\n                <div className=\"row gx-2\">\r\n                  <div className=\"col-md-4 col-xl-3\">\r\n                    <div className=\"fk-right-nav\">\r\n                      <div className=\"row flex-column justify-content-between h-100\">\r\n                        <div className=\"col-12 flex-grow-1\">\r\n                          <div className=\"fk-right-nav__scroll\" data-simplebar>\r\n                            <ul className=\"t-list addons-list\">\r\n                              {authUserInfo.details &&\r\n                                authUserInfo.details.user_type !== \"staff\" && (\r\n                                  <li className=\"addons-list__item mt-1 mx-1\">\r\n                                    <Select\r\n                                      options={\r\n                                        branchForSearch && branchForSearch\r\n                                      }\r\n                                      components={makeAnimated()}\r\n                                      getOptionLabel={(option) => option.name}\r\n                                      getOptionValue={(option) => option.name}\r\n                                      classNamePrefix=\"select\"\r\n                                      className=\"xsm-text\"\r\n                                      onChange={handleSetBranch}\r\n                                      maxMenuHeight=\"200px\"\r\n                                      placeholder={_t(t(\"Branch\")) + \"..\"}\r\n                                    />\r\n                                  </li>\r\n                                )}\r\n                              {!loading && (\r\n                                <>\r\n                                  {orderDetails.branch !== null && (\r\n                                    <>\r\n                                      <li\r\n                                        className={`addons-list__item mx-1 ${\r\n                                          authUserInfo.details &&\r\n                                          authUserInfo.details.user_type ===\r\n                                            \"staff\" &&\r\n                                          \"mt-1\"\r\n                                        }`}\r\n                                      >\r\n                                        <Select\r\n                                          options={\r\n                                            orderDetailUsers.theCustomers !==\r\n                                              null &&\r\n                                            orderDetailUsers.theCustomers\r\n                                          }\r\n                                          components={makeAnimated()}\r\n                                          getOptionLabel={(option) =>\r\n                                            option.name +\r\n                                            \" (\" +\r\n                                            option.phn_no +\r\n                                            \")\"\r\n                                          }\r\n                                          getOptionValue={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          classNamePrefix=\"select\"\r\n                                          className=\"xsm-text\"\r\n                                          onChange={handleSetCustomer}\r\n                                          maxMenuHeight=\"200px\"\r\n                                          placeholder={_t(t(\"Customer\")) + \"..\"}\r\n                                        />\r\n                                      </li>\r\n                                      <li className=\"addons-list__item mx-1 border border-2 rounded-lg\">\r\n                                        <div className=\"btn-group w-100\">\r\n                                          <button\r\n                                            type=\"button\"\r\n                                            className=\"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\"\r\n                                            data-toggle=\"dropdown\"\r\n                                            aria-expanded=\"false\"\r\n                                          >\r\n                                            + {_t(t(\"Customer\"))}?\r\n                                          </button>\r\n                                          <ul className=\"dropdown-menu w-100 border-0 pt-4 change-background\">\r\n                                            <li>\r\n                                              <input\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                className=\"form-control font-10px rounded-lg\"\r\n                                                placeholder=\"Name\"\r\n                                                autoComplete=\"off\"\r\n                                                value={\r\n                                                  orderDetails.newCustomerInfo\r\n                                                    .name\r\n                                                }\r\n                                                onChange={handleNewCustomer}\r\n                                              />\r\n                                            </li>\r\n                                            <li className=\"pb-2\">\r\n                                              <input\r\n                                                type=\"text\"\r\n                                                name=\"number\"\r\n                                                className=\"form-control font-10px mt-2 rounded-lg\"\r\n                                                autoComplete=\"off\"\r\n                                                placeholder=\"Number\"\r\n                                                value={\r\n                                                  orderDetails.newCustomerInfo\r\n                                                    .number\r\n                                                }\r\n                                                onChange={handleNewCustomer}\r\n                                              />\r\n                                            </li>\r\n                                            <li className=\"pb-1 text-right\">\r\n                                              <button\r\n                                                className=\"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\"\r\n                                                onClick={() => {\r\n                                                  setOrderDetails({\r\n                                                    ...orderDetails,\r\n                                                    newCustomer: false,\r\n                                                    newCustomerInfo: {\r\n                                                      name: \"\",\r\n                                                      number: \"\",\r\n                                                    },\r\n                                                  });\r\n                                                }}\r\n                                              >\r\n                                                {_t(t(\"Cancel\"))}\r\n                                              </button>\r\n                                            </li>\r\n                                          </ul>\r\n                                        </div>\r\n                                      </li>\r\n\r\n                                      <li className=\"addons-list__item mx-1\">\r\n                                        <Select\r\n                                          options={\r\n                                            deptTagForSearch && deptTagForSearch\r\n                                          }\r\n                                          components={makeAnimated()}\r\n                                          getOptionLabel={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          getOptionValue={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          classNamePrefix=\"select\"\r\n                                          className=\"xsm-text\"\r\n                                          onChange={handleSetDeptTag}\r\n                                          maxMenuHeight=\"200px\"\r\n                                          placeholder={_t(t(\"Dept tag\")) + \"..\"}\r\n                                        />\r\n                                      </li>\r\n                                      <li\r\n                                        className={`addons-list__item mx-1 payment-type-parent ${\r\n                                          orderDetails.payment_type !== null &&\r\n                                          \"mb-1\"\r\n                                        }`}\r\n                                      >\r\n                                        <Select\r\n                                          options={\r\n                                            paymentTypeForSearch &&\r\n                                            paymentTypeForSearch\r\n                                          }\r\n                                          components={makeAnimated()}\r\n                                          getOptionLabel={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          getOptionValue={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          classNamePrefix=\"select\"\r\n                                          className=\"xsm-text\"\r\n                                          onChange={handleSetpaymentType}\r\n                                          maxMenuHeight=\"200px\"\r\n                                          isMulti\r\n                                          backspaceRemovesValue={false}\r\n                                          clearIndicator={null}\r\n                                          placeholder={_t(t(\"Payments\")) + \"..\"}\r\n                                        />\r\n                                      </li>\r\n                                      {orderDetails.payment_type !== null && (\r\n                                        <div className=\"border mt-0 mb-2 change-background mx-1 rounded-lg\">\r\n                                          <div className=\"xsm-text text-center text-white pt-1\">\r\n                                            {_t(t(\"Amount\"))}\r\n                                          </div>\r\n                                          {orderDetails.payment_type.map(\r\n                                            (\r\n                                              eachPaymentType,\r\n                                              paymentTypeIndex\r\n                                            ) => {\r\n                                              return (\r\n                                                <li className=\"addons-list__item mx-1 mb-1\">\r\n                                                  <input\r\n                                                    type=\"number\"\r\n                                                    min=\"0\"\r\n                                                    step=\"0.01\"\r\n                                                    name={eachPaymentType.id}\r\n                                                    autoComplete=\"off\"\r\n                                                    className=\"form-control xsm-text pl-2\"\r\n                                                    onChange={\r\n                                                      handlePaymentTypeAmount\r\n                                                    }\r\n                                                    placeholder={\r\n                                                      eachPaymentType.name\r\n                                                    }\r\n                                                    value={\r\n                                                      orderDetails.payment_amount &&\r\n                                                      orderDetails\r\n                                                        .payment_amount[\r\n                                                        eachPaymentType.id\r\n                                                      ]\r\n                                                    }\r\n                                                  />\r\n                                                </li>\r\n                                              );\r\n                                            }\r\n                                          )}\r\n                                        </div>\r\n                                      )}\r\n\r\n                                      <li className=\"addons-list__item mx-1\">\r\n                                        <Select\r\n                                          options={\r\n                                            orderDetailUsers.theTables !==\r\n                                              null && orderDetailUsers.theTables\r\n                                          }\r\n                                          components={makeAnimated()}\r\n                                          getOptionLabel={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          getOptionValue={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          classNamePrefix=\"select\"\r\n                                          className=\"xsm-text\"\r\n                                          onChange={handleSetTable}\r\n                                          maxMenuHeight=\"200px\"\r\n                                          placeholder={_t(t(\"Table\")) + \"..\"}\r\n                                        />\r\n                                      </li>\r\n                                      <li className=\"addons-list__item mx-1\">\r\n                                        <Select\r\n                                          options={\r\n                                            orderDetailUsers.theWaiters !==\r\n                                              null &&\r\n                                            orderDetailUsers.theWaiters\r\n                                          }\r\n                                          components={makeAnimated()}\r\n                                          getOptionLabel={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          getOptionValue={(option) =>\r\n                                            option.name\r\n                                          }\r\n                                          classNamePrefix=\"select\"\r\n                                          className=\"xsm-text\"\r\n                                          onChange={handleSetWaiter}\r\n                                          maxMenuHeight=\"200px\"\r\n                                          placeholder={_t(t(\"Waiter\")) + \"..\"}\r\n                                        />\r\n                                      </li>\r\n\r\n                                      <li\r\n                                        className=\"addons-list__item mx-1\"\r\n                                        style={{ paddingBottom: \"100px\" }}\r\n                                      >\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          className=\"form-control xsm-text py-2 pl-2\"\r\n                                          min=\"1\"\r\n                                          onChange={handleTotalGuest}\r\n                                          placeholder={\r\n                                            _t(t(\"Total guest\")) + \"..\"\r\n                                          }\r\n                                        />\r\n                                      </li>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-12 t-mb-10\">\r\n                              <button\r\n                                onClick={() => {\r\n                                  if (newOrder) {\r\n                                    handleOnlyPrint();\r\n                                  } else {\r\n                                    toast.error(\r\n                                      `${_t(\r\n                                        t(\r\n                                          \"Please add items in order list to print bill\"\r\n                                        )\r\n                                      )}`,\r\n                                      {\r\n                                        position: \"bottom-center\",\r\n                                        closeButton: false,\r\n                                        autoClose: 10000,\r\n                                        hideProgressBar: false,\r\n                                        closeOnClick: true,\r\n                                        pauseOnHover: true,\r\n                                        className:\r\n                                          \"text-center toast-notification\",\r\n                                      }\r\n                                    );\r\n                                  }\r\n                                }}\r\n                                className=\"w-100 t-heading-font btn btn-outline-danger font-weight-bold text-uppercase sm-text\"\r\n                              >\r\n                                {_t(t(\"print bill\"))}\r\n                              </button>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                              <button\r\n                                className=\"w-100 t-heading-font btn btn-primary font-weight-bold text-uppercase sm-text\"\r\n                                onClick={handleCancelConfirmation}\r\n                              >\r\n                                {_t(t(\"cancel\"))}\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-8 col-xl-9\">\r\n                    <div className=\"fk-right-nav p-2 p-xl-3 t-bg-white\">\r\n                      {/* Disply Only Small Screen   */}\r\n                      <div className=\"h-100 w-100 d-none\" data-simplebar>\r\n                        <div className=\"fk-receipt-content\">\r\n                          <div className=\"fk-receipt-body t-mt-10\">\r\n                            <div className=\"row g-0\">\r\n                              <div className=\"col-12\">\r\n                                <span className=\"sm-text font-weight-bold text-uppercase font-italic\">\r\n                                  {_t(t(\"Order token\"))}:{\" \"}\r\n                                  {newOrder ? (\r\n                                    <>\r\n                                      #{orderDetails.token.id} -{\" \"}\r\n                                      <Moment format=\"LT\">\r\n                                        {orderDetails.token.time}\r\n                                      </Moment>\r\n                                    </>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"fk-sm-card__container t-mt-30\">\r\n                              <div className=\"fk-sm-card__content\">\r\n                                <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                  food items\r\n                                </h6>\r\n                                <p className=\"mb-0 xsm-text t-text-heading fk-sm-card__description text-capitalize\">\r\n                                  properties & bill\r\n                                </p>\r\n                              </div>\r\n                              <span className=\"text-capitalize xxsm-text fk-badge fk-badge--dark\">\r\n                                total\r\n                              </span>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"t-list addons-list\">\r\n                              <li className=\"addons-list__item active\">\r\n                                <div className=\"d-flex align-items-center justify-content-between\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\" sm-text text-capitalize\">\r\n                                      chicken burger\r\n                                    </span>\r\n                                    <span className=\" xsm-text text-capitalize d-block\">\r\n                                      large\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                      <span className=\"fk-qty__icon fk-qty__deduct\">\r\n                                        <i className=\"las la-minus\"></i>\r\n                                      </span>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value=\"0\"\r\n                                        className=\"fk-qty__input\"\r\n                                      />\r\n                                      <span className=\"fk-qty__icon fk-qty__add\">\r\n                                        <i className=\"las la-plus\"></i>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\" text-uppercase sm-text flex-grow-1\">\r\n                                      +tk 100\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                              <li className=\"addons-list__item\">\r\n                                <div className=\"d-flex align-items-center justify-content-between\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"t-text-heading sm-text text-capitalize\">\r\n                                      beef burger\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col\">\r\n                                    <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                      <span className=\"fk-qty__icon fk-qty__deduct\">\r\n                                        <i className=\"las la-minus\"></i>\r\n                                      </span>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value=\"0\"\r\n                                        className=\"fk-qty__input\"\r\n                                      />\r\n                                      <span className=\"fk-qty__icon fk-qty__add\">\r\n                                        <i className=\"las la-plus\"></i>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                      +tk 230\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </li>\r\n                            </ul>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                              <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"text-capitalize sm-text\">\r\n                                      sub total\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col text-center\">:</div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      {newOrder ? (\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(theSubTotal)}\r\n                                          {currencySymbolRight()}\r\n                                        </span>\r\n                                      ) : (\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(0)}\r\n                                          {currencySymbolRight()}\r\n                                        </span>\r\n                                      )}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"text-capitalize sm-text\">\r\n                                      VAT ({newSettings && newSettings.vat}%)\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col text-center\">:</div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      {currencySymbolLeft()}\r\n                                      {formatPrice(theVat)}\r\n                                      {currencySymbolRight()}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"text-capitalize sm-text\">\r\n                                      service\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col text-center\">:</div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      20.00\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"text-capitalize sm-text\">\r\n                                      discount\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col text-center\">:</div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      100.00\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                              <div className=\"col-12\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      total bill\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col text-center\">:</div>\r\n                                  <div className=\"col text-right\">\r\n                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                      2000.00\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                              <div className=\"col-6\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary w-100 xsm-text text-uppercase\"\r\n                                >\r\n                                  settle\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"col-6\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-success w-100 xsm-text text-uppercase\"\r\n                                >\r\n                                  submit\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* Disply Only Small Screen End  */}\r\n\r\n                      {/* Display Only Large Screen   */}\r\n                      <div className=\"h-100 w-100 d-none d-md-block\">\r\n                        <div className=\"fk-price-table\">\r\n                          <div className=\"fk-price-table__head\">\r\n                            <div className=\"row gx-0 align-items-center\">\r\n                              <div className=\"col-12 text-right\">\r\n                                <span className=\"d-block sm-text font-weight-bold text-uppercase\">\r\n                                  {_t(t(\"Order token\"))}:{\" \"}\r\n                                  {newOrder ? (\r\n                                    <>\r\n                                      #{orderDetails.token.id} -{\" \"}\r\n                                      <Moment format=\"LT\">\r\n                                        {orderDetails.token.time}\r\n                                      </Moment>\r\n                                    </>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"fk-price-table__body t-mt-10\">\r\n                            <div className=\"fk-price-table__body-top\">\r\n                              <div className=\"fk-table\">\r\n                                <div className=\"fk-table__head\">\r\n                                  <div className=\"row g-0 border\">\r\n                                    <div className=\"col-1 text-center border-right\">\r\n                                      <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                        {_t(t(\"S/L\"))}\r\n                                      </span>\r\n                                    </div>\r\n                                    <div className=\"col-6 text-center border-right\">\r\n                                      <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                        {_t(t(\"food item\"))}\r\n                                      </span>\r\n                                    </div>\r\n                                    <div className=\"col-2 text-center border-right\">\r\n                                      <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                        {_t(t(\"QTY\"))}\r\n                                      </span>\r\n                                    </div>\r\n                                    <div className=\"col-3 text-center\">\r\n                                      <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                        {_t(t(\"price\"))}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div\r\n                                  className=\"fk-table__body border-bottom\"\r\n                                  data-simplebar\r\n                                >\r\n                                  <div className=\"sky-is-blue reverse-this\">\r\n                                    {/* loop through order list items */}\r\n                                    {newOrder && newOrder.length > 0 ? (\r\n                                      newOrder.map(\r\n                                        (orderListItem, orderListItemIndex) => {\r\n                                          return (\r\n                                            <>\r\n                                              <div\r\n                                                className={`fk-table-container-order ${\r\n                                                  orderListItemIndex ===\r\n                                                    activeItemInOrder &&\r\n                                                  \"active\"\r\n                                                } `}\r\n                                                onClick={(e) => {\r\n                                                  e.preventDefault();\r\n                                                  //orderListItem's group wise all items\r\n                                                  let tempItems =\r\n                                                    foodForSearch &&\r\n                                                    foodForSearch.filter(\r\n                                                      (tempItem) => {\r\n                                                        return (\r\n                                                          tempItem.food_group_id ===\r\n                                                          orderListItem.item\r\n                                                            .food_group_id\r\n                                                        );\r\n                                                      }\r\n                                                    );\r\n\r\n                                                  //orderListItem's group\r\n                                                  let foodGroup =\r\n                                                    foodGroupForSearch &&\r\n                                                    foodGroupForSearch.find(\r\n                                                      (groupItem) => {\r\n                                                        return (\r\n                                                          groupItem.id ===\r\n                                                          parseInt(\r\n                                                            orderListItem.item\r\n                                                              .food_group_id\r\n                                                          )\r\n                                                        );\r\n                                                      }\r\n                                                    );\r\n\r\n                                                  // selected pos item\r\n                                                  let selectedItemTemp =\r\n                                                    tempItems &&\r\n                                                    tempItems.find(\r\n                                                      (tempSelectedItem) => {\r\n                                                        return (\r\n                                                          tempSelectedItem.id ===\r\n                                                          orderListItem.item.id\r\n                                                        );\r\n                                                      }\r\n                                                    );\r\n\r\n                                                  // Set variations, properties, selected item\r\n                                                  setFoodItem({\r\n                                                    ...foodItem,\r\n                                                    foodGroup: foodGroup,\r\n                                                    items: tempItems,\r\n                                                    selectedItem: selectedItemTemp,\r\n                                                    variations:\r\n                                                      selectedItemTemp &&\r\n                                                      parseInt(\r\n                                                        selectedItemTemp.has_variation\r\n                                                      ) === 1\r\n                                                        ? selectedItemTemp.variations\r\n                                                        : null,\r\n                                                    properties:\r\n                                                      selectedItemTemp &&\r\n                                                      parseInt(\r\n                                                        selectedItemTemp.has_property\r\n                                                      ) === 1\r\n                                                        ? selectedItemTemp.properties\r\n                                                        : null,\r\n                                                  });\r\n\r\n                                                  //set active order list index for background color of selected\r\n                                                  setActiveItemInOrder(\r\n                                                    orderListItemIndex\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                <div\r\n                                                  className={`row g-0 border-top-0 border-bottom `}\r\n                                                >\r\n                                                  <div className=\"col-1 text-center border-left d-flex justify-content-center align-items-center\">\r\n                                                    {newOrder.length -\r\n                                                      orderListItemIndex}\r\n                                                  </div>\r\n                                                  <div\r\n                                                    className={`col-6 border-left border-right py-2`}\r\n                                                  >\r\n                                                    <div className=\"d-flex justify-content-between\">\r\n                                                      <span className=\"text-capitalize d-block t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold t-mr-8\">\r\n                                                        {\r\n                                                          orderListItem.item\r\n                                                            .name\r\n                                                        }\r\n                                                      </span>\r\n                                                    </div>\r\n                                                    <div className=\"row g-0\">\r\n                                                      {/* if item has variations show the selected in order list */}\r\n                                                      {parseInt(\r\n                                                        orderListItem.item\r\n                                                          .has_variation\r\n                                                      ) === 1 && (\r\n                                                        <div className=\"col-12\">\r\n                                                          <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                            variation :\r\n                                                          </span>\r\n                                                          <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md\">\r\n                                                            {orderListItem.variation\r\n                                                              ? orderListItem\r\n                                                                  .variation\r\n                                                                  .variation_name\r\n                                                              : \"-\"}\r\n                                                          </span>\r\n                                                        </div>\r\n                                                      )}\r\n\r\n                                                      {/* if item has properties show the selected in order list, loop here  */}\r\n                                                      {orderListItem.properties &&\r\n                                                        orderListItem.properties\r\n                                                          .length > 0 &&\r\n                                                        selectedPropertyGroup[\r\n                                                          orderListItemIndex\r\n                                                        ] !== undefined &&\r\n                                                        selectedPropertyGroup[\r\n                                                          orderListItemIndex\r\n                                                        ].map((thisIsGroup) => {\r\n                                                          let theGroup =\r\n                                                            propertyGroupForSearch &&\r\n                                                            propertyGroupForSearch.find(\r\n                                                              (theItem) => {\r\n                                                                return (\r\n                                                                  theItem.id ===\r\n                                                                  thisIsGroup\r\n                                                                );\r\n                                                              }\r\n                                                            );\r\n                                                          return (\r\n                                                            <div className=\"col-12\">\r\n                                                              <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                                {theGroup &&\r\n                                                                  theGroup.name}{\" \"}\r\n                                                                :\r\n                                                              </span>\r\n                                                              {orderListItem.properties.map(\r\n                                                                (\r\n                                                                  propertyName\r\n                                                                ) => {\r\n                                                                  if (\r\n                                                                    propertyName\r\n                                                                      .item\r\n                                                                      .property_group_id ===\r\n                                                                    theGroup.id\r\n                                                                  ) {\r\n                                                                    return (\r\n                                                                      <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md mr-1\">\r\n                                                                        {\r\n                                                                          propertyName\r\n                                                                            .item\r\n                                                                            .name\r\n                                                                        }{\" \"}\r\n                                                                        <span>\r\n                                                                          {\" \"}\r\n                                                                          {propertyName.quantity >\r\n                                                                            1 &&\r\n                                                                            \"(\" +\r\n                                                                              propertyName.quantity +\r\n                                                                              \")\"}\r\n                                                                        </span>\r\n                                                                      </span>\r\n                                                                    );\r\n                                                                  } else {\r\n                                                                    return true;\r\n                                                                  }\r\n                                                                }\r\n                                                              )}\r\n                                                            </div>\r\n                                                          );\r\n                                                        })}\r\n\r\n                                                      {/* if item has properties show the selected in order list  */}\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  {/* Quantity */}\r\n                                                  <div className=\"col-2 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                    <div className=\"fk-qty t-pt-5 t-pb-5 justify-content-center\">\r\n                                                      <span\r\n                                                        className=\"fk-qty__icon\"\r\n                                                        onClick={() => {\r\n                                                          handleOrderItemQty(\r\n                                                            \"-\"\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <i className=\"las la-minus\"></i>\r\n                                                      </span>\r\n                                                      <input\r\n                                                        type=\"text\"\r\n                                                        value={\r\n                                                          orderListItem.quantity\r\n                                                        }\r\n                                                        className=\"fk-qty__input t-bg-clear\"\r\n                                                        readOnly\r\n                                                      />\r\n                                                      <span\r\n                                                        className=\"fk-qty__icon\"\r\n                                                        onClick={() => {\r\n                                                          handleOrderItemQty(\r\n                                                            \"+\"\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <i className=\"las la-plus\"></i>\r\n                                                      </span>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                  {/* Quantity */}\r\n\r\n                                                  {/* Price */}\r\n                                                  <div className=\"col-3 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                    <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                      {parseInt(\r\n                                                        orderListItem.item\r\n                                                          .has_variation\r\n                                                      ) === 1 ? (\r\n                                                        <>\r\n                                                          {currencySymbolLeft()}\r\n\r\n                                                          {showPriceOfEachOrderItem(\r\n                                                            orderListItemIndex\r\n                                                          )}\r\n                                                          {currencySymbolRight()}\r\n                                                        </>\r\n                                                      ) : (\r\n                                                        <>\r\n                                                          {currencySymbolLeft()}\r\n                                                          {showPriceOfEachOrderItem(\r\n                                                            orderListItemIndex\r\n                                                          )}\r\n                                                          {currencySymbolRight()}\r\n                                                        </>\r\n                                                      )}\r\n                                                    </span>\r\n                                                  </div>\r\n                                                  {/* Price */}\r\n                                                </div>\r\n                                              </div>\r\n                                              <span className=\"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative\">\r\n                                                <span\r\n                                                  className=\"badge rounded-pill bg-secondary text-capitalize\"\r\n                                                  onClick={() => {\r\n                                                    handleRemoveItemFromOrderList(\r\n                                                      orderListItemIndex\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  <i className=\"fa fa-times\"></i>\r\n                                                </span>\r\n                                              </span>\r\n                                            </>\r\n                                          );\r\n                                        }\r\n                                      )\r\n                                    ) : (\r\n                                      <div className=\"text-primary text-center font-weight-bold pt-5 xsm-text text-uppercase\">\r\n                                        {_t(\r\n                                          t(\r\n                                            \"Select food item to add to the list\"\r\n                                          )\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"fk-price-table__body-bottom t-mt-10\">\r\n                              <div className=\"fk-table__head\">\r\n                                <div className=\"row g-0 border\">\r\n                                  <div className=\"col-6 text-center border-right\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-6\">\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {_t(t(\"sub total\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-6\">\r\n                                        {newOrder ? (\r\n                                          <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(theSubTotal)}\r\n                                            {currencySymbolRight()}\r\n                                          </span>\r\n                                        ) : (\r\n                                          <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(0)}\r\n                                            {currencySymbolRight()}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-6 text-center\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-6\">\r\n                                        <span className=\"text-uppercase xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {_t(t(\"VAT\"))} (\r\n                                          {newSettings && newSettings.vat}\r\n                                          %)\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-6\">\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(theVat)}\r\n                                          {currencySymbolRight()}\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row g-0 border\">\r\n                                  <div className=\"col-6 text-center border-right\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-6\">\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {_t(t(\"service charge\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-6\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          step=\"0.01\"\r\n                                          min=\"0\"\r\n                                          className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                          onChange={(e) => {\r\n                                            if (e.target.value !== \"\") {\r\n                                              setOrderDetails({\r\n                                                ...orderDetails,\r\n                                                serviceCharge: parseFloat(\r\n                                                  e.target.value\r\n                                                ),\r\n                                              });\r\n                                              let totalPayable = 0;\r\n                                              let localCurrency = JSON.parse(\r\n                                                localStorage.getItem(\"currency\")\r\n                                              );\r\n                                              let usdServiceCharge =\r\n                                                parseFloat(e.target.value) /\r\n                                                localCurrency.rate;\r\n                                              let usdDiscount =\r\n                                                parseFloat(\r\n                                                  orderDetails.discount\r\n                                                ) / localCurrency.rate;\r\n\r\n                                              totalPayable =\r\n                                                theSubTotal +\r\n                                                theVat +\r\n                                                usdServiceCharge -\r\n                                                usdDiscount;\r\n                                              setTotalPaybale(totalPayable);\r\n                                              setReturnMoneyUsd(\r\n                                                totalPayable - paidMoney\r\n                                              );\r\n                                            } else {\r\n                                              setOrderDetails({\r\n                                                ...orderDetails,\r\n                                                serviceCharge: 0,\r\n                                              });\r\n                                              let totalPayable = 0;\r\n                                              let localCurrency = JSON.parse(\r\n                                                localStorage.getItem(\"currency\")\r\n                                              );\r\n                                              let usdServiceCharge =\r\n                                                parseFloat(0) /\r\n                                                localCurrency.rate;\r\n                                              let usdDiscount =\r\n                                                parseFloat(\r\n                                                  orderDetails.discount\r\n                                                ) / localCurrency.rate;\r\n\r\n                                              totalPayable =\r\n                                                theSubTotal +\r\n                                                theVat +\r\n                                                usdServiceCharge -\r\n                                                usdDiscount;\r\n                                              setTotalPaybale(totalPayable);\r\n                                              setReturnMoneyUsd(\r\n                                                totalPayable - paidMoney\r\n                                              );\r\n                                            }\r\n                                          }}\r\n                                          value={\r\n                                            orderDetails.serviceCharge !== 0 &&\r\n                                            orderDetails.serviceCharge\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-6 text-center\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-6\">\r\n                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                          {_t(t(\"discount\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-6\">\r\n                                        <input\r\n                                          type=\"number\"\r\n                                          step=\"0.01\"\r\n                                          min=\"0\"\r\n                                          className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                          onChange={(e) => {\r\n                                            if (e.target.value !== \"\") {\r\n                                              setOrderDetails({\r\n                                                ...orderDetails,\r\n                                                discount: parseFloat(\r\n                                                  e.target.value\r\n                                                ),\r\n                                              });\r\n                                              let totalPayable = 0;\r\n                                              let localCurrency = JSON.parse(\r\n                                                localStorage.getItem(\"currency\")\r\n                                              );\r\n                                              let usdServiceCharge =\r\n                                                parseFloat(\r\n                                                  orderDetails.serviceCharge\r\n                                                ) / localCurrency.rate;\r\n                                              let usdDiscount =\r\n                                                parseFloat(e.target.value) /\r\n                                                localCurrency.rate;\r\n\r\n                                              totalPayable =\r\n                                                theSubTotal +\r\n                                                theVat +\r\n                                                usdServiceCharge -\r\n                                                usdDiscount;\r\n\r\n                                              setTotalPaybale(totalPayable);\r\n                                              setReturnMoneyUsd(\r\n                                                totalPayable - paidMoney\r\n                                              );\r\n                                            } else {\r\n                                              setOrderDetails({\r\n                                                ...orderDetails,\r\n                                                discount: 0,\r\n                                              });\r\n                                              let totalPayable = 0;\r\n                                              let localCurrency = JSON.parse(\r\n                                                localStorage.getItem(\"currency\")\r\n                                              );\r\n                                              let usdServiceCharge =\r\n                                                parseFloat(\r\n                                                  orderDetails.serviceCharge\r\n                                                ) / localCurrency.rate;\r\n                                              let usdDiscount =\r\n                                                parseFloat(0) /\r\n                                                localCurrency.rate;\r\n\r\n                                              totalPayable =\r\n                                                theSubTotal +\r\n                                                theVat +\r\n                                                usdServiceCharge -\r\n                                                usdDiscount;\r\n                                              setTotalPaybale(totalPayable);\r\n                                              setReturnMoneyUsd(\r\n                                                totalPayable - paidMoney\r\n                                              );\r\n                                            }\r\n                                          }}\r\n                                          value={\r\n                                            orderDetails.discount !== 0 &&\r\n                                            orderDetails.discount\r\n                                          }\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"t-bg-epsilon t-pl-10 t-pr-10\">\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-6\">\r\n                                    <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                      {_t(t(\"total bill\"))}\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"col-6 text-right\">\r\n                                    {totalPayable ? (\r\n                                      <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                        {currencySymbolLeft()}\r\n                                        {formatPrice(totalPayable)}\r\n                                        {currencySymbolRight()}\r\n                                      </span>\r\n                                    ) : (\r\n                                      <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                        {currencySymbolLeft()}\r\n                                        {formatPrice(0)}\r\n                                        {currencySymbolRight()}\r\n                                      </span>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"t-bg-light-2 t-pr-10\">\r\n                                <div className=\"row gx-2 align-items-center\">\r\n                                  <div className=\"col-6\"></div>\r\n                                  <div className=\"col-6 text-right\">\r\n                                    <div className=\"row gx-2 align-items-center\">\r\n                                      <div className=\"col-6 text-left\">\r\n                                        <span className=\"text-capitalize font-weight-bold d-block\">\r\n                                          {_t(t(\"Return\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-6\">\r\n                                        {totalPayable <= paidMoney ? (\r\n                                          <span className=\"text-capitalize font-weight-bold d-block\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(\r\n                                              Math.abs(returnMoneyUsd)\r\n                                            )}\r\n\r\n                                            {currencySymbolRight()}\r\n                                          </span>\r\n                                        ) : (\r\n                                          <span className=\"text-capitalize font-weight-bold d-block\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(0)}\r\n                                            {currencySymbolRight()}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row g-0 align-items-center t-mt-10\">\r\n                                <div className=\"col-4\">\r\n                                  <div className=\"t-mr-8\">\r\n                                    <div className=\"fk-calculator-container\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-info text-uppercase\"\r\n                                        onClick={() =>\r\n                                          setCalculatorMenu(!calculatorMenu)\r\n                                        }\r\n                                      >\r\n                                        <i className=\"fa fa-calculator\"></i>\r\n                                      </button>\r\n                                      <div\r\n                                        className={`calculator ${\r\n                                          calculatorMenu && \"active\"\r\n                                        }`}\r\n                                      >\r\n                                        <Calculator />\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                  <div className=\"d-flex justify-content-end align-items-center\">\r\n                                    <div className=\"t-mr-8\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary sm-text text-uppercase font-weight-bold\"\r\n                                        onClick={!loading && handleSettleOrder}\r\n                                      >\r\n                                        {!loading\r\n                                          ? _t(t(\"settle\"))\r\n                                          : _t(t(\"Please wait\"))}\r\n                                      </button>\r\n                                    </div>\r\n                                    <div>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-success sm-text text-uppercase font-weight-bold\"\r\n                                        onClick={!loading && handleSubmitOrder}\r\n                                      >\r\n                                        {!loading\r\n                                          ? _t(t(\"submit\"))\r\n                                          : _t(t(\"Please wait\"))}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* Display Only Large Screen End  */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* Right Side End */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Show In Tab   */}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pos;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n  modalLoading,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst Submitted = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  const {\r\n    //submitted orders\r\n    submittedOrders,\r\n    setPaginatedSubmittedOrders,\r\n    submittedOrdersForSearch,\r\n\r\n    //payment-type\r\n    paymentTypeForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // States hook here\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  //search result\r\n  const [searchedOrder, setSearchedOrder] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //payment type\r\n  const handleSetpaymentType = (payment_type) => {\r\n    setCheckOrderDetails({\r\n      ...checkOrderDetails,\r\n      payment_type,\r\n    });\r\n\r\n    //calculate paid amount to set return amount\r\n    handleCalculatePaid(checkOrderDetails.payment_amount, payment_type);\r\n  };\r\n\r\n  //payment type amount\r\n  const handlePaymentTypeAmount = (e) => {\r\n    let tempPaymentAmount = {\r\n      ...checkOrderDetails.payment_amount,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n\r\n    setCheckOrderDetails({\r\n      ...checkOrderDetails,\r\n      payment_amount: tempPaymentAmount,\r\n    });\r\n\r\n    //calculate paid amount to set return amount\r\n    handleCalculatePaid(tempPaymentAmount, checkOrderDetails.payment_type);\r\n  };\r\n\r\n  //calculate paid amount\r\n  const handleCalculatePaid = (paymentAmount, paymentType) => {\r\n    let paidAmount = 0;\r\n    if (paymentAmount !== null && paymentType !== null) {\r\n      let thePaymentArray = [];\r\n      if (paymentAmount) {\r\n        thePaymentArray = Object.entries(paymentAmount);\r\n      }\r\n      thePaymentArray.map((eachPaymentItem) => {\r\n        let thePaymentType = paymentType.find((paymentTypeItem) => {\r\n          return paymentTypeItem.id === parseInt(eachPaymentItem[0]);\r\n        });\r\n        if (eachPaymentItem[1] !== \"\") {\r\n          if (\r\n            thePaymentType &&\r\n            thePaymentType.id === parseInt(eachPaymentItem[0])\r\n          ) {\r\n            paidAmount = paidAmount + parseFloat(eachPaymentItem[1]);\r\n          }\r\n        }\r\n      });\r\n      let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n      paidAmount = paidAmount / localCurrency.rate;\r\n      let theReturnMoney = 0;\r\n      if (checkOrderDetails.item) {\r\n        theReturnMoney =\r\n          paidAmount - parseFloat(checkOrderDetails.item.total_payable);\r\n      }\r\n      setReturnMoneyUsd(theReturnMoney);\r\n    } else {\r\n      setReturnMoneyUsd(0);\r\n    }\r\n    setPaidMoney(paidAmount);\r\n  };\r\n\r\n  // handleSettleOrder\r\n  const handleSettleOrder = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      paidMoney <\r\n      parseFloat(\r\n        checkOrderDetails.item.total_payable -\r\n          checkOrderDetails.item.paid_amount\r\n      )\r\n    ) {\r\n      toast.error(\r\n        `${_t(\r\n          t(\"Please enter paid amount atleast equal to the total due amount\")\r\n        )}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    } else {\r\n      handleSettleOrderAxiosReq();\r\n    }\r\n  };\r\n\r\n  //settle order server request\r\n  const handleSettleOrderAxiosReq = () => {\r\n    let url = BASE_URL + \"/settings/settle-submitted-order\";\r\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    let formData = {\r\n      order_group_id: checkOrderDetails.item.id,\r\n      payment_type: checkOrderDetails.payment_type,\r\n      payment_amount: checkOrderDetails.payment_amount,\r\n      paidMoney: paidMoney,\r\n      localCurrency: localCurrency,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"paymentIssue\") {\r\n          setCheckOrderDetails({\r\n            ...checkOrderDetails,\r\n            item: res.data[2],\r\n            payment_type: null,\r\n            payment_amount: null,\r\n            settle: false,\r\n          });\r\n          setSearchedOrder({\r\n            ...searchedOrder,\r\n            searched: false,\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n          toast.error(\r\n            `${_t(\r\n              t(\r\n                \"Please enter paid amount atleast equal to the total due amount\"\r\n              )\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              closeButton: false,\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search submitted orders here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedOrder({ ...searchedOrder, searched: false });\r\n    } else {\r\n      let searchedList = submittedOrdersForSearch.filter((item) => {\r\n        //token\r\n        let lowerCaseItemToken = JSON.stringify(item.token.id);\r\n\r\n        //customer\r\n        let lowerCaseItemCustomer = item.customer_name.toLowerCase();\r\n\r\n        //table\r\n        let lowerCaseItemTable = item.table_name.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch = item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemToken.includes(searchInput) ||\r\n          lowerCaseItemCustomer.includes(searchInput) ||\r\n          lowerCaseItemTable.includes(searchInput) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedOrder({\r\n        ...searchedOrder,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //cancel order confirmation modal\r\n  const handleCancelOrderConfirmation = (orderGroup) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">\r\n              {_t(t(\"You want to cancel this order?\"))}\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleCancelOrder(orderGroup);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, cancel it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //cancel order here\r\n  const handleCancelOrder = (orderGroup) => {\r\n    if (orderGroup.is_accepted === 0) {\r\n      let url = BASE_URL + \"/settings/cancel-submitted-order\";\r\n      let formData = {\r\n        id: orderGroup.id,\r\n      };\r\n      setLoading(true);\r\n      axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.data === \"accepted\") {\r\n            toast.error(\r\n              `${_t(t(\"Can not cancel this order, this is being cooked\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                closeButton: false,\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            closeButton: false,\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Can not cancel this order, this is being cooked\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Submitted orders\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                checkOrderDetails.item.is_settled === 0 ? (\r\n                  // if this item is not settled then show settle-cancel button\r\n                  <>\r\n                    {checkOrderDetails.item &&\r\n                      checkOrderDetails.item.is_cancelled !== 1 && (\r\n                        <div className=\"text-right\">\r\n                          {checkOrderDetails.settle &&\r\n                            paidMoney >\r\n                              parseFloat(\r\n                                checkOrderDetails.item.total_payable\r\n                              ) && (\r\n                              <span className=\"mr-2 text-secondary font-weight-bold\">\r\n                                Return: {currencySymbolLeft()}\r\n                                {formatPrice(returnMoneyUsd)}\r\n                                {currencySymbolRight()}{\" \"}\r\n                              </span>\r\n                            )}\r\n                          {checkOrderDetails.settle ? (\r\n                            <button\r\n                              className=\"btn btn-primary px-3 rounded-md text-uppercase\"\r\n                              onClick={() => {\r\n                                setCheckOrderDetails({\r\n                                  ...checkOrderDetails,\r\n                                  settle: false,\r\n                                  payment_amount: null,\r\n                                  payment_type: null,\r\n                                });\r\n                                setReturnMoneyUsd(0);\r\n                                setPaidMoney(0);\r\n                              }}\r\n                            >\r\n                              {_t(t(\"Cancel\"))}\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              className=\"btn btn-success px-3 rounded-md text-uppercase\"\r\n                              onClick={() => {\r\n                                setCheckOrderDetails({\r\n                                  ...checkOrderDetails,\r\n                                  settle: true,\r\n                                  payment_amount: null,\r\n                                  payment_type: null,\r\n                                });\r\n                                setReturnMoneyUsd(0);\r\n                                setPaidMoney(0);\r\n                              }}\r\n                            >\r\n                              {_t(t(\"Settle order\"))}\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  // if this item is not settled then show settle-cancel button else, show this notification\r\n                  <div className=\"text-center bg-success text-white py-2\">\r\n                    {_t(t(\"Order has been settled, you can close this now\"))}\r\n                  </div>\r\n                )}\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div className=\"col-12 filtr-item\">\r\n                    <div className=\"fk-order-token t-bg-white\">\r\n                      <div className=\"fk-order-token__body\">\r\n                        <div className=\"fk-addons-table\">\r\n                          <div className=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div className=\"fk-addons-table__info\">\r\n                            <div className=\"row g-0\">\r\n                              <div className=\"col-2 text-center border-right\">\r\n                                <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"col-3 text-center border-right\">\r\n                                <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"col-4 text-left pl-2 border-right\">\r\n                                <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"col-2 text-center border-right\">\r\n                                <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"col-1 text-center\">\r\n                                <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div className=\"fk-addons-table__body-row\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-2 text-center border-right d-flex\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-3 text-center border-right d-flex\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span className=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span className=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span className=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span className=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div className=\"col-2 text-center border-right d-flex\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div className=\"col-1 text-center d-flex\">\r\n                                        <label className=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span className=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"my-2 payment-type-parent\">\r\n                    <Select\r\n                      options={paymentTypeForSearch && paymentTypeForSearch}\r\n                      components={makeAnimated()}\r\n                      getOptionLabel={(option) => option.name}\r\n                      getOptionValue={(option) => option.name}\r\n                      classNamePrefix=\"select\"\r\n                      className=\"xsm-text\"\r\n                      backspaceRemovesValue={false}\r\n                      onChange={handleSetpaymentType}\r\n                      maxMenuHeight=\"200px\"\r\n                      isMulti\r\n                      clearIndicator={null}\r\n                      placeholder={_t(t(\"Select payment methods\")) + \"..\"}\r\n                    />\r\n                    {checkOrderDetails.payment_type !== null && (\r\n                      <form\r\n                        className=\"border my-2 change-background rounded-lg\"\r\n                        onSubmit={handleSettleOrder}\r\n                      >\r\n                        <div className=\"sm-text text-center text-white py-2\">\r\n                          {_t(t(\"Amount\"))}\r\n                        </div>\r\n                        {checkOrderDetails.payment_type.map(\r\n                          (eachPaymentType, paymentTypeIndex) => {\r\n                            return (\r\n                              <div className=\"addons-list__item mx-2 mb-1\">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  step=\"0.01\"\r\n                                  name={eachPaymentType.id}\r\n                                  autoComplete=\"off\"\r\n                                  className=\"form-control xsm-text pl-2\"\r\n                                  onChange={handlePaymentTypeAmount}\r\n                                  placeholder={eachPaymentType.name}\r\n                                  value={\r\n                                    checkOrderDetails.payment_amount &&\r\n                                    checkOrderDetails.payment_amount[\r\n                                      eachPaymentType.id\r\n                                    ]\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            );\r\n                          }\r\n                        )}\r\n                        <div className=\"pb-2 pl-2 my-2\">\r\n                          <button\r\n                            className=\"btn btn-sm btn-warning text-dark px-3 text-uppercase\"\r\n                            type=\"submit\"\r\n                          >\r\n                            {_t(t(\"Settle order\"))}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {checkOrderDetails.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedOrder.searched\r\n                              ? _t(t(\"Submitted orders\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                      <ul className=\"t-list fk-sort align-items-center\">\r\n                        <div className=\"input-group col\">\r\n                          <div className=\"form-file\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                              placeholder={\r\n                                _t(t(\"Search by token, customer, branch\")) +\r\n                                \"..\"\r\n                              }\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </div>\r\n                          <button className=\"btn btn-primary\" type=\"button\">\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7\">\r\n                      <div className=\"row align-items-center gx-2\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col\">\r\n                          <NavLink\r\n                            to=\"/dashboard/pos\"\r\n                            className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-secondary xsm-text text-uppercase text-center w-100\"\r\n                          >\r\n                            {_t(t(\"POS\"))}\r\n                          </NavLink>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <NavLink\r\n                            to=\"/dashboard/pos/settled\"\r\n                            className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\"\r\n                          >\r\n                            {_t(t(\"Settled\"))}\r\n                          </NavLink>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Token\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Time\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Customer\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Table\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Status\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Action\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                            {!searchedOrder.searched\r\n                              ? [\r\n                                  submittedOrders && [\r\n                                    submittedOrders.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      submittedOrders.data.map(\r\n                                        (item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (submittedOrders.current_page -\r\n                                                    1) *\r\n                                                    submittedOrders.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                                #{item.token.id}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Moment format=\"LT\">\r\n                                                  {item.token.time}\r\n                                                </Moment>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.customer_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.table_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.is_cancelled === 0 ? (\r\n                                                  [\r\n                                                    item.is_ready === 0 ? (\r\n                                                      <span\r\n                                                        className=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"processing\"))}\r\n                                                      </span>\r\n                                                    ) : (\r\n                                                      <span\r\n                                                        className=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"Ready\"))}\r\n                                                      </span>\r\n                                                    ),\r\n                                                  ]\r\n                                                ) : (\r\n                                                  <span\r\n                                                    className=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"Cancelled\"))}\r\n                                                  </span>\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.is_cancelled === 0 ? (\r\n                                                  <div className=\"dropdown text-capitalize\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        // send state- order group id\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: true,\r\n                                                            payment_amount: null,\r\n                                                            payment_type: null,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-refresh\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Settle order\"))}\r\n                                                      </button>\r\n\r\n                                                      {item.is_ready !== 1 && [\r\n                                                        item.is_accepted ===\r\n                                                        0 ? (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              handleCancelOrderConfirmation(\r\n                                                                item\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-trash\"></i>\r\n                                                            </span>\r\n                                                            {_t(\r\n                                                              t(\"Cancel Order\")\r\n                                                            )}\r\n                                                          </button>\r\n                                                        ) : (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              toast.error(\r\n                                                                `${_t(\r\n                                                                  t(\r\n                                                                    \"This is being cooked, can not cancel now\"\r\n                                                                  )\r\n                                                                )}`,\r\n                                                                {\r\n                                                                  position:\r\n                                                                    \"bottom-center\",\r\n                                                                  closeButton: false,\r\n                                                                  autoClose: 10000,\r\n                                                                  hideProgressBar: false,\r\n                                                                  closeOnClick: true,\r\n                                                                  pauseOnHover: true,\r\n                                                                  className:\r\n                                                                    \"text-center toast-notification\",\r\n                                                                }\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-trash\"></i>\r\n                                                            </span>\r\n                                                            {_t(\r\n                                                              t(\"Cancel Order\")\r\n                                                            )}\r\n                                                          </button>\r\n                                                        ),\r\n                                                      ]}\r\n                                                    </div>\r\n                                                  </div>\r\n                                                ) : (\r\n                                                  _t(t(\"Not allowed\"))\r\n                                                )}\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        }\r\n                                      )\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedOrder && [\r\n                                    searchedOrder.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedOrder.list.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (submittedOrders.current_page -\r\n                                                  1) *\r\n                                                  submittedOrders.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                              #{item.token.id}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {item.token.time}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.customer_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.table_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                [\r\n                                                  item.is_ready === 0 ? (\r\n                                                    <span\r\n                                                      className=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"processing\"))}\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <span\r\n                                                      className=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"Ready\"))}\r\n                                                    </span>\r\n                                                  ),\r\n                                                ]\r\n                                              ) : (\r\n                                                <span\r\n                                                  className=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                  onClick={() => {\r\n                                                    setCheckOrderDetails({\r\n                                                      ...checkOrderDetails,\r\n                                                      item: item,\r\n                                                      settle: false,\r\n                                                    });\r\n                                                    setReturnMoneyUsd(0);\r\n                                                    setPaidMoney(0);\r\n                                                  }}\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#orderDetails\"\r\n                                                >\r\n                                                  {_t(t(\"Cancelled\"))}\r\n                                                </span>\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                <div className=\"dropdown text-capitalize\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      // send state- order group id\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: true,\r\n                                                          payment_amount: null,\r\n                                                          payment_type: null,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-refresh\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Settle order\"))}\r\n                                                    </button>\r\n\r\n                                                    {item.is_ready !== 1 && [\r\n                                                      item.is_accepted === 0 ? (\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            handleCancelOrderConfirmation(\r\n                                                              item\r\n                                                            );\r\n                                                          }}\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-trash\"></i>\r\n                                                          </span>\r\n                                                          {_t(\r\n                                                            t(\"Cancel Order\")\r\n                                                          )}\r\n                                                        </button>\r\n                                                      ) : (\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            toast.error(\r\n                                                              `${_t(\r\n                                                                t(\r\n                                                                  \"This is being cooked, can not cancel now\"\r\n                                                                )\r\n                                                              )}`,\r\n                                                              {\r\n                                                                position:\r\n                                                                  \"bottom-center\",\r\n                                                                closeButton: false,\r\n                                                                autoClose: 10000,\r\n                                                                hideProgressBar: false,\r\n                                                                closeOnClick: true,\r\n                                                                pauseOnHover: true,\r\n                                                                className:\r\n                                                                  \"text-center toast-notification\",\r\n                                                              }\r\n                                                            );\r\n                                                          }}\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-trash\"></i>\r\n                                                          </span>\r\n                                                          {_t(\r\n                                                            t(\"Cancel Order\")\r\n                                                          )}\r\n                                                        </button>\r\n                                                      ),\r\n                                                    ]}\r\n                                                  </div>\r\n                                                </div>\r\n                                              ) : (\r\n                                                _t(t(\"Not allowed\"))\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {checkOrderDetails.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedOrder.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                submittedOrders,\r\n                                setPaginatedSubmittedOrders\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(submittedOrders)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedOrder({\r\n                                      ...searchedOrder,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedOrder,\r\n                                    submittedOrdersForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Submitted;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n  modalLoading,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\n\r\n//importing context consumer here\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst Settled = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  const {\r\n    //submitted orders\r\n    settledOrders,\r\n    setPaginatedSettledOrders,\r\n    settledOrdersForSearch,\r\n\r\n    //payment-type\r\n    paymentTypeForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // States hook here\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  //search result\r\n  const [searchedOrder, setSearchedOrder] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //search submitted orders here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedOrder({ ...searchedOrder, searched: false });\r\n    } else {\r\n      let searchedList = settledOrdersForSearch.filter((item) => {\r\n        //token\r\n        let lowerCaseItemToken = JSON.stringify(item.token.id);\r\n\r\n        //customer\r\n        let lowerCaseItemCustomer = item.customer_name.toLowerCase();\r\n\r\n        //table\r\n        let lowerCaseItemTable = item.table_name.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch = item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemToken.includes(searchInput) ||\r\n          lowerCaseItemCustomer.includes(searchInput) ||\r\n          lowerCaseItemTable.includes(searchInput) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedOrder({\r\n        ...searchedOrder,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Settled orders\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                checkOrderDetails.item.is_settled === 0 ? (\r\n                  // if this item is not settled then show settle-cancel button\r\n                  <>\r\n                    {checkOrderDetails.item &&\r\n                      checkOrderDetails.item.is_cancelled !== 1 && (\r\n                        <div className=\"text-right\">\r\n                          {checkOrderDetails.settle &&\r\n                            paidMoney >\r\n                              parseFloat(\r\n                                checkOrderDetails.item.total_payable\r\n                              ) && (\r\n                              <span className=\"mr-2 text-secondary font-weight-bold\">\r\n                                Return: {currencySymbolLeft()}\r\n                                {formatPrice(returnMoneyUsd)}\r\n                                {currencySymbolRight()}{\" \"}\r\n                              </span>\r\n                            )}\r\n                          {checkOrderDetails.settle ? (\r\n                            <button\r\n                              className=\"btn btn-primary px-3 rounded-md text-uppercase\"\r\n                              onClick={() => {\r\n                                setCheckOrderDetails({\r\n                                  ...checkOrderDetails,\r\n                                  settle: false,\r\n                                  payment_amount: null,\r\n                                  payment_type: null,\r\n                                });\r\n                                setReturnMoneyUsd(0);\r\n                                setPaidMoney(0);\r\n                              }}\r\n                            >\r\n                              {_t(t(\"Cancel\"))}\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              className=\"btn btn-success px-3 rounded-md text-uppercase\"\r\n                              onClick={() => {\r\n                                setCheckOrderDetails({\r\n                                  ...checkOrderDetails,\r\n                                  settle: true,\r\n                                  payment_amount: null,\r\n                                  payment_type: null,\r\n                                });\r\n                                setReturnMoneyUsd(0);\r\n                                setPaidMoney(0);\r\n                              }}\r\n                            >\r\n                              {_t(t(\"Settle order\"))}\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  // if this item is not settled then show settle-cancel button else, show this notification\r\n                  \"\"\r\n                )}\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {checkOrderDetails.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedOrder.searched\r\n                              ? _t(t(\"Settled orders\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                      <ul className=\"t-list fk-sort align-items-center\">\r\n                        <div className=\"input-group col\">\r\n                          <div className=\"form-file\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                              placeholder={\r\n                                _t(t(\"Search by token, customer, branch\")) +\r\n                                \"..\"\r\n                              }\r\n                              onChange={handleSearch}\r\n                            />\r\n                          </div>\r\n                          <button className=\"btn btn-primary\" type=\"button\">\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                          </button>\r\n                        </div>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7\">\r\n                      <div className=\"row align-items-center gx-2\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col\">\r\n                          <NavLink\r\n                            to=\"/dashboard/pos\"\r\n                            className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-secondary xsm-text text-uppercase text-center w-100\"\r\n                          >\r\n                            {_t(t(\"POS\"))}\r\n                          </NavLink>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                          <NavLink\r\n                            to=\"/dashboard/pos/submitted\"\r\n                            className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\"\r\n                          >\r\n                            {_t(t(\"Submitted\"))}\r\n                          </NavLink>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Token\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Time\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Customer\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Table\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Status\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                            {!searchedOrder.searched\r\n                              ? [\r\n                                  settledOrders && [\r\n                                    settledOrders.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      settledOrders.data.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (settledOrders.current_page -\r\n                                                  1) *\r\n                                                  settledOrders.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                              #{item.token.id}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {item.token.time}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.customer_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.table_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                [\r\n                                                  item.is_ready === 0 ? (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"processing\"))}\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"Ready\"))}\r\n                                                    </span>\r\n                                                  ),\r\n                                                ]\r\n                                              ) : (\r\n                                                <span\r\n                                                  class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                  onClick={() => {\r\n                                                    setCheckOrderDetails({\r\n                                                      ...checkOrderDetails,\r\n                                                      item: item,\r\n                                                      settle: false,\r\n                                                    });\r\n                                                    setReturnMoneyUsd(0);\r\n                                                    setPaidMoney(0);\r\n                                                  }}\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#orderDetails\"\r\n                                                >\r\n                                                  {_t(t(\"Cancelled\"))}\r\n                                                </span>\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedOrder && [\r\n                                    searchedOrder.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"8\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedOrder.list.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (settledOrders.current_page -\r\n                                                  1) *\r\n                                                  settledOrders.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                              #{item.token.id}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {item.token.time}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.customer_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.table_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                [\r\n                                                  item.is_ready === 0 ? (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"processing\"))}\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                        setReturnMoneyUsd(0);\r\n                                                        setPaidMoney(0);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"Ready\"))}\r\n                                                    </span>\r\n                                                  ),\r\n                                                ]\r\n                                              ) : (\r\n                                                <span\r\n                                                  class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                  onClick={() => {\r\n                                                    setCheckOrderDetails({\r\n                                                      ...checkOrderDetails,\r\n                                                      item: item,\r\n                                                      settle: false,\r\n                                                    });\r\n                                                    setReturnMoneyUsd(0);\r\n                                                    setPaidMoney(0);\r\n                                                  }}\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#orderDetails\"\r\n                                                >\r\n                                                  {_t(t(\"Cancelled\"))}\r\n                                                </span>\r\n                                              )}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {checkOrderDetails.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedOrder.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                settledOrders,\r\n                                setPaginatedSettledOrders\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(settledOrders)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedOrder({\r\n                                      ...searchedOrder,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedOrder,\r\n                                    settledOrdersForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settled;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, getCookie } from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\n\r\n//importing context consumer here\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\n\r\nconst Kitchen = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    //kitchen dashboard\r\n    getKitchenNewOrders,\r\n    kithcenNewOrders,\r\n    setKithcenNewOrders,\r\n    loading,\r\n    setLoading,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const {\r\n    //food group\r\n    foodGroupForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  //state hooks\r\n  const [filterOrder, setFilterOrder] = useState({\r\n    isFiltered: false,\r\n    filterKey: \"\",\r\n    groups: null,\r\n  });\r\n\r\n  //search result\r\n  const [searchedOrder, setSearchedOrder] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    //get all orders when coming to kithcen\r\n    getKitchenNewOrders();\r\n\r\n    //add \"All\" option to group filter\r\n    let tempFoodGroups = [];\r\n    foodGroupForSearch &&\r\n      foodGroupForSearch.map((item) => {\r\n        if (item.name !== \"All\") {\r\n          tempFoodGroups.push(item);\r\n        }\r\n      });\r\n    //new option added to food group\r\n    tempFoodGroups.unshift({ name: \"All\" });\r\n    setFilterOrder({\r\n      ...filterOrder,\r\n      groups: tempFoodGroups,\r\n    });\r\n  }, [foodGroupForSearch]);\r\n\r\n  //filter ordered items\r\n  const handleFilter = (foodGrp) => {\r\n    setFilterOrder({\r\n      ...filterOrder,\r\n      isFiltered: foodGrp.name == \"All\" ? false : true,\r\n      filterKey: foodGrp.name,\r\n    });\r\n  };\r\n\r\n  //search orders here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedOrder({ ...searchedOrder, searched: false });\r\n    } else {\r\n      let searchedList =\r\n        kithcenNewOrders &&\r\n        kithcenNewOrders.filter((item) => {\r\n          //token\r\n          let lowerCaseItemToken = JSON.stringify(item.token.id);\r\n\r\n          return lowerCaseItemToken.includes(searchInput);\r\n        });\r\n      setSearchedOrder({\r\n        ...searchedOrder,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //accept or reject\r\n  const handleAcceptOrReject = (id) => {\r\n    //front end accept-reject view update\r\n    let newState = kithcenNewOrders.map((orderItem) =>\r\n      orderItem.id === id\r\n        ? { ...orderItem, is_accepted: orderItem.is_accepted === 0 ? 1 : 0 }\r\n        : orderItem\r\n    );\r\n    setKithcenNewOrders(newState);\r\n\r\n    //front end accept-reject view update for searched\r\n    if (searchedOrder.searched) {\r\n      let newStateSearched = searchedOrder.list.map((orderItemSearched) =>\r\n        orderItemSearched.id === id\r\n          ? {\r\n              ...orderItemSearched,\r\n              is_accepted: orderItemSearched.is_accepted === 0 ? 1 : 0,\r\n            }\r\n          : orderItemSearched\r\n      );\r\n      setSearchedOrder({\r\n        ...searchedOrder,\r\n        list: newStateSearched,\r\n      });\r\n    }\r\n\r\n    //set on server\r\n    const url = BASE_URL + \"/settings/accept-new-order\";\r\n    let formData = {\r\n      id,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {})\r\n      .catch(() => {\r\n        //undo if any error happened\r\n        newState = newState.map((orderItem) =>\r\n          orderItem.id === id\r\n            ? { ...orderItem, is_accepted: orderItem.is_accepted === 0 ? 1 : 0 }\r\n            : orderItem\r\n        );\r\n        setKithcenNewOrders(newState);\r\n        //undo if any error happened for searched\r\n        if (searchedOrder.searched) {\r\n          let newStateSearched = searchedOrder.list.map((orderItemSearched) =>\r\n            orderItemSearched.id === id\r\n              ? {\r\n                  ...orderItemSearched,\r\n                  is_accepted: orderItemSearched.is_accepted === 0 ? 1 : 0,\r\n                }\r\n              : orderItemSearched\r\n          );\r\n          setSearchedOrder({\r\n            ...searchedOrder,\r\n            list: newStateSearched,\r\n          });\r\n        }\r\n        toast.error(`${_t(t(\"Please refresh and try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //delete confirmation modal of waiter\r\n  const handleReadyConfirmation = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"All items are cooked?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleReady(id);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"YES, COOKED!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"NO\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //make the order group ready here\r\n  const handleReady = (id) => {\r\n    setLoading(true);\r\n    const url = BASE_URL + \"/settings/mark-all-items-ready\";\r\n    let formData = {\r\n      id,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        //remove ready item from order list\r\n        let newState = kithcenNewOrders.filter((orderItem) => {\r\n          return orderItem.id !== id;\r\n        });\r\n        setKithcenNewOrders(newState);\r\n\r\n        //remove ready item from search list\r\n        if (searchedOrder.searched) {\r\n          let newSearchState = searchedOrder.list.filter(\r\n            (orderItemSearched) => {\r\n              return orderItemSearched.id !== id;\r\n            }\r\n          );\r\n          setSearchedOrder({\r\n            ...searchedOrder,\r\n            list: newSearchState,\r\n          });\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please refresh and try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //make the order group ready here\r\n  const handleEachItemReady = (orderGroupId, itemId) => {\r\n    //to redo the action\r\n    let oldState = kithcenNewOrders;\r\n    let oldSearchedState = searchedOrder.list;\r\n\r\n    //new state\r\n    let orderGroup = kithcenNewOrders.find((orderItem) => {\r\n      return orderItem.id === orderGroupId;\r\n    });\r\n\r\n    //updating the item's cooking status\r\n    let newItems = orderGroup.orderedItems.map((eachItem) =>\r\n      eachItem.id === itemId\r\n        ? { ...eachItem, is_cooking: eachItem.is_cooking === 0 ? 1 : 0 }\r\n        : eachItem\r\n    );\r\n\r\n    //set updated order list with item's status change\r\n    let newState = kithcenNewOrders.map((orderItem) =>\r\n      orderItem.id === orderGroupId\r\n        ? { ...orderItem, is_accepted: 1, orderedItems: newItems }\r\n        : orderItem\r\n    );\r\n    setKithcenNewOrders(newState);\r\n\r\n    //searched list update\r\n    if (searchedOrder.searched) {\r\n      //new searched state\r\n      let orderGroup = searchedOrder.list.find((orderItem) => {\r\n        return orderItem.id === orderGroupId;\r\n      });\r\n\r\n      let newItemsSearched = orderGroup.orderedItems.map((eachItem) =>\r\n        eachItem.id === itemId\r\n          ? { ...eachItem, is_cooking: eachItem.is_cooking === 0 ? 1 : 0 }\r\n          : eachItem\r\n      );\r\n\r\n      let newStateSearched = searchedOrder.list.map((orderItem) =>\r\n        orderItem.id === orderGroupId\r\n          ? { ...orderItem, is_accepted: 1, orderedItems: newItemsSearched }\r\n          : orderItem\r\n      );\r\n      setSearchedOrder({\r\n        ...searchedOrder,\r\n        list: newStateSearched,\r\n      });\r\n    }\r\n\r\n    //set server's item status\r\n    const url = BASE_URL + \"/settings/mark-order-item-ready\";\r\n    let formData = {\r\n      orderGroupId: orderGroupId,\r\n      id: itemId,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {})\r\n      .catch(() => {\r\n        //undo if any error occured\r\n        setKithcenNewOrders(oldState);\r\n        setSearchedOrder({\r\n          ...searchedOrder,\r\n          list: oldSearchedState,\r\n        });\r\n        toast.error(`${_t(t(\"Please refresh and try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Kitchen\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"fk-scroll--index t-mt-15 t-mb-15\" data-simplebar>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"t-bg-white t-pt-10 t-pb-10 t-pl-15 t-pr-15\">\r\n              {/* next page data spin loading */}\r\n              <div className={`${loading && \"loading\"}`}></div>\r\n              {/* spin loading ends */}\r\n              <div className=\"row gx-2 align-items-center\">\r\n                <div className=\"col-md-5 t-mb-15 mb-md-0\">\r\n                  <ul className=\"t-list fk-breadcrumb\">\r\n                    <li className=\"fk-breadcrumb__list\">\r\n                      <span className=\"t-link fk-breadcrumb__link text-uppercase\">\r\n                        <span className=\"mr-2\">\r\n                          <img\r\n                            src=\"/khadyo/assets/img/cooking.png\"\r\n                            alt=\"cooking\"\r\n                            className=\"img-fluid\"\r\n                            style={{ height: \"40px\", width: \"40px\" }}\r\n                          />\r\n                        </span>\r\n                        <span className=\"mr-1\">{_t(t(\"kitchen\"))}</span>{\" \"}\r\n                        {_t(t(\"dashboard\"))}\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      getKitchenNewOrders();\r\n                      setSearchedOrder({\r\n                        ...searchedOrder,\r\n                        searched: false,\r\n                      });\r\n                    }}\r\n                    className=\"btn btn-primary btn-block sm-text text-uppercase mb-2 mb-md-0 text-truncate\"\r\n                  >\r\n                    {_t(t(\"Refresh\"))}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                  <Select\r\n                    options={filterOrder.groups && filterOrder.groups}\r\n                    components={makeAnimated()}\r\n                    getOptionLabel={(option) => option.name}\r\n                    getOptionValue={(option) => option.name}\r\n                    classNamePrefix=\"select\"\r\n                    className=\"xsm-text mb-2 mb-md-0 \"\r\n                    onChange={handleFilter}\r\n                    maxMenuHeight=\"200px\"\r\n                    placeholder={_t(t(\"Filter by group\")) + \"..\"}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"input-group\">\r\n                    <div className=\"form-file\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                        placeholder={_t(t(\"Search by token\")) + \"..\"}\r\n                        onChange={handleSearch}\r\n                      />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" type=\"button\">\r\n                      <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {!searchedOrder.searched ? (\r\n              <div className=\"row no-gutters g-4 mt-1\">\r\n                {kithcenNewOrders ? (\r\n                  [\r\n                    kithcenNewOrders.length > 0 ? (\r\n                      kithcenNewOrders.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className=\"col-md-6 col-xl-4\"\r\n                            data-category={index + 1}\r\n                          >\r\n                            <div className=\"fk-order-token t-bg-white p-3 h-100\">\r\n                              <div className=\"fk-order-token__footer text-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-success xsm-text text-uppercase btn-lg mr-2\"\r\n                                  onClick={() =>\r\n                                    handleReadyConfirmation(item.id)\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Order ready\"))}\r\n                                </button>\r\n                                {item.is_accepted === 0 ? (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-secondary xsm-text text-uppercase btn-lg\"\r\n                                    onClick={() =>\r\n                                      handleAcceptOrReject(item.id)\r\n                                    }\r\n                                  >\r\n                                    {_t(t(\"Accept order\"))}\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary xsm-text text-uppercase btn-lg\"\r\n                                    onClick={() =>\r\n                                      handleAcceptOrReject(item.id)\r\n                                    }\r\n                                  >\r\n                                    {_t(t(\"Make order pending\"))}\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"fk-order-token__body\">\r\n                                <div className=\"fk-addons-table\">\r\n                                  <div className=\"fk-addons-table__head d-flex justify-content-between px-3\">\r\n                                    <span>\r\n                                      {_t(t(\"order token\"))}: #{item.token.id}\r\n                                    </span>\r\n                                    <span>\r\n                                      {_t(t(\"ordered at\"))}:{\" \"}\r\n                                      <Moment format=\"LT\">\r\n                                        {item.token.time}\r\n                                      </Moment>\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"fk-addons-table__info\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-2 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"S/L\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-3 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"food\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-4 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"Additional Info\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-2 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"QTY\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-1 text-center py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          <i className=\"fa fa-check\"></i>\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"fk-addons-table__body\">\r\n                                    {item.orderedItems.map(\r\n                                      (thisItem, indexThisItem) => {\r\n                                        if (filterOrder.isFiltered) {\r\n                                          if (\r\n                                            thisItem.food_group ===\r\n                                            filterOrder.filterKey\r\n                                          ) {\r\n                                            return (\r\n                                              <div class=\"fk-addons-table__body-row\">\r\n                                                <div class=\"row g-0\">\r\n                                                  <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {indexThisItem + 1}\r\n                                                    </span>\r\n                                                  </div>\r\n                                                  <div class=\"col-3 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {thisItem.food_item} (\r\n                                                      {thisItem.food_group})\r\n                                                    </span>\r\n                                                  </div>\r\n                                                  <div class=\"col-4 text-center border-right t-pl-10 t-pr-10 py-2\">\r\n                                                    {thisItem.variation !==\r\n                                                      null && (\r\n                                                      <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                                        <span class=\"font-weight-bold mr-1\">\r\n                                                          {_t(t(\"variation\"))}:\r\n                                                        </span>\r\n                                                        {thisItem.variation}\r\n                                                      </span>\r\n                                                    )}\r\n\r\n                                                    {thisItem.properties !==\r\n                                                      null && (\r\n                                                      <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                                        <span class=\"font-weight-bold mr-1\">\r\n                                                          {_t(t(\"properties\"))}:\r\n                                                        </span>\r\n                                                        {JSON.parse(\r\n                                                          thisItem.properties\r\n                                                        ).map(\r\n                                                          (\r\n                                                            propertyItem,\r\n                                                            thisIndex\r\n                                                          ) => {\r\n                                                            if (\r\n                                                              thisIndex !==\r\n                                                              JSON.parse(\r\n                                                                thisItem.properties\r\n                                                              ).length -\r\n                                                                1\r\n                                                            ) {\r\n                                                              return (\r\n                                                                propertyItem.property +\r\n                                                                \", \"\r\n                                                              );\r\n                                                            } else {\r\n                                                              return propertyItem.property;\r\n                                                            }\r\n                                                          }\r\n                                                        )}\r\n                                                      </span>\r\n                                                    )}\r\n                                                  </div>\r\n                                                  <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {thisItem.quantity}\r\n                                                    </span>\r\n                                                  </div>\r\n\r\n                                                  <div className=\"col-1 text-center d-flex py-2\">\r\n                                                    <label className=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                                      <input\r\n                                                        type=\"checkbox\"\r\n                                                        className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                        checked={\r\n                                                          thisItem.is_cooking ===\r\n                                                          1\r\n                                                        }\r\n                                                        onChange={() => {\r\n                                                          handleEachItemReady(\r\n                                                            item.id,\r\n                                                            thisItem.id\r\n                                                          );\r\n                                                        }}\r\n                                                      />\r\n                                                      <span className=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\"></span>\r\n                                                    </label>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        } else {\r\n                                          return (\r\n                                            <div class=\"fk-addons-table__body-row\">\r\n                                              <div class=\"row g-0\">\r\n                                                <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {indexThisItem + 1}\r\n                                                  </span>\r\n                                                </div>\r\n                                                <div class=\"col-3 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {thisItem.food_item} (\r\n                                                    {thisItem.food_group})\r\n                                                  </span>\r\n                                                </div>\r\n                                                <div class=\"col-4 text-center border-right t-pl-10 t-pr-10 py-2\">\r\n                                                  {thisItem.variation !==\r\n                                                    null && (\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                                      <span class=\"font-weight-bold mr-1\">\r\n                                                        {_t(t(\"variation\"))}:\r\n                                                      </span>\r\n                                                      {thisItem.variation}\r\n                                                    </span>\r\n                                                  )}\r\n\r\n                                                  {thisItem.properties !==\r\n                                                    null && (\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                                      <span class=\"font-weight-bold mr-1\">\r\n                                                        {_t(t(\"properties\"))}:\r\n                                                      </span>\r\n                                                      {JSON.parse(\r\n                                                        thisItem.properties\r\n                                                      ).map(\r\n                                                        (\r\n                                                          propertyItem,\r\n                                                          thisIndex\r\n                                                        ) => {\r\n                                                          if (\r\n                                                            thisIndex !==\r\n                                                            JSON.parse(\r\n                                                              thisItem.properties\r\n                                                            ).length -\r\n                                                              1\r\n                                                          ) {\r\n                                                            return (\r\n                                                              propertyItem.property +\r\n                                                              \", \"\r\n                                                            );\r\n                                                          } else {\r\n                                                            return propertyItem.property;\r\n                                                          }\r\n                                                        }\r\n                                                      )}\r\n                                                    </span>\r\n                                                  )}\r\n                                                </div>\r\n                                                <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {thisItem.quantity}\r\n                                                  </span>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-1 text-center d-flex py-2\">\r\n                                                  <label className=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                                    <input\r\n                                                      type=\"checkbox\"\r\n                                                      className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                      checked={\r\n                                                        thisItem.is_cooking ===\r\n                                                        1\r\n                                                      }\r\n                                                      onChange={() => {\r\n                                                        handleEachItemReady(\r\n                                                          item.id,\r\n                                                          thisItem.id\r\n                                                        );\r\n                                                      }}\r\n                                                    />\r\n                                                    <span className=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\"></span>\r\n                                                  </label>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                          );\r\n                                        }\r\n                                      }\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"col-8 offset-2\" data-category=\"1\">\r\n                        <div className=\"fk-order-token t-bg-white p-5 text-center text-uppercase text-primary no-order\">\r\n                          {/* No order in the kitchen */}\r\n                          <img\r\n                            src=\"/khadyo/assets/img/no-order.jpg\"\r\n                            alt=\"no order found\"\r\n                            className=\"img-fluid h-100\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]\r\n                ) : (\r\n                  <div className=\"col-12\" data-category=\"1\">\r\n                    <Skeleton\r\n                      className=\"fk-order-token t-bg-white p-3 border border-2\"\r\n                      style={{ minHeight: \"560px\" }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"row no-gutters g-4 mt-1\">\r\n                {searchedOrder ? (\r\n                  [\r\n                    searchedOrder.list.length > 0 ? (\r\n                      searchedOrder.list.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className=\"col-md-6 col-xl-4\"\r\n                            data-category={index + 1}\r\n                          >\r\n                            <div className=\"fk-order-token t-bg-white p-3 h-100\">\r\n                              <div className=\"fk-order-token__footer text-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-success xsm-text text-uppercase btn-lg mr-2\"\r\n                                  onClick={() =>\r\n                                    handleReadyConfirmation(item.id)\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Order ready\"))}\r\n                                </button>\r\n                                {item.is_accepted === 0 ? (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-secondary xsm-text text-uppercase btn-lg\"\r\n                                    onClick={() =>\r\n                                      handleAcceptOrReject(item.id)\r\n                                    }\r\n                                  >\r\n                                    {_t(t(\"Accept order\"))}\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary xsm-text text-uppercase btn-lg\"\r\n                                    onClick={() =>\r\n                                      handleAcceptOrReject(item.id)\r\n                                    }\r\n                                  >\r\n                                    {_t(t(\"Make order pending\"))}\r\n                                  </button>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"fk-order-token__body\">\r\n                                <div className=\"fk-addons-table\">\r\n                                  <div className=\"fk-addons-table__head d-flex justify-content-between px-3\">\r\n                                    <span>\r\n                                      {_t(t(\"order token\"))}: #{item.token.id}\r\n                                    </span>\r\n                                    <span>\r\n                                      {_t(t(\"ordered at\"))}:{\" \"}\r\n                                      <Moment format=\"LT\">\r\n                                        {item.token.time}\r\n                                      </Moment>\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className=\"fk-addons-table__info\">\r\n                                    <div className=\"row g-0\">\r\n                                      <div className=\"col-2 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"S/L\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-3 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"food\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-4 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"Additional Info\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-2 text-center border-right py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          {_t(t(\"QTY\"))}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div className=\"col-1 text-center py-2\">\r\n                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                          <i className=\"fa fa-check\"></i>\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"fk-addons-table__body\">\r\n                                    {item.orderedItems.map(\r\n                                      (thisItem, indexThisItem) => {\r\n                                        if (filterOrder.isFiltered) {\r\n                                          if (\r\n                                            thisItem.food_group ===\r\n                                            filterOrder.filterKey\r\n                                          ) {\r\n                                            return (\r\n                                              <div class=\"fk-addons-table__body-row\">\r\n                                                <div class=\"row g-0\">\r\n                                                  <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {indexThisItem + 1}\r\n                                                    </span>\r\n                                                  </div>\r\n                                                  <div class=\"col-3 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {thisItem.food_item} (\r\n                                                      {thisItem.food_group})\r\n                                                    </span>\r\n                                                  </div>\r\n                                                  <div class=\"col-4 text-center border-right t-pl-10 t-pr-10 py-2\">\r\n                                                    {thisItem.variation !==\r\n                                                      null && (\r\n                                                      <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                                        <span class=\"font-weight-bold mr-1\">\r\n                                                          {_t(t(\"variation\"))}:\r\n                                                        </span>\r\n                                                        {thisItem.variation}\r\n                                                      </span>\r\n                                                    )}\r\n\r\n                                                    {thisItem.properties !==\r\n                                                      null && (\r\n                                                      <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                                        <span class=\"font-weight-bold mr-1\">\r\n                                                          {_t(t(\"properties\"))}:\r\n                                                        </span>\r\n                                                        {JSON.parse(\r\n                                                          thisItem.properties\r\n                                                        ).map(\r\n                                                          (\r\n                                                            propertyItem,\r\n                                                            thisIndex\r\n                                                          ) => {\r\n                                                            if (\r\n                                                              thisIndex !==\r\n                                                              JSON.parse(\r\n                                                                thisItem.properties\r\n                                                              ).length -\r\n                                                                1\r\n                                                            ) {\r\n                                                              return (\r\n                                                                propertyItem.property +\r\n                                                                \", \"\r\n                                                              );\r\n                                                            } else {\r\n                                                              return propertyItem.property;\r\n                                                            }\r\n                                                          }\r\n                                                        )}\r\n                                                      </span>\r\n                                                    )}\r\n                                                  </div>\r\n                                                  <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                      {thisItem.quantity}\r\n                                                    </span>\r\n                                                  </div>\r\n\r\n                                                  <div className=\"col-1 text-center d-flex py-2\">\r\n                                                    <label className=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                                      <input\r\n                                                        type=\"checkbox\"\r\n                                                        className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                        checked={\r\n                                                          thisItem.is_cooking ===\r\n                                                          1\r\n                                                        }\r\n                                                        onChange={() => {\r\n                                                          handleEachItemReady(\r\n                                                            item.id,\r\n                                                            thisItem.id\r\n                                                          );\r\n                                                        }}\r\n                                                      />\r\n                                                      <span className=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\"></span>\r\n                                                    </label>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        } else {\r\n                                          return (\r\n                                            <div class=\"fk-addons-table__body-row\">\r\n                                              <div class=\"row g-0\">\r\n                                                <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {indexThisItem + 1}\r\n                                                  </span>\r\n                                                </div>\r\n                                                <div class=\"col-3 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {thisItem.food_item} (\r\n                                                    {thisItem.food_group})\r\n                                                  </span>\r\n                                                </div>\r\n                                                <div class=\"col-4 text-center border-right t-pl-10 t-pr-10 py-2\">\r\n                                                  {thisItem.variation !==\r\n                                                    null && (\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                                      <span class=\"font-weight-bold mr-1\">\r\n                                                        {_t(t(\"variation\"))}:\r\n                                                      </span>\r\n                                                      {thisItem.variation}\r\n                                                    </span>\r\n                                                  )}\r\n\r\n                                                  {thisItem.properties !==\r\n                                                    null && (\r\n                                                    <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                                      <span class=\"font-weight-bold mr-1\">\r\n                                                        {_t(t(\"properties\"))}:\r\n                                                      </span>\r\n                                                      {JSON.parse(\r\n                                                        thisItem.properties\r\n                                                      ).map(\r\n                                                        (\r\n                                                          propertyItem,\r\n                                                          thisIndex\r\n                                                        ) => {\r\n                                                          if (\r\n                                                            thisIndex !==\r\n                                                            JSON.parse(\r\n                                                              thisItem.properties\r\n                                                            ).length -\r\n                                                              1\r\n                                                          ) {\r\n                                                            return (\r\n                                                              propertyItem.property +\r\n                                                              \", \"\r\n                                                            );\r\n                                                          } else {\r\n                                                            return propertyItem.property;\r\n                                                          }\r\n                                                        }\r\n                                                      )}\r\n                                                    </span>\r\n                                                  )}\r\n                                                </div>\r\n                                                <div class=\"col-2 text-center border-right d-flex py-2\">\r\n                                                  <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                                    {thisItem.quantity}\r\n                                                  </span>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-1 text-center d-flex py-2\">\r\n                                                  <label className=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                                    <input\r\n                                                      type=\"checkbox\"\r\n                                                      className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                      checked={\r\n                                                        thisItem.is_cooking ===\r\n                                                        1\r\n                                                      }\r\n                                                      onChange={() => {\r\n                                                        handleEachItemReady(\r\n                                                          item.id,\r\n                                                          thisItem.id\r\n                                                        );\r\n                                                      }}\r\n                                                    />\r\n                                                    <span className=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\"></span>\r\n                                                  </label>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                          );\r\n                                        }\r\n                                      }\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <div className=\"col-8 offset-2\" data-category=\"1\">\r\n                        <div className=\"fk-order-token t-bg-white p-5 text-center text-uppercase text-primary no-order\">\r\n                          {/* No order in the kitchen */}\r\n                          <img\r\n                            src=\"/khadyo/assets/img/no-order.jpg\"\r\n                            alt=\"no order found\"\r\n                            className=\"img-fluid h-100\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]\r\n                ) : (\r\n                  <div className=\"col-12\" data-category=\"1\">\r\n                    <Skeleton\r\n                      className=\"fk-order-token t-bg-white p-3 border border-2\"\r\n                      style={{ minHeight: \"560px\" }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Kitchen;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n  getCookie,\r\n  modalLoading,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Moment from \"react-moment\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\n\r\nconst OrderHistories = () => {\r\n  //getting context values here\r\n  const { authUserInfo } = useContext(UserContext);\r\n\r\n  const {\r\n    //branch\r\n    branchForSearch,\r\n\r\n    //order histories\r\n    allOrders,\r\n    setPaginatedAllOrders,\r\n    allOrdersForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n    setDataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(FoodContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // States hook here\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n  //search result\r\n  let [searchedOrders, setSearchedOrders] = useState({\r\n    list: null,\r\n    searched: false,\r\n    branch: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //cancel order confirmation modal\r\n  const handleDeleteOrderConfirmation = (orderGroup) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">\r\n              {_t(t(\"You want to delete this order?\"))}\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteOrder(orderGroup);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //cancel order here\r\n  const handleDeleteOrder = (orderGroup) => {\r\n    let url = BASE_URL + \"/settings/delete-order-from-history\";\r\n    let formData = {\r\n      id: orderGroup.id,\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setSearchedOrders({\r\n          ...searchedOrders,\r\n          searched: false,\r\n        });\r\n        toast.success(`${_t(t(\"Deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search submitted orders here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedOrders({ ...searchedOrders, searched: false });\r\n    } else {\r\n      let searchedList = allOrdersForSearch.filter((item) => {\r\n        //token\r\n        let lowerCaseItemToken = JSON.stringify(item.token.id);\r\n\r\n        //customer\r\n        let lowerCaseItemCustomer = item.customer_name.toLowerCase();\r\n\r\n        //table\r\n        let lowerCaseItemTable = item.table_name.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch = item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemToken.includes(searchInput) ||\r\n          lowerCaseItemCustomer.includes(searchInput) ||\r\n          lowerCaseItemTable.includes(searchInput) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedOrders({\r\n        ...searchedOrders,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //branch wise filter\r\n  const handleBranchFilter = (branch) => {\r\n    let searchInput = branch.name.toLowerCase();\r\n    let searchedList = allOrdersForSearch.filter((item) => {\r\n      //branch\r\n      let lowerCaseItemBranch = item.branch_name.toLowerCase();\r\n      return lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput);\r\n    });\r\n    setSearchedOrders({\r\n      ...searchedOrders,\r\n      list: searchedList,\r\n      searched: true,\r\n      branch,\r\n    });\r\n  };\r\n\r\n  //date wise filter\r\n  const handleDateFilter = () => {\r\n    if (startDate !== null && endDate !== null) {\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n\r\n      var fromMilliseconds = new Date(fromDate).getTime();\r\n      var toMilliseconds = new Date(toDate).getTime() + 60 * 60 * 24 * 1000;\r\n\r\n      let searchedList = null;\r\n      if (searchedOrders.branch !== null) {\r\n        searchedList = allOrdersForSearch.filter((item) => {\r\n          let itemDate = new Date(item.created_at).getTime();\r\n          return (\r\n            itemDate >= fromMilliseconds &&\r\n            itemDate <= toMilliseconds &&\r\n            item.branch_name === searchedOrders.branch.name\r\n          );\r\n        });\r\n      } else {\r\n        searchedList = allOrdersForSearch.filter((item) => {\r\n          let itemDate = new Date(item.created_at).getTime();\r\n\r\n          return itemDate >= fromMilliseconds && itemDate <= toMilliseconds;\r\n        });\r\n      }\r\n      setDataPaginating(true);\r\n      setSearchedOrders({\r\n        ...searchedOrders,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n      setTimeout(() => {\r\n        setDataPaginating(false);\r\n      }, 500);\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select the dates to filter\"))}`, {\r\n        position: \"bottom-center\",\r\n        closeButton: false,\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Order history\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-uppercase\">\r\n                            {searchedOrders.searched === false\r\n                              ? _t(t(\"Order history\"))\r\n                              : _t(t(\"Filtered order history\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4 col-lg-3\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                            placeholder={\r\n                              _t(t(\"Search by token, customer, branch\")) + \"..\"\r\n                            }\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* large screen  */}\r\n                    <div className=\"col-md-8 col-lg-9 t-mb-15 mb-md-0 d-none d-md-block\">\r\n                      <ul className=\"t-list fk-sort align-items-center justify-content-end\">\r\n                        {authUserInfo.details !== null &&\r\n                          authUserInfo.details.user_type !== \"staff\" && (\r\n                            <li\r\n                              className=\"fk-sort__list \"\r\n                              style={{ minWidth: \"150px\" }}\r\n                            >\r\n                              <Select\r\n                                options={branchForSearch && branchForSearch}\r\n                                components={makeAnimated()}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.name}\r\n                                className=\"xsm-text\"\r\n                                onChange={handleBranchFilter}\r\n                                maxMenuHeight=\"200px\"\r\n                                placeholder={_t(t(\"Select branch\")) + \"..\"}\r\n                              />\r\n                            </li>\r\n                          )}\r\n                        <li className=\"fk-sort__list ml-2\">\r\n                          <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            peekNextMonth\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            className=\"form-control xsm-text py-2\"\r\n                            placeholderText={_t(t(\"From date\"))}\r\n                            shouldCloseOnSelect={false}\r\n                          />\r\n                        </li>\r\n                        <li className=\"fk-sort__list\">\r\n                          <span className=\"fk-sort__icon\">\r\n                            <span className=\"fa fa-long-arrow-right\"></span>\r\n                          </span>\r\n                        </li>\r\n                        <li className=\"fk-sort__list\">\r\n                          <DatePicker\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            peekNextMonth\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            className=\"form-control xsm-text py-2\"\r\n                            placeholderText={_t(t(\"To date\"))}\r\n                            shouldCloseOnSelect={false}\r\n                          />\r\n                        </li>\r\n                        <li class=\"fk-sort__list\">\r\n                          <button\r\n                            class=\"btn btn-transparent btn-danger xsm-text text-uppercase py-2\"\r\n                            onClick={handleDateFilter}\r\n                          >\r\n                            {_t(t(\"Filter\"))}\r\n                          </button>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n\r\n                    {/* mobile screen  */}\r\n                    <div className=\"col-md-8 col-lg-9 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                      <ul className=\"t-list fk-sort align-items-center justify-content-end\">\r\n                        {authUserInfo.details !== null &&\r\n                          authUserInfo.details.user_type !== \"staff\" && (\r\n                            <li\r\n                              className=\"fk-sort__list w-100 mt-2\"\r\n                              style={{ minWidth: \"150px\" }}\r\n                            >\r\n                              <Select\r\n                                options={branchForSearch && branchForSearch}\r\n                                components={makeAnimated()}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.name}\r\n                                className=\"xsm-text w-100\"\r\n                                onChange={handleBranchFilter}\r\n                                maxMenuHeight=\"200px\"\r\n                                placeholder={_t(t(\"Select branch\")) + \"..\"}\r\n                              />\r\n                            </li>\r\n                          )}\r\n                        <li\r\n                          className={`fk-sort__list w-100 ${\r\n                            authUserInfo.details !== null &&\r\n                            authUserInfo.details.user_type !== \"staff\"\r\n                              ? \"\"\r\n                              : \"mt-2\"\r\n                          }`}\r\n                        >\r\n                          <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            peekNextMonth\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            className=\"form-control xsm-text py-2 w-100\"\r\n                            shouldCloseOnSelect={false}\r\n                          />\r\n                        </li>\r\n                        <li className=\"fk-sort__list w-100\">\r\n                          <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            peekNextMonth\r\n                            showMonthDropdown\r\n                            showYearDropdown\r\n                            dropdownMode=\"select\"\r\n                            className=\"form-control xsm-text py-2 w-100\"\r\n                            shouldCloseOnSelect={false}\r\n                          />\r\n                        </li>\r\n                        <li class=\"fk-sort__list w-100\">\r\n                          <button\r\n                            class=\"btn btn-transparent btn-danger xsm-text text-uppercase py-2\"\r\n                            onClick={handleDateFilter}\r\n                          >\r\n                            {_t(t(\"Filter\"))}\r\n                          </button>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Token\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Time\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Date\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Customer\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Total bill\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Status\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Action\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                            {!searchedOrders.searched\r\n                              ? [\r\n                                  allOrders && [\r\n                                    allOrders.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"9\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      allOrders.data.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (allOrders.current_page - 1) *\r\n                                                  allOrders.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                              #{item.token.id}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {item.token.time}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LL\">\r\n                                                {item.created_at}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.customer_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {currencySymbolLeft()}\r\n                                              {formatPrice(item.total_payable)}\r\n                                              {currencySymbolRight()}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                [\r\n                                                  item.is_ready === 0 ? (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"processing\"))}\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"Ready\"))}\r\n                                                    </span>\r\n                                                  ),\r\n                                                ]\r\n                                              ) : (\r\n                                                <span\r\n                                                  class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                  onClick={() => {\r\n                                                    setCheckOrderDetails({\r\n                                                      ...checkOrderDetails,\r\n                                                      item: item,\r\n                                                      settle: false,\r\n                                                    });\r\n                                                  }}\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#orderDetails\"\r\n                                                >\r\n                                                  {_t(t(\"Cancelled\"))}\r\n                                                </span>\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              <div className=\"dropdown text-capitalize\">\r\n                                                <button\r\n                                                  className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                  type=\"button\"\r\n                                                  data-toggle=\"dropdown\"\r\n                                                >\r\n                                                  <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                </button>\r\n                                                <div className=\"dropdown-menu\">\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      handleDeleteOrderConfirmation(\r\n                                                        item\r\n                                                      );\r\n                                                    }}\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-trash\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Delete Order\"))}\r\n                                                  </button>\r\n                                                </div>\r\n                                              </div>\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedOrders && [\r\n                                    searchedOrders.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"9\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedOrders.list.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (allOrders.current_page - 1) *\r\n                                                  allOrders.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                              #{item.token.id}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {item.token.time}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <Moment format=\"LL\">\r\n                                                {item.created_at}\r\n                                              </Moment>\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.customer_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {currencySymbolLeft()}\r\n                                              {formatPrice(item.total_payable)}\r\n                                              {currencySymbolRight()}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.is_cancelled === 0 ? (\r\n                                                [\r\n                                                  item.is_ready === 0 ? (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"processing\"))}\r\n                                                    </span>\r\n                                                  ) : (\r\n                                                    <span\r\n                                                      class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                      onClick={() => {\r\n                                                        setCheckOrderDetails({\r\n                                                          ...checkOrderDetails,\r\n                                                          item: item,\r\n                                                          settle: false,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#orderDetails\"\r\n                                                    >\r\n                                                      {_t(t(\"Ready\"))}\r\n                                                    </span>\r\n                                                  ),\r\n                                                ]\r\n                                              ) : (\r\n                                                <span\r\n                                                  class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                  onClick={() => {\r\n                                                    setCheckOrderDetails({\r\n                                                      ...checkOrderDetails,\r\n                                                      item: item,\r\n                                                      settle: false,\r\n                                                    });\r\n                                                  }}\r\n                                                  data-toggle=\"modal\"\r\n                                                  data-target=\"#orderDetails\"\r\n                                                >\r\n                                                  {_t(t(\"Cancelled\"))}\r\n                                                </span>\r\n                                              )}\r\n                                            </td>\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              <div className=\"dropdown text-capitalize\">\r\n                                                <button\r\n                                                  className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                  type=\"button\"\r\n                                                  data-toggle=\"dropdown\"\r\n                                                >\r\n                                                  <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                </button>\r\n                                                <div className=\"dropdown-menu\">\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      handleDeleteOrderConfirmation(\r\n                                                        item\r\n                                                      );\r\n                                                    }}\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-trash\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Delete Order\"))}\r\n                                                  </button>\r\n                                                </div>\r\n                                              </div>\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedOrders.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(allOrders, setPaginatedAllOrders)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(allOrders)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() => {\r\n                                    setSearchedOrders({\r\n                                      ...searchedOrders,\r\n                                      searched: false,\r\n                                      branch: null,\r\n                                    });\r\n                                    setStartDate(null);\r\n                                    setEndDate(null);\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedOrders,\r\n                                    allOrdersForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderHistories;\r\n","import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  managePageHrefLink,\r\n  managePageHrefLinkMobile,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ReportSidebar = () => {\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    handleJquery();\r\n  }, []);\r\n\r\n  //jQuery goes here\r\n  const handleJquery = () => {\r\n    var posHasSub = $(\".fk-pos-nav__list-has-sub\");\r\n    var posSub = $(\".fk-pos-nav__sub\");\r\n    $(\".fk-pos-nav__list-has-sub > a\").on(\"click\", function (e) {\r\n      e.preventDefault();\r\n    });\r\n    posHasSub.on(\"click\", function () {\r\n      $(this).find(posSub).slideDown();\r\n      $(this).siblings().find(posSub).slideUp();\r\n      $(this).addClass(\"active\").siblings().removeClass(\"active\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Navigation for Small Screen  */}\r\n      <div className=\"d-lg-none\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"fk-sm-nav\" data-simplebar>\r\n              <ul className=\"t-list fk-sm-nav__bar flex-row\">\r\n                {/* dashboard */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/reports\",\r\n                  _t(t(\"Dashboard\"))\r\n                )}\r\n\r\n                {/* daily */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/daily-reports\",\r\n                  _t(t(\"Daily\"))\r\n                )}\r\n\r\n                {/* monthly */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/monthly-reports\",\r\n                  _t(t(\"Monthly\"))\r\n                )}\r\n\r\n                {/* yearly */}\r\n                {/* {managePageHrefLink(\r\n                  \"/dashboard/yearly-reports\",\r\n                  _t(t(\"Yearly\"))\r\n                )} */}\r\n\r\n                {/* food item wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/food-items-reports\",\r\n                  _t(t(\"Item Wise\"))\r\n                )}\r\n\r\n                {/* food group wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/food-group-reports\",\r\n                  _t(t(\"Group Wise\"))\r\n                )}\r\n\r\n                {/* branch wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/branch-reports\",\r\n                  _t(t(\"Branch Wise\"))\r\n                )}\r\n\r\n                {/* pos user wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/pos-user-reports\",\r\n                  _t(t(\"Pos User Wise\"))\r\n                )}\r\n\r\n                {/* food item wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/dept-tag-reports\",\r\n                  _t(t(\"Department Wise\"))\r\n                )}\r\n\r\n                {/* Service charge wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/service-charge-reports\",\r\n                  _t(t(\"Service Charge Wise\"))\r\n                )}\r\n\r\n                {/* discount charge wise */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/discount-reports\",\r\n                  _t(t(\"discount Wise\"))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Navigation for Small Screen  End*/}\r\n\r\n      {/* Navigation for large Screen  */}\r\n      <div className=\"d-none d-lg-block\">\r\n        <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n          <ul className=\"t-list fk-pos-nav\">\r\n            {/* Foods */}\r\n            <li className={`fk-pos-nav__list fk-pos-nav__list-has-sub active`}>\r\n              <a\r\n                className=\"w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase rounded-0 text-left\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\"\r\n              >\r\n                {_t(t(\"Sale's Reports\"))}\r\n              </a>\r\n              <ul className=\"t-list fk-pos-nav__sub t-bg-white list-group\">\r\n                {/* dashboard */}\r\n                {managePageHrefLink(\"/dashboard/reports\", _t(t(\"Dashboard\")))}\r\n\r\n                {/* daily */}\r\n                {managePageHrefLink(\"/dashboard/daily-reports\", _t(t(\"Daily\")))}\r\n\r\n                {/* monthly */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/monthly-reports\",\r\n                  _t(t(\"Monthly\"))\r\n                )}\r\n\r\n                {/* yearly */}\r\n                {/* {managePageHrefLink(\r\n                  \"/dashboard/yearly-reports\",\r\n                  _t(t(\"Yearly\"))\r\n                )} */}\r\n\r\n                {/* food item wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/food-items-reports\",\r\n                  _t(t(\"Item Wise\"))\r\n                )}\r\n\r\n                {/* food group wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/food-group-reports\",\r\n                  _t(t(\"Group Wise\"))\r\n                )}\r\n\r\n                {/* branch wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/branch-reports\",\r\n                  _t(t(\"Branch Wise\"))\r\n                )}\r\n\r\n                {/* pos user wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/pos-user-reports\",\r\n                  _t(t(\"Pos User Wise\"))\r\n                )}\r\n\r\n                {/* food item wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/dept-tag-reports\",\r\n                  _t(t(\"Department Wise\"))\r\n                )}\r\n\r\n                {/* Service charge wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/service-charge-reports\",\r\n                  _t(t(\"Ser Charge Wise\"))\r\n                )}\r\n\r\n                {/* discount charge wise */}\r\n                {managePageHrefLink(\r\n                  \"/dashboard/discount-reports\",\r\n                  _t(t(\"discount Wise\"))\r\n                )}\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* Navigation for large Screen End */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportSidebar;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  formatPrice,\r\n  tableLoading,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst Reports = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //donout chart\r\n  const [donoutWithPattern, setDonoutWithPattern] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: \"donut\",\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: \"#111\",\r\n          top: -1,\r\n          left: 3,\r\n          blur: 3,\r\n          opacity: 0.2,\r\n        },\r\n      },\r\n      stroke: {\r\n        width: 0,\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                showAlways: true,\r\n                show: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: [],\r\n      dataLabels: {\r\n        dropShadow: {\r\n          blur: 3,\r\n          opacity: 0.8,\r\n        },\r\n      },\r\n      fill: {\r\n        type: \"pattern\",\r\n        opacity: 1,\r\n        pattern: {\r\n          enabled: true,\r\n          style: [\r\n            \"verticalLines\",\r\n            \"squares\",\r\n            \"horizontalLines\",\r\n            \"circles\",\r\n            \"slantedLines\",\r\n          ],\r\n        },\r\n      },\r\n      states: {\r\n        hover: {\r\n          filter: \"none\",\r\n        },\r\n      },\r\n      theme: {\r\n        palette: \"palette2\",\r\n      },\r\n\r\n      title: {\r\n        text: _t(t(\"Today's total revenue of all branches\")),\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  //pie chart\r\n  const [options, setOptions] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: \"pie\",\r\n      },\r\n      labels: [],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      title: {\r\n        text: _t(t(\"Today's revenue by food group\")),\r\n      },\r\n    },\r\n  });\r\n\r\n  //monthly branch\r\n  const [chart, setChart] = useState({\r\n    options: {\r\n      xaxis: {\r\n        categories: [],\r\n        labels: { show: true },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //monthly branch\r\n  const [chartitem, setChartItem] = useState({\r\n    options: {\r\n      xaxis: {\r\n        categories: [],\r\n        labels: { show: false },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getReport();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get reports\r\n  const getReport = () => {\r\n    const url = BASE_URL + \"/settings/report-dashboard\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        dailyBranch(res.data[0], res.data[1]);\r\n        monthlyBranch(res.data[2], res.data[3]);\r\n        dailyGroup(res.data[4], res.data[5]);\r\n        monthlyItems(res.data[6], res.data[7]);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //set daily branch\r\n  const dailyBranch = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setDonoutWithPattern({\r\n      series: formattedAmount,\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: \"donut\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#111\",\r\n            top: -1,\r\n            left: 3,\r\n            blur: 3,\r\n            opacity: 0.2,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 0,\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        labels: name,\r\n        dataLabels: {\r\n          dropShadow: {\r\n            blur: 3,\r\n            opacity: 0.8,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"pattern\",\r\n          opacity: 1,\r\n          pattern: {\r\n            enabled: true,\r\n            style: [\r\n              \"verticalLines\",\r\n              \"squares\",\r\n              \"horizontalLines\",\r\n              \"circles\",\r\n              \"slantedLines\",\r\n            ],\r\n          },\r\n        },\r\n        states: {\r\n          hover: {\r\n            filter: \"none\",\r\n          },\r\n        },\r\n        theme: {\r\n          palette: \"palette2\",\r\n        },\r\n\r\n        title: {\r\n          text: _t(t(\"Today's total revenue of all branches\")),\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  //set daily foodgroup\r\n  const dailyGroup = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n\r\n    setOptions({\r\n      series: formattedAmount,\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: \"pie\",\r\n        },\r\n        labels: name,\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n\r\n        title: {\r\n          text: _t(t(\"Today's revenue by food group\")),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  //set monthly branch\r\n  const monthlyBranch = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setChart({\r\n      ...chart,\r\n      options: {\r\n        ...chart.options,\r\n        xaxis: { ...chart.options.xaxis, categories: name },\r\n      },\r\n      series: [{ name: chart.series[0].name, data: formattedAmount }],\r\n    });\r\n  };\r\n\r\n  //set monthly items\r\n  const monthlyItems = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setChartItem({\r\n      ...chartitem,\r\n      options: {\r\n        ...chartitem.options,\r\n        xaxis: { ...chartitem.options.xaxis, categories: name },\r\n      },\r\n      series: [{ name: chartitem.series[0].name, data: formattedAmount }],\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Reports\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Reports\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 col-md-5 t-mb-15 mb-md-0 pie\">\r\n                            <Chart\r\n                              options={donoutWithPattern.options}\r\n                              series={donoutWithPattern.series}\r\n                              type=\"donut\"\r\n                              width=\"380\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-5 t-mb-15 mb-md-0 pie\">\r\n                            <Chart\r\n                              options={options.options}\r\n                              series={options.series}\r\n                              type=\"pie\"\r\n                              width=\"380\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row gx-2 justify-content-start ml-3\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <h4 className=\"py-1 font-weight-bold text-dark sm-text rounded-sm\">\r\n                              {_t(t(\"Last month's revenue of each branch\"))}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <Chart\r\n                              options={chart.options}\r\n                              series={chart.series}\r\n                              type=\"bar\"\r\n                              width=\"100%\"\r\n                              height=\"300\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"py-1 sm-text text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <div className=\"row gx-2 justify-content-start ml-3\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <h4 className=\"py-1 font-weight-bold text-dark sm-text rounded-sm\">\r\n                              {_t(t(\"Last month's item wise revenue\"))}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <Chart\r\n                              options={chartitem.options}\r\n                              series={chartitem.series}\r\n                              type=\"line\"\r\n                              width=\"100%\"\r\n                              height=\"300\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"pb-3 sm-text text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst Daily = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getDaily();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get daily reports\r\n  const getDaily = () => {\r\n    const url = BASE_URL + \"/settings/get-daily-report\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        let formattedAmount = res.data[1].map((item) =>\r\n          parseFloat(formatPrice(item))\r\n        );\r\n        setAmountChart({\r\n          ...amountChart,\r\n          options: {\r\n            ...amountChart.options,\r\n            xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n          },\r\n          series: [{ name: amountChart.series[0].name, data: formattedAmount }],\r\n        });\r\n        setReportData(res.data[2]);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Daily report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Daily report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-start\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"py-1 bg-primary sm-text text-white text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                          <div className=\"col-12 mb-md-0\">\r\n                            <Chart\r\n                              options={amountChart.options}\r\n                              series={amountChart.series}\r\n                              type=\"bar\"\r\n                              width=\"100%\"\r\n                              height=\"350px\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {reportData !== null &&\r\n                          reportData !== undefined &&\r\n                          reportData.length > 0 && (\r\n                            <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                              <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                  <thead className=\"align-middle\">\r\n                                    <tr>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"S/L\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Token\"))}\r\n                                      </th>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Time\"))}\r\n                                      </th>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Customer\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Bill\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Branch\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Status\"))}\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody className=\"align-middle\">\r\n                                    {/* loop here*/}\r\n                                    {reportData.map((item, index) => {\r\n                                      return (\r\n                                        <tr\r\n                                          className=\"align-middle\"\r\n                                          key={index}\r\n                                        >\r\n                                          <th\r\n                                            scope=\"row\"\r\n                                            className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                          >\r\n                                            {index + 1}\r\n                                          </th>\r\n\r\n                                          <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                            #{item.token.id}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                            <Moment format=\"LT\">\r\n                                              {item.token.time}\r\n                                            </Moment>\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.customer_name}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(item.total_payable)}\r\n                                            {currencySymbolRight()}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.branch_name || \"-\"}\r\n                                          </td>\r\n\r\n                                          <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                            {item.is_cancelled === 0 ? (\r\n                                              [\r\n                                                item.is_ready === 0 ? (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"processing\"))}\r\n                                                  </span>\r\n                                                ) : (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"Ready\"))}\r\n                                                  </span>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <span\r\n                                                class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                onClick={() => {\r\n                                                  setCheckOrderDetails({\r\n                                                    ...checkOrderDetails,\r\n                                                    item: item,\r\n                                                    settle: false,\r\n                                                  });\r\n                                                  setReturnMoneyUsd(0);\r\n                                                  setPaidMoney(0);\r\n                                                }}\r\n                                                data-toggle=\"modal\"\r\n                                                data-target=\"#orderDetails\"\r\n                                              >\r\n                                                {_t(t(\"Cancelled\"))}\r\n                                              </span>\r\n                                            )}\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Daily;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst Monthly = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getMonthly();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get Monthly reports\r\n  const getMonthly = () => {\r\n    const url = BASE_URL + \"/settings/get-monthly-report\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        let formattedAmount = res.data[1].map((item) =>\r\n          parseFloat(formatPrice(item))\r\n        );\r\n        setAmountChart({\r\n          ...amountChart,\r\n          options: {\r\n            ...amountChart.options,\r\n            xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n          },\r\n          series: [{ name: amountChart.series[0].name, data: formattedAmount }],\r\n        });\r\n        setReportData(res.data[2]);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //get Monthly reports filter\r\n  const getMonthlySelected = (date) => {\r\n    if (date !== null) {\r\n      setLoading(true);\r\n      var fromDate = date.toISOString();\r\n      const url = BASE_URL + \"/settings/get-monthly-report\";\r\n      let formData = {\r\n        date: date,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          let formattedAmount = res.data[1].map((item) =>\r\n            parseFloat(formatPrice(item))\r\n          );\r\n          setAmountChart({\r\n            ...amountChart,\r\n            options: {\r\n              ...amountChart.options,\r\n              xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n            },\r\n            series: [\r\n              { name: amountChart.series[0].name, data: formattedAmount },\r\n            ],\r\n          });\r\n          setReportData(res.data[2]);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Monthly report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"Filter\"))}order token: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Monthly report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-between\">\r\n                          <div className=\"col-12 col-md-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"py-1 bg-primary sm-text text-white text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-md-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"d-flex justify-content-between\">\r\n                              <div className=\"sm-text text-white text-right rounded-sm col-8\">\r\n                                <DatePicker\r\n                                  selected={startDate}\r\n                                  onChange={(date) => setStartDate(date)}\r\n                                  showMonthYearPicker\r\n                                  className=\"sm-text form-control py-1\"\r\n                                  style={{ zIndex: \"10\" }}\r\n                                  placeholderText={_t(t(\"Pick a month\")) + \"..\"}\r\n                                />\r\n                              </div>\r\n                              <div className=\"sm-text text-white text-md-right rounded-sm col-12 col-md-3 ml-2 ml-md-0\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm px-3\"\r\n                                  onClick={() => getMonthlySelected(startDate)}\r\n                                >\r\n                                  {_t(t(\"Filter\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                          <div className=\"col-12 mb-md-0\">\r\n                            <Chart\r\n                              options={amountChart.options}\r\n                              series={amountChart.series}\r\n                              type=\"bar\"\r\n                              width=\"100%\"\r\n                              height=\"350px\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {reportData !== null &&\r\n                          reportData !== undefined &&\r\n                          reportData.length > 0 && (\r\n                            <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                              <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                  <thead className=\"align-middle\">\r\n                                    <tr>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"S/L\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Token\"))}\r\n                                      </th>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Time\"))}\r\n                                      </th>\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Customer\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Bill\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Branch\"))}\r\n                                      </th>\r\n\r\n                                      <th\r\n                                        scope=\"col\"\r\n                                        className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                      >\r\n                                        {_t(t(\"Status\"))}\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody className=\"align-middle\">\r\n                                    {/* loop here*/}\r\n                                    {reportData.map((item, index) => {\r\n                                      return (\r\n                                        <tr\r\n                                          className=\"align-middle\"\r\n                                          key={index}\r\n                                        >\r\n                                          <th\r\n                                            scope=\"row\"\r\n                                            className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                          >\r\n                                            {index + 1}\r\n                                          </th>\r\n\r\n                                          <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                            #{item.token.id}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                            <Moment format=\"LT\">\r\n                                              {item.token.time}\r\n                                            </Moment>\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.customer_name}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {currencySymbolLeft()}\r\n                                            {formatPrice(item.total_payable)}\r\n                                            {currencySymbolRight()}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.branch_name || \"-\"}\r\n                                          </td>\r\n\r\n                                          <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                            {item.is_cancelled === 0 ? (\r\n                                              [\r\n                                                item.is_ready === 0 ? (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"processing\"))}\r\n                                                  </span>\r\n                                                ) : (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"Ready\"))}\r\n                                                  </span>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <span\r\n                                                class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                onClick={() => {\r\n                                                  setCheckOrderDetails({\r\n                                                    ...checkOrderDetails,\r\n                                                    item: item,\r\n                                                    settle: false,\r\n                                                  });\r\n                                                  setReturnMoneyUsd(0);\r\n                                                  setPaidMoney(0);\r\n                                                }}\r\n                                                data-toggle=\"modal\"\r\n                                                data-target=\"#orderDetails\"\r\n                                              >\r\n                                                {_t(t(\"Cancelled\"))}\r\n                                              </span>\r\n                                            )}\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </table>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Monthly;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst ItemWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n      labels: { show: false },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [generatedReport, setGeneratedReport] = useState(false);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get ItemWise reports filter\r\n  const getItemWiseSelected = () => {\r\n    if (startDate !== null && endDate !== null) {\r\n      setLoading(true);\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n      const url = BASE_URL + \"/settings/get-food-item-report\";\r\n      let formData = {\r\n        fromDate,\r\n        toDate,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          let formattedAmount = res.data[1].map((item) =>\r\n            parseFloat(formatPrice(item))\r\n          );\r\n          setAmountChart({\r\n            ...amountChart,\r\n            options: {\r\n              ...amountChart.options,\r\n              xaxis: {\r\n                ...amountChart.options.xaxis,\r\n                categories: res.data[0],\r\n                labels: { show: false },\r\n              },\r\n            },\r\n            series: [\r\n              { name: amountChart.series[0].name, data: formattedAmount },\r\n            ],\r\n          });\r\n          setReportData(res.data[2]);\r\n          setGeneratedReport(true);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Please select all the field to generate report\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Food item wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Food Item Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 mt-2\">\r\n                          <div className=\"col-12 col-md-2 d-md-block\">\r\n                            <DatePicker\r\n                              selected={startDate}\r\n                              onChange={(date) => setStartDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2 t-mb-15 mb-md-0\"\r\n                              placeholderText={_t(t(\"From date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-2 t-mb-15 mb-md-0\">\r\n                            <DatePicker\r\n                              selected={endDate}\r\n                              onChange={(date) => setEndDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2\"\r\n                              placeholderText={_t(t(\"To date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-5 col-md-4 t-mb-15 mb-md-0 d-none d-md-block text-right\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text py-2\"\r\n                              onClick={getItemWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 col-md-8 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text\"\r\n                              onClick={getItemWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {generatedReport ? (\r\n                          <>\r\n                            <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                              <div className=\"col-12 mb-md-0\">\r\n                                <Chart\r\n                                  options={amountChart.options}\r\n                                  series={amountChart.series}\r\n                                  type=\"line\"\r\n                                  width=\"100%\"\r\n                                  height=\"350px\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {reportData !== null &&\r\n                              reportData !== undefined &&\r\n                              reportData.length > 0 && (\r\n                                <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                                  <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                    <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                      <thead className=\"align-middle\">\r\n                                        <tr>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"S/L\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Name\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Group\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Variation\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Qty\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Bill\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Date\"))}\r\n                                          </th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody className=\"align-middle\">\r\n                                        {/* loop here*/}\r\n                                        {reportData.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.food_item}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.food_group}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.variation !== null\r\n                                                  ? item.variation\r\n                                                  : \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.quantity}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(item.price)}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                <Moment format=\"LL\">\r\n                                                  {item.created_at}\r\n                                                </Moment>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })}\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                            <div className=\"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\">\r\n                              {_t(\r\n                                t(\"Generate report following the above field\")\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst GroupWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [generatedReport, setGeneratedReport] = useState(false);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get GroupWise reports filter\r\n  const getGroupWiseSelected = () => {\r\n    if (startDate !== null && endDate !== null) {\r\n      setLoading(true);\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n      const url = BASE_URL + \"/settings/get-food-group-report\";\r\n      let formData = {\r\n        fromDate,\r\n        toDate,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          let formattedAmount = res.data[1].map((item) =>\r\n            parseFloat(formatPrice(item))\r\n          );\r\n          setAmountChart({\r\n            ...amountChart,\r\n            options: {\r\n              ...amountChart.options,\r\n              xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n            },\r\n            series: [\r\n              { name: amountChart.series[0].name, data: formattedAmount },\r\n            ],\r\n          });\r\n          setReportData(res.data[2]);\r\n          setGeneratedReport(true);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Please select all the field to generate report\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Group wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Food Group Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 mt-2\">\r\n                          <div className=\"col-12 col-md-2 d-md-block\">\r\n                            <DatePicker\r\n                              selected={startDate}\r\n                              onChange={(date) => setStartDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2 t-mb-15 mb-md-0\"\r\n                              placeholderText={_t(t(\"From date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-2 t-mb-15 mb-md-0\">\r\n                            <DatePicker\r\n                              selected={endDate}\r\n                              onChange={(date) => setEndDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2\"\r\n                              placeholderText={_t(t(\"To date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-5 col-md-4 t-mb-15 mb-md-0 d-none d-md-block text-right\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text py-2\"\r\n                              onClick={getGroupWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 col-md-8 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text\"\r\n                              onClick={getGroupWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {generatedReport ? (\r\n                          <>\r\n                            <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                              <div className=\"col-12 mb-md-0\">\r\n                                <Chart\r\n                                  options={amountChart.options}\r\n                                  series={amountChart.series}\r\n                                  type=\"bar\"\r\n                                  width=\"100%\"\r\n                                  height=\"350px\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {reportData !== null &&\r\n                              reportData !== undefined &&\r\n                              reportData.length > 0 && (\r\n                                <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                                  <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                    <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                      <thead className=\"align-middle\">\r\n                                        <tr>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"S/L\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Name\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Group\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Variation\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Qty\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Bill\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Date\"))}\r\n                                          </th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody className=\"align-middle\">\r\n                                        {/* loop here*/}\r\n                                        {reportData.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.food_item}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.food_group}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.variation !== null\r\n                                                  ? item.variation\r\n                                                  : \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.quantity}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(item.price)}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                <Moment format=\"LL\">\r\n                                                  {item.created_at}\r\n                                                </Moment>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })}\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                            <div className=\"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\">\r\n                              {_t(\r\n                                t(\"Generate report following the above field\")\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst BranchWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n  let { branchForSearch } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [generatedReport, setGeneratedReport] = useState(false);\r\n  const [branch, setBranch] = useState(null);\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  const handleBranch = (branch) => {\r\n    setBranch(branch);\r\n  };\r\n\r\n  //get BranchWise reports filter\r\n  const getBranchWiseSelected = () => {\r\n    if (branch !== null && startDate !== null && endDate !== null) {\r\n      setLoading(true);\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n      const url = BASE_URL + \"/settings/get-branch-report\";\r\n      let formData = {\r\n        fromDate,\r\n        toDate,\r\n        branch,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          let formattedAmount = res.data[1].map((item) =>\r\n            parseFloat(formatPrice(item))\r\n          );\r\n          setAmountChart({\r\n            ...amountChart,\r\n            options: {\r\n              ...amountChart.options,\r\n              xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n            },\r\n            series: [\r\n              { name: amountChart.series[0].name, data: formattedAmount },\r\n            ],\r\n          });\r\n          setReportData(res.data[2]);\r\n          setGeneratedReport(true);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Please select all the field to generate report\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Branch wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Branch Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 mt-2\">\r\n                          <div className=\"col-12 col-md-2 d-md-block\">\r\n                            <DatePicker\r\n                              selected={startDate}\r\n                              onChange={(date) => setStartDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2 t-mb-15 mb-md-0\"\r\n                              placeholderText={_t(t(\"From date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-2 t-mb-15 mb-md-0\">\r\n                            <DatePicker\r\n                              selected={endDate}\r\n                              onChange={(date) => setEndDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2\"\r\n                              placeholderText={_t(t(\"To date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <Select\r\n                            options={branchForSearch && branchForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={branch}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-md-4 d-none d-md-block \"\r\n                            onChange={handleBranch}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select a branch\")) + \"..\"}\r\n                          />\r\n\r\n                          <Select\r\n                            options={branchForSearch && branchForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={branch}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-5 mb-2 mb-md-0 d-block d-md-none\"\r\n                            onChange={handleBranch}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select a branch\")) + \"..\"}\r\n                          />\r\n\r\n                          <div className=\"col-4 t-mb-15 mb-md-0 d-none d-md-block text-right\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text py-2\"\r\n                              onClick={getBranchWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text\"\r\n                              onClick={getBranchWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {generatedReport ? (\r\n                          <>\r\n                            <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                              <div className=\"col-12 mb-md-0\">\r\n                                <Chart\r\n                                  options={amountChart.options}\r\n                                  series={amountChart.series}\r\n                                  type=\"bar\"\r\n                                  width=\"100%\"\r\n                                  height=\"350px\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {reportData !== null &&\r\n                              reportData !== undefined &&\r\n                              reportData.length > 0 && (\r\n                                <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                                  <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                    <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                      <thead className=\"align-middle\">\r\n                                        <tr>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"S/L\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Token\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Time\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Customer\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Bill\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Status\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Date\"))}\r\n                                          </th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody className=\"align-middle\">\r\n                                        {/* loop here*/}\r\n                                        {reportData.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                                #{item.token.id}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Moment format=\"LT\">\r\n                                                  {item.token.time}\r\n                                                </Moment>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.customer_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(\r\n                                                  item.total_payable\r\n                                                )}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n\r\n                                              <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.is_cancelled === 0 ? (\r\n                                                  [\r\n                                                    item.is_ready === 0 ? (\r\n                                                      <span\r\n                                                        class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"processing\"))}\r\n                                                      </span>\r\n                                                    ) : (\r\n                                                      <span\r\n                                                        class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"Ready\"))}\r\n                                                      </span>\r\n                                                    ),\r\n                                                  ]\r\n                                                ) : (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"Cancelled\"))}\r\n                                                  </span>\r\n                                                )}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Moment format=\"LL\">\r\n                                                  {item.created_at}\r\n                                                </Moment>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })}\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                            <div className=\"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\">\r\n                              {_t(\r\n                                t(\"Generate report following the above field\")\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { UserContext } from \"../../../../contexts/User\";\r\n\r\nconst UserWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n  let { adminStaffForSearch } = useContext(UserContext);\r\n\r\n  // States hook here\r\n  const [amountChart, setAmountChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n\r\n  // paidMoney\r\n  const [paidMoney, setPaidMoney] = useState(0);\r\n  //return\r\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n  //settle order\r\n  const [checkOrderDetails, setCheckOrderDetails] = useState({\r\n    item: null,\r\n    settle: false,\r\n    uploading: false,\r\n    payment_type: null,\r\n    payment_amount: null,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [generatedReport, setGeneratedReport] = useState(false);\r\n  const [theUser, setTheUser] = useState(null);\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, [adminStaffForSearch]);\r\n\r\n  const handleUser = (user) => {\r\n    setTheUser(user);\r\n  };\r\n\r\n  //get UserWise reports filter\r\n  const getUserWiseSelected = () => {\r\n    if (theUser !== null && startDate !== null && endDate !== null) {\r\n      setLoading(true);\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n      const url = BASE_URL + \"/settings/get-user-report\";\r\n      let formData = {\r\n        fromDate,\r\n        toDate,\r\n        user: theUser,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          let formattedAmount = res.data[1].map((item) =>\r\n            parseFloat(formatPrice(item))\r\n          );\r\n          setAmountChart({\r\n            ...amountChart,\r\n            options: {\r\n              ...amountChart.options,\r\n              xaxis: { ...amountChart.options.xaxis, categories: res.data[0] },\r\n            },\r\n            series: [\r\n              { name: amountChart.series[0].name, data: formattedAmount },\r\n            ],\r\n          });\r\n          setReportData(res.data[2]);\r\n          setGeneratedReport(true);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Please select all the field to generate report\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"POS user wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Settle modal */}\r\n      <div className=\"modal fade\" id=\"orderDetails\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {/* show order token on modal header */}\r\n                  {_t(t(\"Order details, Token\"))}: #\r\n                  {checkOrderDetails.item && checkOrderDetails.item.token.id}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            {/* if loading true show loading effect */}\r\n            {loading ? (\r\n              <div className=\"modal-body\">{modalLoading(5)}</div>\r\n            ) : (\r\n              <div className=\"modal-body\">\r\n                {checkOrderDetails.item &&\r\n                  //show this if order is cancelled\r\n                  checkOrderDetails.item.is_cancelled === 1 && (\r\n                    <div className=\"text-center bg-secondary text-white py-2\">\r\n                      {_t(t(\"This order has been cancelled\"))}\r\n                    </div>\r\n                  )}\r\n                {/* show this if order settle is not true, if true show payment input field */}\r\n                {!checkOrderDetails.settle ? (\r\n                  <div class=\"col-12 filtr-item\">\r\n                    <div class=\"fk-order-token t-bg-white\">\r\n                      <div class=\"fk-order-token__body\">\r\n                        <div class=\"fk-addons-table\">\r\n                          <div class=\"fk-addons-table__head text-center\">\r\n                            {_t(t(\"order token\"))}: #\r\n                            {checkOrderDetails.item &&\r\n                              checkOrderDetails.item.token.id}\r\n                          </div>\r\n                          <div class=\"fk-addons-table__info\">\r\n                            <div class=\"row g-0\">\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"S/L\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-3 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"food\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-4 text-left pl-2 border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Additional Info\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-2 text-center border-right\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"QTY\"))}\r\n                                </span>\r\n                              </div>\r\n                              <div class=\"col-1 text-center\">\r\n                                <span class=\"fk-addons-table__info-text text-capitalize\">\r\n                                  {_t(t(\"Status\"))}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {checkOrderDetails.item &&\r\n                            checkOrderDetails.item.orderedItems.map(\r\n                              (thisItem, indexThisItem) => {\r\n                                return (\r\n                                  <div class=\"fk-addons-table__body-row\">\r\n                                    <div class=\"row g-0\">\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {indexThisItem + 1}\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-3 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.food_item} (\r\n                                          {thisItem.food_group})\r\n                                        </span>\r\n                                      </div>\r\n                                      <div class=\"col-4 text-center border-right t-pl-10 t-pr-10\">\r\n                                        {thisItem.variation !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pt-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"variation\"))}:\r\n                                            </span>\r\n                                            {thisItem.variation}\r\n                                          </span>\r\n                                        )}\r\n\r\n                                        {thisItem.properties !== null && (\r\n                                          <span class=\"fk-addons-table__info-text text-capitalize d-block text-left t-pb-5\">\r\n                                            <span class=\"font-weight-bold mr-1\">\r\n                                              {_t(t(\"properties\"))}:\r\n                                            </span>\r\n                                            {JSON.parse(\r\n                                              thisItem.properties\r\n                                            ).map((propertyItem, thisIndex) => {\r\n                                              if (\r\n                                                thisIndex !==\r\n                                                JSON.parse(thisItem.properties)\r\n                                                  .length -\r\n                                                  1\r\n                                              ) {\r\n                                                return (\r\n                                                  propertyItem.property + \", \"\r\n                                                );\r\n                                              } else {\r\n                                                return propertyItem.property;\r\n                                              }\r\n                                            })}\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div class=\"col-2 text-center border-right d-flex\">\r\n                                        <span class=\"fk-addons-table__info-text text-capitalize m-auto\">\r\n                                          {thisItem.quantity}\r\n                                        </span>\r\n                                      </div>\r\n\r\n                                      <div class=\"col-1 text-center d-flex\">\r\n                                        <label class=\"mx-checkbox mx-checkbox--empty m-auto\">\r\n                                          <span class=\"mx-checkbox__text text-capitalize t-text-heading fk-addons-table__body-text\">\r\n                                            {thisItem.is_cooking === 1 ? (\r\n                                              [\r\n                                                thisItem.is_ready === 1 ? (\r\n                                                  <i\r\n                                                    className=\"fa fa-check text-success\"\r\n                                                    title={_t(t(\"Ready\"))}\r\n                                                  ></i>\r\n                                                ) : (\r\n                                                  <i\r\n                                                    className=\"fa fa-cutlery text-secondary\"\r\n                                                    title={_t(t(\"Cooking\"))}\r\n                                                  ></i>\r\n                                                ),\r\n                                              ]\r\n                                            ) : (\r\n                                              <i\r\n                                                className=\"fa fa-times text-primary\"\r\n                                                title={_t(t(\"Pending\"))}\r\n                                              ></i>\r\n                                            )}\r\n                                          </span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              }\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <table className=\"table table-striped table-sm text-center mt-3\">\r\n                  <thead className=\"bg-info text-white text-uppercase\">\r\n                    <tr>\r\n                      <th scope=\"col\" colSpan=\"2\">\r\n                        {_t(t(\"Order details\"))}\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Received by\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.user_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Customer\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.customer_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.branch_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Department\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.dept_tag_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Table\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.table_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Waiter\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item &&\r\n                          checkOrderDetails.item.waiter_name}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Subtotal\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.order_bill)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Vat\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.vat)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Service charge\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.service_charge)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">{_t(t(\"Discount\"))}</td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.discount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Total bill\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.total_payable)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"text-capitalized\">\r\n                        {_t(t(\"Paid amount\"))}\r\n                      </td>\r\n                      <td>\r\n                        {checkOrderDetails.item && (\r\n                          <>\r\n                            {currencySymbolLeft()}\r\n                            {formatPrice(checkOrderDetails.item.paid_amount)}\r\n                            {currencySymbolRight()}\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    {checkOrderDetails.item &&\r\n                    parseFloat(\r\n                      checkOrderDetails.item.total_payable -\r\n                        checkOrderDetails.item.paid_amount\r\n                    ) >= 0 ? (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Due amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.total_payable -\r\n                                    checkOrderDetails.item.paid_amount\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Return amount\"))}\r\n                        </td>\r\n                        <td>\r\n                          {checkOrderDetails.item && (\r\n                            <>\r\n                              {currencySymbolLeft()}\r\n                              {formatPrice(\r\n                                parseFloat(\r\n                                  checkOrderDetails.item.paid_amount -\r\n                                    checkOrderDetails.item.total_payable\r\n                                )\r\n                              )}\r\n                              {currencySymbolRight()}\r\n                            </>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Settle modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"POS user Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 mt-2\">\r\n                          <div className=\"col-12 col-md-2 d-md-block\">\r\n                            <DatePicker\r\n                              selected={startDate}\r\n                              onChange={(date) => setStartDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2 t-mb-15 mb-md-0\"\r\n                              placeholderText={_t(t(\"From date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-2 t-mb-15 mb-md-0\">\r\n                            <DatePicker\r\n                              selected={endDate}\r\n                              onChange={(date) => setEndDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2\"\r\n                              placeholderText={_t(t(\"To date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <Select\r\n                            options={adminStaffForSearch && adminStaffForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={theUser}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-md-4 d-none d-md-block \"\r\n                            onChange={handleUser}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select an user\")) + \"..\"}\r\n                          />\r\n\r\n                          <Select\r\n                            options={adminStaffForSearch && adminStaffForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={theUser}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-5 mb-2 mb-md-0 d-block d-md-none\"\r\n                            onChange={handleUser}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select an user\")) + \"..\"}\r\n                          />\r\n\r\n                          <div className=\"col-4 t-mb-15 mb-md-0 d-none d-md-block text-right\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text py-2\"\r\n                              onClick={getUserWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text\"\r\n                              onClick={getUserWiseSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {generatedReport ? (\r\n                          <>\r\n                            <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                              <div className=\"col-12 mb-md-0\">\r\n                                <Chart\r\n                                  options={amountChart.options}\r\n                                  series={amountChart.series}\r\n                                  type=\"bar\"\r\n                                  width=\"100%\"\r\n                                  height=\"350px\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            {reportData !== null &&\r\n                              reportData !== undefined &&\r\n                              reportData.length > 0 && (\r\n                                <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                                  <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                    <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                      <thead className=\"align-middle\">\r\n                                        <tr>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"S/L\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Token\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Time\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Customer\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Bill\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"branch\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Status\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Date\"))}\r\n                                          </th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody className=\"align-middle\">\r\n                                        {/* loop here*/}\r\n                                        {reportData.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                                #{item.token.id}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Moment format=\"LT\">\r\n                                                  {item.token.time}\r\n                                                </Moment>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.customer_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(\r\n                                                  item.total_payable\r\n                                                )}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name}\r\n                                              </td>\r\n\r\n                                              <td class=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.is_cancelled === 0 ? (\r\n                                                  [\r\n                                                    item.is_ready === 0 ? (\r\n                                                      <span\r\n                                                        class=\"btn btn-transparent btn-secondary xsm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"processing\"))}\r\n                                                      </span>\r\n                                                    ) : (\r\n                                                      <span\r\n                                                        class=\"btn btn-transparent btn-success xsm-text text-capitalize px-4\"\r\n                                                        onClick={() => {\r\n                                                          setCheckOrderDetails({\r\n                                                            ...checkOrderDetails,\r\n                                                            item: item,\r\n                                                            settle: false,\r\n                                                          });\r\n                                                          setReturnMoneyUsd(0);\r\n                                                          setPaidMoney(0);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#orderDetails\"\r\n                                                      >\r\n                                                        {_t(t(\"Ready\"))}\r\n                                                      </span>\r\n                                                    ),\r\n                                                  ]\r\n                                                ) : (\r\n                                                  <span\r\n                                                    class=\"btn btn-transparent btn-primary xsm-text text-capitalize px-3\"\r\n                                                    onClick={() => {\r\n                                                      setCheckOrderDetails({\r\n                                                        ...checkOrderDetails,\r\n                                                        item: item,\r\n                                                        settle: false,\r\n                                                      });\r\n                                                      setReturnMoneyUsd(0);\r\n                                                      setPaidMoney(0);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#orderDetails\"\r\n                                                  >\r\n                                                    {_t(t(\"Cancelled\"))}\r\n                                                  </span>\r\n                                                )}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Moment format=\"LL\">\r\n                                                  {item.created_at}\r\n                                                </Moment>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })}\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                            <div className=\"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\">\r\n                              {_t(\r\n                                t(\"Generate report following the above field\")\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, getCookie, tableLoading } from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\n\r\nconst DeptWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  let {\r\n    setFoodForSearch,\r\n    foodGroupForSearch,\r\n    propertyGroupForSearch,\r\n    variationForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new item\r\n  let [newItem, setNewItem] = useState({\r\n    itemGroup: null,\r\n    name: \"\",\r\n    price: \"\",\r\n    image: null,\r\n    hasProperty: false,\r\n    properties: null,\r\n    hasVariation: false,\r\n    variations: null,\r\n  });\r\n\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  const [chart, setChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"series-1\",\r\n        data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Department wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Department wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0 text-center mt-5\">\r\n                            <img\r\n                              src=\"/khadyo/assets/img/coming_soon.png\"\r\n                              alt=\"Coming Soon\"\r\n                              className=\"img-fluid\"\r\n                              style={{ maxHeight: \"350px\", maxWidth: \"600px\" }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, getCookie, tableLoading } from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\n\r\nconst ServiceChargeWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  let {\r\n    setFoodForSearch,\r\n    foodGroupForSearch,\r\n    propertyGroupForSearch,\r\n    variationForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new item\r\n  let [newItem, setNewItem] = useState({\r\n    itemGroup: null,\r\n    name: \"\",\r\n    price: \"\",\r\n    image: null,\r\n    hasProperty: false,\r\n    properties: null,\r\n    hasVariation: false,\r\n    variations: null,\r\n  });\r\n\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  const [chart, setChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"series-1\",\r\n        data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Service Charge Wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Service Charge Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0 text-center mt-5\">\r\n                            <img\r\n                              src=\"/khadyo/assets/img/coming_soon.png\"\r\n                              alt=\"Coming Soon\"\r\n                              className=\"img-fluid\"\r\n                              style={{ maxHeight: \"350px\", maxWidth: \"600px\" }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiceChargeWise;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport { _t, getCookie, tableLoading } from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\n\r\nconst DiscountWise = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  let {\r\n    setFoodForSearch,\r\n    foodGroupForSearch,\r\n    propertyGroupForSearch,\r\n    variationForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new item\r\n  let [newItem, setNewItem] = useState({\r\n    itemGroup: null,\r\n    name: \"\",\r\n    price: \"\",\r\n    image: null,\r\n    hasProperty: false,\r\n    properties: null,\r\n    hasVariation: false,\r\n    variations: null,\r\n  });\r\n\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  const [chart, setChart] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"basic-bar\",\r\n      },\r\n      xaxis: {\r\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"series-1\",\r\n        data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Discount Wise report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Discount Wise report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0 text-center mt-5\">\r\n                            <img\r\n                              src=\"/khadyo/assets/img/coming_soon.png\"\r\n                              alt=\"Coming Soon\"\r\n                              className=\"img-fluid\"\r\n                              style={{ maxHeight: \"350px\", maxWidth: \"600px\" }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiscountWise;\r\n","import React, { useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  managePageHrefLink,\r\n  managePageHrefLinkMobile,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ManageSidebar = () => {\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    handleJquery();\r\n  }, []);\r\n\r\n  //jQuery goes here\r\n  const handleJquery = () => {\r\n    var posHasSub = $(\".fk-pos-nav__list-has-sub\");\r\n    var posSub = $(\".fk-pos-nav__sub\");\r\n    $(\".fk-pos-nav__list-has-sub > a\").on(\"click\", function (e) {\r\n      e.preventDefault();\r\n    });\r\n    posHasSub.on(\"click\", function () {\r\n      $(this).find(posSub).slideDown();\r\n      $(this).siblings().find(posSub).slideUp();\r\n      $(this).addClass(\"active\").siblings().removeClass(\"active\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Navigation for Small Screen  */}\r\n      <div className=\"d-lg-none\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"fk-sm-nav\" data-simplebar>\r\n              <ul className=\"t-list fk-sm-nav__bar flex-row\">\r\n                {/* Foods */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/food/add-new\",\r\n                  _t(t(\"Add new item\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/food/all-items\",\r\n                  _t(t(\"All Items\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/food/groups\",\r\n                  _t(t(\"Groups\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/food/properties\",\r\n                  _t(t(\"Properties\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/food/variations\",\r\n                  _t(t(\"Variations\"))\r\n                )}\r\n\r\n                {/* User Management */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/user/admin-staff\",\r\n                  _t(t(\"Admin / Staff\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/user/customers\",\r\n                  _t(t(\"Customers\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/user/waiters\",\r\n                  _t(t(\"Waiters\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/roles-and-permissions\",\r\n                  _t(t(\"Role Groups\"))\r\n                )}\r\n\r\n                {/* Restaurant */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/restaurant/branches\",\r\n                  _t(t(\"Branches\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/restaurant/dept-tags\",\r\n                  _t(t(\"Dept Tags\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/restaurant/tables\",\r\n                  _t(t(\"Tables\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/restaurant/payment-type\",\r\n                  _t(t(\"Payment Types\"))\r\n                )}\r\n\r\n                {/* Settings */}\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/settings/currencies\",\r\n                  _t(t(\"Currencies\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/settings/languages\",\r\n                  _t(t(\"Languages\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/settings/smtp-settings\",\r\n                  _t(t(\"Email / Smtp\"))\r\n                )}\r\n\r\n                {managePageHrefLinkMobile(\r\n                  \"/dashboard/manage/settings/general-settings\",\r\n                  _t(t(\"General Settings\"))\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Navigation for Small Screen  End*/}\r\n\r\n      {/* Navigation for large Screen  */}\r\n      <div className=\"d-none d-lg-block\">\r\n        <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n          <ul className=\"t-list fk-pos-nav\">\r\n            {/* Foods */}\r\n            <li\r\n              className={`fk-pos-nav__list fk-pos-nav__list-has-sub ${\r\n                window.location.pathname.includes(\"/food\") ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <a\r\n                className=\"w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase rounded-0 text-left\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\"\r\n              >\r\n                {_t(t(\"Foods\"))}\r\n              </a>\r\n              <ul className=\"t-list fk-pos-nav__sub t-bg-white list-group\">\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/food/add-new\",\r\n                  _t(t(\"Add new item\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/food/all-items\",\r\n                  _t(t(\"All Items\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/food/groups\",\r\n                  _t(t(\"Groups\"))\r\n                )}\r\n\r\n                {/* {managePageHrefLink(\r\n                  \"/dashboard/manage/food/units\",\r\n                  _t(t(\"Units\"))\r\n                )} */}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/food/properties\",\r\n                  _t(t(\"Properties\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/food/variations\",\r\n                  _t(t(\"Variations\"))\r\n                )}\r\n              </ul>\r\n            </li>\r\n\r\n            {/* User Management */}\r\n            <li\r\n              className={`fk-pos-nav__list fk-pos-nav__list-has-sub ${\r\n                window.location.pathname.includes(\"/roles\") ||\r\n                window.location.pathname.includes(\"/user/\")\r\n                  ? \"active\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <a\r\n                className=\"w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase rounded-0 text-left\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\"\r\n              >\r\n                {_t(t(\"User Management\"))}\r\n              </a>\r\n              <ul className=\"t-list fk-pos-nav__sub t-bg-white list-group\">\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/user/admin-staff\",\r\n                  _t(t(\"Admin / Staff\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/user/customers\",\r\n                  _t(t(\"Customers\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/user/waiters\",\r\n                  _t(t(\"Waiters\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/roles-and-permissions\",\r\n                  _t(t(\"Role Groups\"))\r\n                )}\r\n              </ul>\r\n            </li>\r\n\r\n            {/* Restaurant */}\r\n            <li\r\n              className={`fk-pos-nav__list fk-pos-nav__list-has-sub \r\n              ${\r\n                window.location.pathname.includes(\"/restaurant\") ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <a\r\n                className=\"w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase rounded-0 text-left\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\"\r\n              >\r\n                {_t(t(\"Restaurant\"))}\r\n              </a>\r\n              <ul className=\"t-list fk-pos-nav__sub t-bg-white list-group\">\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/restaurant/branches\",\r\n                  _t(t(\"Branches\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/restaurant/dept-tags\",\r\n                  _t(t(\"Dept Tags\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/restaurant/tables\",\r\n                  _t(t(\"Tables\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/restaurant/payment-type\",\r\n                  _t(t(\"Payment Types\"))\r\n                )}\r\n              </ul>\r\n            </li>\r\n\r\n            {/* Settings */}\r\n            <li\r\n              className={`fk-pos-nav__list fk-pos-nav__list-has-sub ${\r\n                window.location.pathname.includes(\"/settings/\") ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <a\r\n                className=\"w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase rounded-0 text-left\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"#\"\r\n              >\r\n                {_t(t(\"Settings\"))}\r\n              </a>\r\n              <ul className=\"t-list fk-pos-nav__sub t-bg-white list-group\">\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/settings/currencies\",\r\n                  _t(t(\"Currencies\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/settings/languages\",\r\n                  _t(t(\"Languages\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/settings/smtp-settings\",\r\n                  _t(t(\"Email / Smtp\"))\r\n                )}\r\n\r\n                {managePageHrefLink(\r\n                  \"/dashboard/manage/settings/general-settings\",\r\n                  _t(t(\"General Settings\"))\r\n                )}\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      {/* Navigation for large Screen End */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageSidebar;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst GroupCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //food group\r\n    getFoodGroup,\r\n    foodGroupList,\r\n    setFoodGroupList,\r\n    setPaginatedFoodGroup,\r\n    foodGroupForSearch,\r\n    setFoodGroupforSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newFoodGroup, setNewFoodGroup] = useState({\r\n    name: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedFoodGroup, setSearchedFoodGroup] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name hook\r\n  const handleSetNewFoodGroup = (e) => {\r\n    setNewFoodGroup({ ...newFoodGroup, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New paymentType\r\n  const handleSaveNewFoodGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/new-food-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newFoodGroup.name);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewFoodGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewFoodGroup({\r\n          ...newFoodGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A food group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A food group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let paymentType = foodGroupForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      name: paymentType[0].name,\r\n      input_key: paymentType[0].input_key,\r\n      editSlug: paymentType[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update food group\r\n  const handleUpdateFoodGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/update-food-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newFoodGroup.name);\r\n    formData.append(\"editSlug\", newFoodGroup.editSlug);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewFoodGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewFoodGroup({\r\n          ...newFoodGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A food group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A food group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search food group here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedFoodGroup({ ...searchedFoodGroup, searched: false });\r\n    } else {\r\n      let searchedList = foodGroupForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedFoodGroup({\r\n        ...searchedFoodGroup,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of paymentType\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteFoodGroup(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete paymentType here\r\n  const handleDeleteFoodGroup = (slug) => {\r\n    setLoading(true);\r\n    const foodGroupUrl = BASE_URL + `/settings/delete-food-group/${slug}`;\r\n    return axios\r\n      .get(foodGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Food Groups\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addPaymentType\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newFoodGroup.edit\r\n                    ? _t(t(\"Add new food group\"))\r\n                    : _t(t(\"Update food group\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newFoodGroup.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newFoodGroup.edit\r\n                        ? handleSaveNewFoodGroup\r\n                        : handleUpdateFoodGroup\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Burger, Chicken\"\r\n                        value={newFoodGroup.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewFoodGroup}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newFoodGroup.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newFoodGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newFoodGroup.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedFoodGroup.searched\r\n                                    ? _t(t(\"Food Group List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addPaymentType\"\r\n                                  onClick={() => {\r\n                                    setNewFoodGroup({\r\n                                      ...newFoodGroup,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedFoodGroup.searched\r\n                                ? [\r\n                                    foodGroupList && [\r\n                                      foodGroupList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        foodGroupList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodGroupList.current_page -\r\n                                                      1) *\r\n                                                      foodGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedFoodGroup && [\r\n                                      searchedFoodGroup.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedFoodGroup.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodGroupList.current_page -\r\n                                                      1) *\r\n                                                      foodGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newFoodGroup.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedFoodGroup.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(foodGroupList, setPaginatedFoodGroup)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(foodGroupList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedFoodGroup({\r\n                                      ...searchedFoodGroup,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedFoodGroup,\r\n                                    foodGroupForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst VariationCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //variation\r\n    getVariation,\r\n    variationList,\r\n    setVariationList,\r\n    setPaginatedVariation,\r\n    variationForSearch,\r\n    setVariationForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new variation\r\n  let [newVariation, setNewVariation] = useState({\r\n    name: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedVariation, setSearchedVariation] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name hook\r\n  const handleSetNewVariation = (e) => {\r\n    setNewVariation({ ...newVariation, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New variation\r\n  const handleSaveNewVariation = (e) => {\r\n    e.preventDefault();\r\n    setNewVariation({\r\n      ...newVariation,\r\n      uploading: true,\r\n    });\r\n    const variationUrl = BASE_URL + `/settings/new-variation`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newVariation.name);\r\n    return axios\r\n      .post(variationUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewVariation({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setVariationList(res.data[0]);\r\n        setVariationForSearch(res.data[1]);\r\n        setSearchedVariation({\r\n          ...searchedVariation,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Variation has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewVariation({\r\n          ...newVariation,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A variation already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A variation already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let variation = variationForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewVariation({\r\n      ...newVariation,\r\n      name: variation[0].name,\r\n      editSlug: variation[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update Variation\r\n  const handleUpdateVariation = (e) => {\r\n    e.preventDefault();\r\n    setNewVariation({\r\n      ...newVariation,\r\n      uploading: true,\r\n    });\r\n    const variationUrl = BASE_URL + `/settings/update-variation`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newVariation.name);\r\n    formData.append(\"editSlug\", newVariation.editSlug);\r\n    return axios\r\n      .post(variationUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewVariation({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setVariationList(res.data[0]);\r\n        setVariationForSearch(res.data[1]);\r\n        setSearchedVariation({\r\n          ...searchedVariation,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Variation has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewVariation({\r\n          ...newVariation,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A variation already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A variation already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search Variation here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedVariation({ ...searchedVariation, searched: false });\r\n    } else {\r\n      let searchedList = variationForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedVariation({\r\n        ...searchedVariation,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of variation\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteVariation(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete variation here\r\n  const handleDeleteVariation = (slug) => {\r\n    setLoading(true);\r\n    const variationUrl = BASE_URL + `/settings/delete-variation/${slug}`;\r\n    return axios\r\n      .get(variationUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"data exist\") {\r\n          setLoading(false);\r\n          toast.error(\r\n            `${_t(t(\"Please remove this variation from food item first\"))}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        } else {\r\n          setVariationList(res.data[0]);\r\n          setVariationForSearch(res.data[1]);\r\n          setSearchedVariation({\r\n            ...searchedVariation,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Variation has been deleted successfully\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Variations\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addvariation\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newVariation.edit\r\n                    ? _t(t(\"Add new variation\"))\r\n                    : _t(t(\"Update variation\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newVariation.uploading === false ? (\r\n                <div key=\"fragment-variation-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newVariation.edit\r\n                        ? handleSaveNewVariation\r\n                        : handleUpdateVariation\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. small, medium, large, half, full, 1ltr, 500ml\"\r\n                        value={newVariation.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewVariation}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newVariation.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newVariation.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newVariation.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedVariation.searched\r\n                                    ? _t(t(\"Variation List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addvariation\"\r\n                                  onClick={() => {\r\n                                    setNewVariation({\r\n                                      ...newVariation,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedVariation.searched\r\n                                ? [\r\n                                    variationList && [\r\n                                      variationList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        variationList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (variationList.current_page -\r\n                                                      1) *\r\n                                                      variationList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addvariation\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedVariation && [\r\n                                      searchedVariation.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedVariation.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (variationList.current_page -\r\n                                                      1) *\r\n                                                      variationList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addvariation\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newVariation.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedVariation.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(variationList, setPaginatedVariation)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(variationList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedVariation({\r\n                                      ...searchedVariation,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedVariation,\r\n                                    variationForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VariationCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst PropertyCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //property group\r\n    getPropertyGroup,\r\n    propertyGroupList,\r\n    setPropertyGroupList,\r\n    setPaginatedPropertyGroup,\r\n    propertyGroupForSearch,\r\n    setPropertyGroupForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new property group\r\n  let [newPropertyGroup, setNewPropertyGroup] = useState({\r\n    name: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedPropertyGroup, setSearchedPropertyGroup] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name hook\r\n  const handleSetNewPropertyGroup = (e) => {\r\n    setNewPropertyGroup({\r\n      ...newPropertyGroup,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Save New variation\r\n  const handleSaveNewPropertyGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewPropertyGroup({\r\n      ...newPropertyGroup,\r\n      uploading: true,\r\n    });\r\n    const propertyGroupUrl = BASE_URL + `/settings/new-property-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPropertyGroup.name);\r\n    return axios\r\n      .post(propertyGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewPropertyGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPropertyGroupList(res.data[0]);\r\n        setPropertyGroupForSearch(res.data[1]);\r\n        setSearchedPropertyGroup({\r\n          ...searchedPropertyGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Property group has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewPropertyGroup({\r\n          ...newPropertyGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A property group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A property group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let variation = propertyGroupForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewPropertyGroup({\r\n      ...newPropertyGroup,\r\n      name: variation[0].name,\r\n      editSlug: variation[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update property group\r\n  const handleUpdatePropertyGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewPropertyGroup({\r\n      ...newPropertyGroup,\r\n      uploading: true,\r\n    });\r\n    const propertyGroupUrl = BASE_URL + `/settings/update-property-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPropertyGroup.name);\r\n    formData.append(\"editSlug\", newPropertyGroup.editSlug);\r\n    return axios\r\n      .post(propertyGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewPropertyGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPropertyGroupList(res.data[0]);\r\n        setPropertyGroupForSearch(res.data[1]);\r\n        setSearchedPropertyGroup({\r\n          ...searchedPropertyGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Property group has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewPropertyGroup({\r\n          ...newPropertyGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A property group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A property group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search property group here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedPropertyGroup({ ...searchedPropertyGroup, searched: false });\r\n    } else {\r\n      let searchedList = propertyGroupForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedPropertyGroup({\r\n        ...searchedPropertyGroup,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of property group\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeletePropertyGroup(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete variation here\r\n  const handleDeletePropertyGroup = (slug) => {\r\n    setLoading(true);\r\n    const propertyGroupUrl =\r\n      BASE_URL + `/settings/delete-property-group/${slug}`;\r\n    return axios\r\n      .get(propertyGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPropertyGroupList(res.data[0]);\r\n        setPropertyGroupForSearch(res.data[1]);\r\n        setSearchedPropertyGroup({\r\n          ...searchedPropertyGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(\r\n          `${_t(t(\"Property group has been deleted successfully\"))}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Property groups\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addvariation\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newPropertyGroup.edit\r\n                    ? _t(t(\"Add new property group\"))\r\n                    : _t(t(\"Update property group\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newPropertyGroup.uploading === false ? (\r\n                <div key=\"fragment-property-group-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newPropertyGroup.edit\r\n                        ? handleSaveNewPropertyGroup\r\n                        : handleUpdatePropertyGroup\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Addon, spice level, sauce level\"\r\n                        value={newPropertyGroup.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewPropertyGroup}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newPropertyGroup.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newPropertyGroup.edit\r\n                            ? _t(t(\"Save\"))\r\n                            : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newPropertyGroup.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedPropertyGroup.searched\r\n                                    ? _t(t(\"Property Group List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addvariation\"\r\n                                  onClick={() => {\r\n                                    setNewPropertyGroup({\r\n                                      ...newPropertyGroup,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedPropertyGroup.searched\r\n                                ? [\r\n                                    propertyGroupList && [\r\n                                      propertyGroupList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        propertyGroupList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (propertyGroupList.current_page -\r\n                                                      1) *\r\n                                                      propertyGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <NavLink\r\n                                                        to={`/dashboard/manage/food/properties/${item.slug}`}\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-plus\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Items\"))}\r\n                                                      </NavLink>\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addvariation\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedPropertyGroup && [\r\n                                      searchedPropertyGroup.list.length ===\r\n                                      0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedPropertyGroup.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (propertyGroupList.current_page -\r\n                                                      1) *\r\n                                                      propertyGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <NavLink\r\n                                                        to={`/dashboard/manage/food/properties/${item.slug}`}\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-plus\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Items\"))}\r\n                                                      </NavLink>\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addvariation\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newPropertyGroup.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedPropertyGroup.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                propertyGroupList,\r\n                                setPaginatedPropertyGroup\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(propertyGroupList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedPropertyGroup({\r\n                                      ...searchedPropertyGroup,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedPropertyGroup,\r\n                                    propertyGroupForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PropertyCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useHistory, useParams } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  //common\r\n  _t,\r\n  getCookie,\r\n  formatPrice,\r\n  currencySymbolLeft,\r\n  currencySymbolRight,\r\n\r\n  //loading\r\n  modalLoading,\r\n  tableLoading,\r\n\r\n  //pagination\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst PropertyItemCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const propertySlug = useParams();\r\n  //getting context values here\r\n\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    //property Item\r\n    getPropertyItem,\r\n    propertyItemList,\r\n    setPropertyItemList,\r\n    propertyItemForSearch,\r\n    setPropertyItemForSearch,\r\n    propertyItemGroup,\r\n    getFood,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new property item\r\n  let [newPropertyItem, setNewPropertyItem] = useState({\r\n    name: \"\",\r\n    extraPrice: null,\r\n    allow_multi_quantity: false,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedPropertyItem, setSearchedPropertyItem] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getPropertyItem(propertySlug.slug);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //set name hook\r\n  const handleSetNewPropertyItem = (e) => {\r\n    setNewPropertyItem({\r\n      ...newPropertyItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMultiQuantity = () => {\r\n    setNewPropertyItem({\r\n      ...newPropertyItem,\r\n      allow_multi_quantity: !newPropertyItem.allow_multi_quantity,\r\n    });\r\n  };\r\n\r\n  //Save New property item\r\n  const handleSaveNewPropertyItem = (e) => {\r\n    e.preventDefault();\r\n    setNewPropertyItem({\r\n      ...newPropertyItem,\r\n      uploading: true,\r\n    });\r\n    const propertyItemUrl = BASE_URL + `/settings/new-property-item`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPropertyItem.name);\r\n    formData.append(\"extraPrice\", newPropertyItem.extraPrice);\r\n    formData.append(\r\n      \"allow_multi_quantity\",\r\n      newPropertyItem.allow_multi_quantity === false ? 0 : 1\r\n    );\r\n    formData.append(\"propertyGroupSlug\", propertySlug.slug);\r\n    return axios\r\n      .post(propertyItemUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewPropertyItem({\r\n          name: \"\",\r\n          extraPrice: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPropertyItemList(res.data[0]);\r\n        setPropertyItemForSearch(res.data[0]);\r\n        setSearchedPropertyItem({\r\n          ...searchedPropertyItem,\r\n          list: res.data[0],\r\n        });\r\n        getFood();\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Property item has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewPropertyItem({\r\n          ...newPropertyItem,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let variation = propertyItemForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewPropertyItem({\r\n      ...newPropertyItem,\r\n      name: variation[0].name,\r\n      extraPrice: variation[0].extra_price,\r\n      allow_multi_quantity:\r\n        variation[0].allow_multi_quantity === 1 ? true : false,\r\n      editSlug: variation[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update property item\r\n  const handleUpdatePropertyItem = (e) => {\r\n    e.preventDefault();\r\n    setNewPropertyItem({\r\n      ...newPropertyItem,\r\n      uploading: true,\r\n    });\r\n    const propertyItemUrl = BASE_URL + `/settings/update-property-item`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPropertyItem.name);\r\n    formData.append(\"extraPrice\", newPropertyItem.extraPrice);\r\n    formData.append(\r\n      \"allow_multi_quantity\",\r\n      newPropertyItem.allow_multi_quantity === false ? 0 : 1\r\n    );\r\n    formData.append(\"editSlug\", newPropertyItem.editSlug);\r\n    formData.append(\"propertyGroupSlug\", propertySlug.slug);\r\n    return axios\r\n      .post(propertyItemUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewPropertyItem({\r\n          name: \"\",\r\n          extraPrice: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPropertyItemList(res.data[0]);\r\n        setPropertyItemForSearch(res.data[0]);\r\n        setSearchedPropertyItem({\r\n          ...searchedPropertyItem,\r\n          list: res.data[0],\r\n        });\r\n        getFood();\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Property item has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewPropertyItem({\r\n          ...newPropertyItem,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search property item here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedPropertyItem({ ...searchedPropertyItem, searched: false });\r\n    } else {\r\n      let searchedList = propertyItemForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemExtraPrice = item.extra_price.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemExtraPrice.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedPropertyItem({\r\n        ...searchedPropertyItem,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of property item\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeletePropertyItem(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete variation here\r\n  const handleDeletePropertyItem = (slug) => {\r\n    setLoading(true);\r\n    const propertyItemUrl = BASE_URL + `/settings/delete-property-item/${slug}`;\r\n    return axios\r\n      .get(propertyItemUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPropertyItemList(res.data[0]);\r\n        setPropertyItemForSearch(res.data[0]);\r\n        setSearchedPropertyItem({\r\n          ...searchedPropertyItem,\r\n          list: res.data[0],\r\n        });\r\n        getFood();\r\n        setLoading(false);\r\n        toast.success(\r\n          `${_t(t(\"Property item has been deleted successfully\"))}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Property Items\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addvariation\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newPropertyItem.edit\r\n                    ? _t(t(\"Add new property item\"))\r\n                    : _t(t(\"Update property item\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newPropertyItem.uploading === false ? (\r\n                <div key=\"fragment-property-item-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newPropertyItem.edit\r\n                        ? handleSaveNewPropertyItem\r\n                        : handleUpdatePropertyItem\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Egg, Cheese, Mild, Spicy\"\r\n                        value={newPropertyItem.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewPropertyItem}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <label htmlFor=\"extraPrice\" className=\"form-label\">\r\n                        {_t(t(\"Price\"))}{\" \"}\r\n                        <small className=\"text-primary\">* </small>\r\n                        <small className=\"text-secondary\">\r\n                          ( {_t(t(\"Insert 0 if it is free\"))} ) (\r\n                          {_t(t(\"Enter price in USD\"))})\r\n                        </small>\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        className=\"form-control\"\r\n                        id=\"extraPrice\"\r\n                        name=\"extraPrice\"\r\n                        placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                        value={newPropertyItem.extraPrice || \"\"}\r\n                        required\r\n                        onChange={handleSetNewPropertyItem}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-check mt-4\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        id=\"has_multiple_quantity\"\r\n                        checked={newPropertyItem.allow_multi_quantity}\r\n                        onChange={handleMultiQuantity}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"has_multiple_quantity\"\r\n                      >\r\n                        {_t(t(\"Allow multiple quantity?\"))}\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newPropertyItem.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newPropertyItem.edit\r\n                            ? _t(t(\"Save\"))\r\n                            : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newPropertyItem.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedPropertyItem.searched\r\n                                    ? [\r\n                                        `${\r\n                                          propertyItemGroup\r\n                                            ? propertyItemGroup.name\r\n                                            : \"\"\r\n                                        } ${_t(t(\"List\"))}`,\r\n                                      ]\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addvariation\"\r\n                                  onClick={() => {\r\n                                    setNewPropertyItem({\r\n                                      ...newPropertyItem,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Price\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedPropertyItem.searched\r\n                                ? [\r\n                                    propertyItemList && [\r\n                                      propertyItemList.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        propertyItemList.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(item.extra_price)}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() =>\r\n                                                        handleSetEdit(item.slug)\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addvariation\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedPropertyItem && [\r\n                                      searchedPropertyItem.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedPropertyItem.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index + 1}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {currencySymbolLeft()}\r\n                                                  {formatPrice(\r\n                                                    item.extra_price\r\n                                                  )}\r\n                                                  {currencySymbolRight()}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addvariation\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newPropertyItem.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedPropertyItem.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              <div style={{ height: \"33px\" }}></div>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {_t(t(\"Showing\"))}{\" \"}\r\n                                    {propertyItemForSearch &&\r\n                                      propertyItemForSearch.length}{\" \"}\r\n                                    {_t(t(\"of\"))}{\" \"}\r\n                                    {propertyItemForSearch &&\r\n                                      propertyItemForSearch.length}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedPropertyItem({\r\n                                      ...searchedPropertyItem,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedPropertyItem,\r\n                                    propertyItemForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PropertyItemCrud;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst FoodItemCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  let {\r\n    setFoodForSearch,\r\n    foodGroupForSearch,\r\n    propertyGroupForSearch,\r\n    variationForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new item\r\n  let [newItem, setNewItem] = useState({\r\n    itemGroup: null,\r\n    name: \"\",\r\n    price: \"\",\r\n    image: null,\r\n    hasProperty: false,\r\n    properties: null,\r\n    hasVariation: false,\r\n    variations: null,\r\n  });\r\n\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  //on change input field\r\n  const handleChange = (e) => {\r\n    setNewItem({ ...newItem, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set image hook\r\n  const handleItemImage = (e) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //set properties hook\r\n  const handleSetPropertes = (properties) => {\r\n    setNewItem({ ...newItem, properties });\r\n  };\r\n\r\n  //set variations hook\r\n  const handleSetVariations = (variations) => {\r\n    setNewItem({ ...newItem, variations });\r\n  };\r\n\r\n  //set each variation price\r\n  const handleVariationPrice = (e) => {\r\n    setPriceForVariations({\r\n      ...priceForVariations,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //handle Set item group hook\r\n  const handleSetItemGroup = (itemGroup) => {\r\n    setNewItem({ ...newItem, itemGroup });\r\n  };\r\n\r\n  //has Property\r\n  const handlePropertyCheckboxChange = (e) => {\r\n    if (newItem.hasProperty === true) {\r\n      setNewItem({\r\n        ...newItem,\r\n        properties: null,\r\n        hasProperty: !newItem.hasProperty,\r\n      });\r\n    } else {\r\n      setNewItem({ ...newItem, hasProperty: !newItem.hasProperty });\r\n    }\r\n  };\r\n\r\n  //has variations\r\n  const handleVariationCheckboxChange = (e) => {\r\n    if (newItem.hasVariation === true) {\r\n      setNewItem({\r\n        ...newItem,\r\n        variations: null,\r\n        hasVariation: !newItem.hasVariation,\r\n      });\r\n    } else {\r\n      setNewItem({ ...newItem, hasVariation: !newItem.hasVariation });\r\n    }\r\n  };\r\n\r\n  //post req of food item add\r\n  const foodItemAxios = () => {\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    formData.append(\"food_group_id\", newItem.itemGroup.id);\r\n    formData.append(\"name\", newItem.name);\r\n    formData.append(\"hasProperty\", newItem.hasProperty === true ? 1 : 0);\r\n    if (newItem.hasProperty === true) {\r\n      formData.append(\"hasProperty\", 1);\r\n      let tempArray = [];\r\n      newItem.properties.map((pItem) => {\r\n        tempArray.push(pItem.id);\r\n      });\r\n      formData.append(\"properties\", tempArray);\r\n    }\r\n\r\n    formData.append(\"hasVariation\", newItem.hasVariation === true ? 1 : 0);\r\n    if (newItem.hasVariation === false) {\r\n      formData.append(\"price\", newItem.price);\r\n    } else {\r\n      //converting variations and prices to array\r\n      let slugArray = [];\r\n      newItem.variations.map((newVarItem) => {\r\n        slugArray.push(newVarItem.slug);\r\n      });\r\n      slugArray.map((slugItem) => {\r\n        formData.append(\"slugOfVariations[]\", slugItem);\r\n      });\r\n\r\n      let tempData = Object.entries(priceForVariations);\r\n      tempData.map((item) => {\r\n        formData.append(\"variations[]\", item);\r\n      });\r\n    }\r\n\r\n    formData.append(\"image\", newItem.image);\r\n    const url = BASE_URL + \"/settings/new-food-item\";\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodForSearch(res.data[1]);\r\n        setNewItem({\r\n          itemGroup: null,\r\n          name: \"\",\r\n          price: \"\",\r\n          image: null,\r\n          hasProperty: false,\r\n          properties: null,\r\n          hasVariation: false,\r\n          variations: null,\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food item has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.data.errors.image) {\r\n          error.response.data.errors.image.forEach((item) => {\r\n            if (item === \"Please select a valid image file\") {\r\n              toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n            if (item === \"Please select a file less than 5MB\") {\r\n              toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  //send to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //check item group selected\r\n    if (newItem.itemGroup !== null) {\r\n      //check property is selected or not if property checkbox is checked\r\n      if (newItem.hasProperty === true && newItem.properties === null) {\r\n        toast.error(`${_t(t(\"Please select properties\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      } else {\r\n        //if property checkbox is not selected\r\n        if (newItem.hasProperty === false) {\r\n          //check variation is selected or not if variation checkbox is checked\r\n          if (newItem.hasVariation === true && newItem.variations === null) {\r\n            toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          } else {\r\n            //if variation checkbox is not selected\r\n            if (newItem.hasVariation === false) {\r\n              foodItemAxios();\r\n            } else {\r\n              //if variation checkbox is selected, options selected, but deleted all selected options at once\r\n              if (newItem.variations.length > 0) {\r\n                foodItemAxios();\r\n              } else {\r\n                toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          //if property checkbox is selected, options selected, but deleted all selected options at once\r\n          if (newItem.properties.length > 0) {\r\n            if (newItem.hasVariation === true && newItem.variations === null) {\r\n              toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            } else {\r\n              //if variation checkbox is not selected\r\n              if (newItem.hasVariation === false) {\r\n                foodItemAxios();\r\n              } else {\r\n                //if variation checkbox is selected, options selected, but deleted all selected options at once\r\n                if (newItem.variations.length > 0) {\r\n                  foodItemAxios();\r\n                } else {\r\n                  toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            toast.error(`${_t(t(\"Please select properties\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      //if item group not selected\r\n      toast.error(`${_t(t(\"Please select a Food Group for this item\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Add New Item\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Add new item\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <form\r\n                          className=\"row card p-2 mx-3 mb-5 sm-text\"\r\n                          onSubmit={handleSubmit}\r\n                        >\r\n                          <div className=\"col-12\">\r\n                            {foodGroupForSearch && (\r\n                              <div className=\"form-group mt-2\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"itemGroup\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Food group\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                  </label>\r\n                                </div>\r\n                                <Select\r\n                                  options={foodGroupForSearch}\r\n                                  components={makeAnimated()}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option.name}\r\n                                  classNamePrefix=\"select\"\r\n                                  onChange={handleSetItemGroup}\r\n                                  maxMenuHeight=\"200px\"\r\n                                  placeholder={\r\n                                    _t(t(\"Please select a food group\")) + \"..\"\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label htmlFor=\"name\" className=\"control-label\">\r\n                                  {_t(t(\"Name\"))}\r\n                                  <span className=\"text-danger\">*</span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  onChange={handleChange}\r\n                                  value={newItem.name}\r\n                                  placeholder=\"e.g. Spicy chicken burger\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-check mt-4\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"propertyCheck\"\r\n                                checked={newItem.hasProperty}\r\n                                onChange={handlePropertyCheckboxChange}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"propertyCheck\"\r\n                              >\r\n                                {_t(t(\"Has properties?\"))}\r\n                              </label>\r\n                            </div>\r\n                            {propertyGroupForSearch && [\r\n                              newItem.hasProperty && (\r\n                                <div className=\"form-group mt-2 ml-4\">\r\n                                  <div className=\"mb-2\">\r\n                                    <label className=\"control-label\">\r\n                                      {_t(t(\"Add properties\"))}\r\n                                    </label>\r\n                                  </div>\r\n                                  <Select\r\n                                    options={propertyGroupForSearch}\r\n                                    components={makeAnimated()}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    getOptionValue={(option) => option.name}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                    isMulti\r\n                                    maxMenuHeight=\"200px\"\r\n                                    onChange={handleSetPropertes}\r\n                                    placeholder={\r\n                                      _t(t(\"Please select property groups\")) +\r\n                                      \"..\"\r\n                                    }\r\n                                  />\r\n                                </div>\r\n                              ),\r\n                            ]}\r\n\r\n                            <div className=\"form-check mt-4\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"variationCheck\"\r\n                                checked={newItem.hasVariation}\r\n                                onChange={handleVariationCheckboxChange}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"variationCheck\"\r\n                              >\r\n                                {_t(t(\"Has variations?\"))}\r\n                              </label>\r\n                            </div>\r\n\r\n                            {newItem.hasVariation && variationForSearch && (\r\n                              <div className=\"form-group mt-2 ml-4\">\r\n                                <div className=\"mb-2\">\r\n                                  <label className=\"control-label\">\r\n                                    {_t(t(\"Add variations\"))}\r\n                                  </label>\r\n                                </div>\r\n                                <Select\r\n                                  options={variationForSearch}\r\n                                  components={makeAnimated()}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option.name}\r\n                                  className=\"basic-multi-select\"\r\n                                  classNamePrefix=\"select\"\r\n                                  isMulti\r\n                                  maxMenuHeight=\"200px\"\r\n                                  onChange={handleSetVariations}\r\n                                  placeholder={\r\n                                    _t(t(\"Please select variations\")) + \"..\"\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            {newItem.variations !== null && [\r\n                              newItem.variations.length > 0 && (\r\n                                <div className=\"card ml-4 mt-3 p-3 custom-bg-secondary\">\r\n                                  <div className=\"card-header t-bg-epsilon text-white rounded-sm text-center\">\r\n                                    {_t(\r\n                                      t(\"Please enter price for each variation\")\r\n                                    )}\r\n                                  </div>\r\n                                  {newItem.variations.map((variationItem) => {\r\n                                    return (\r\n                                      <div\r\n                                        className=\"form-group mt-4\"\r\n                                        key={variationItem.id}\r\n                                      >\r\n                                        <div className=\"mb-2\">\r\n                                          <label\r\n                                            htmlFor={variationItem.slug}\r\n                                            className=\"control-label sm-text\"\r\n                                          >\r\n                                            {_t(t(\"Total price of\"))}{\" \"}\r\n                                            <span className=\"text-primary text-bold\">\r\n                                              {variationItem.name}\r\n                                            </span>{\" \"}\r\n                                            {_t(t(\"variation\"))}\r\n                                            <span className=\"text-primary\">\r\n                                              *{\" \"}\r\n                                            </span>\r\n                                            <small className=\"text-secondary\">\r\n                                              ({_t(t(\"Enter price in USD\"))})\r\n                                            </small>\r\n                                          </label>\r\n                                        </div>\r\n                                        <div className=\"mb-2\">\r\n                                          <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            min=\"0\"\r\n                                            className=\"form-control\"\r\n                                            id={variationItem.slug}\r\n                                            name={variationItem.slug}\r\n                                            onChange={handleVariationPrice}\r\n                                            placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                                            required\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                    );\r\n                                  })}\r\n                                </div>\r\n                              ),\r\n                            ]}\r\n\r\n                            {!newItem.hasVariation && (\r\n                              <div className=\"form-group mt-4\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"price\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Price\"))}\r\n                                    <span className=\"text-primary\">* </span>\r\n                                    <small className=\"text-secondary\">\r\n                                      ({_t(t(\"Enter price in USD\"))})\r\n                                    </small>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                  <input\r\n                                    id=\"price\"\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    min=\"0\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    value={newItem.price}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                                    required\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"image\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Image\"))}\r\n                                  <span className=\"text-danger\">*</span>{\" \"}\r\n                                  <small className=\"text-secondary\">\r\n                                    ({_t(t(\"300 x 300 Preferable\"))})\r\n                                  </small>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"image\"\r\n                                  name=\"image\"\r\n                                  onChange={handleItemImage}\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-5 pb-2\">\r\n                              <div className=\"col-lg-12\">\r\n                                <button\r\n                                  className=\"btn btn-primary px-5\"\r\n                                  type=\"submit\"\r\n                                >\r\n                                  {_t(t(\"Save\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoodItemCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n  formatPrice,\r\n  currencySymbolLeft,\r\n  currencySymbolRight,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst AllItemList = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //foodGroup\r\n    foodGroupForSearch,\r\n\r\n    //property group\r\n    propertyGroupForSearch,\r\n\r\n    //food\r\n    getFood,\r\n    foodList,\r\n    setFoodList,\r\n    setPaginatedFood,\r\n    foodForSearch,\r\n    setFoodForSearch,\r\n\r\n    //variations\r\n    variationForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  let [variations, setVariations] = useState({\r\n    //common\r\n    edit: false,\r\n    uploading: false,\r\n\r\n    //food item === item\r\n    item: null,\r\n\r\n    //variation list === list\r\n    list: null,\r\n\r\n    //new price of variations\r\n    newPrice: null,\r\n\r\n    //variation to delete- id of food_with_variations table\r\n    deletedVariations: null,\r\n\r\n    //if all variation deleted\r\n    priceAfterAllVariationDelete: \"\",\r\n  });\r\n\r\n  //new variation\r\n  let [newVariation, setNewVariation] = useState({\r\n    //food item === item\r\n    item: null,\r\n    variations: null,\r\n  });\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  //edit food item\r\n  let [foodItemEdit, setFoodItemEdit] = useState({\r\n    //show data on modal\r\n    editItem: null,\r\n    propertyGroup: null,\r\n\r\n    //formData\r\n    item: null,\r\n    newPropertyGroups: null,\r\n    newFoodGroup: null,\r\n    removeProperty: false,\r\n\r\n    //image\r\n    imageUpdate: false,\r\n    newImage: null,\r\n  });\r\n\r\n  //search result\r\n  let [searchedFoodItem, setSearchedFoodItem] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //edit food item\r\n  const handleSetItemGroup = (foodGroup) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newFoodGroup: foodGroup,\r\n    });\r\n  };\r\n\r\n  //on change input fields\r\n  const handleChange = (e) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      item: { ...foodItemEdit.item, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n\r\n  //set image hook\r\n  const handleItemImage = (e) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newImage: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //set properties hook\r\n  const handleSetPropertes = (property) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newPropertyGroups: property,\r\n    });\r\n  };\r\n\r\n  //submit edit food item request to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = {\r\n      //item id\r\n      itemId: foodItemEdit.editItem.id,\r\n      //item group\r\n      itemNewFoodGroup:\r\n        foodItemEdit.newFoodGroup !== null ? foodItemEdit.newFoodGroup : null,\r\n      //new name\r\n      name: foodItemEdit.item.name,\r\n      //new price\r\n      price: foodItemEdit.editItem.price ? foodItemEdit.item.price : null,\r\n      //to delete all property, boolean\r\n      deleteProperty: foodItemEdit.deleteProperty ? 1 : 0,\r\n      //new property groups\r\n      newPropertyGroups:\r\n        foodItemEdit.newPropertyGroups !== null &&\r\n        foodItemEdit.newPropertyGroups.length > 0\r\n          ? foodItemEdit.newPropertyGroups\r\n          : null,\r\n    };\r\n    const url = BASE_URL + `/settings/update-food-item`;\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling item in modal after item has been updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === foodItemEdit.editItem.id;\r\n        });\r\n        let selectedGroups = [];\r\n        if (tempItem.property_groups) {\r\n          tempItem.property_groups.map((grpItem) => {\r\n            propertyGroupForSearch.map((singlePropertyGroup) => {\r\n              if (singlePropertyGroup.id === grpItem) {\r\n                selectedGroups.push(singlePropertyGroup);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        setFoodItemEdit({\r\n          //show data on modal\r\n          editItem: tempItem,\r\n          propertyGroup: tempItem.property_groups ? selectedGroups : null,\r\n\r\n          //formData\r\n          item: tempItem,\r\n          newPropertyGroups: null,\r\n          newFoodGroup: null,\r\n          removeProperty: false,\r\n        });\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.success(`${_t(t(\"Food item has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //submit image request to server\r\n  const handleSubmitImage = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = new FormData();\r\n    formData.append(\r\n      \"itemId\",\r\n      foodItemEdit.editItem && foodItemEdit.editItem.id\r\n    );\r\n    formData.append(\"image\", foodItemEdit.newImage);\r\n    const url = BASE_URL + `/settings/update-food-item`;\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling item in modal after item has been updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === foodItemEdit.editItem.id;\r\n        });\r\n        setFoodItemEdit({\r\n          //show data on modal\r\n          editItem: tempItem,\r\n          //formData\r\n          item: tempItem,\r\n          imageUpdate: true,\r\n          newImage: null,\r\n        });\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.success(`${_t(t(\"Image has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setVariations({ ...variations, uploading: false });\r\n        if (error.response.data.errors.image) {\r\n          error.response.data.errors.image.forEach((item) => {\r\n            if (item === \"Please select a valid image file\") {\r\n              toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n            if (item === \"Please select a file less than 5MB\") {\r\n              toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  //set variations hook\r\n  const handleSetVariations = (variations) => {\r\n    setNewVariation({ ...newVariation, variations });\r\n  };\r\n\r\n  //set each variation price\r\n  const handleVariationPrice = (e) => {\r\n    setPriceForVariations({\r\n      ...priceForVariations,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //update variations here\r\n  const handleUpdateVariations = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = {\r\n      foodItemId: variations.item.id,\r\n      deletedVariationsArray: variations.deletedVariations,\r\n      newPriceArray: variations.newPrice\r\n        ? Object.entries(variations.newPrice)\r\n        : null,\r\n      priceAfterAllVariationDelete: variations.priceAfterAllVariationDelete,\r\n    };\r\n\r\n    const foodVariationUpdateUrl =\r\n      BASE_URL + `/settings/update-food-item-variation`;\r\n    return axios\r\n      .post(foodVariationUpdateUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling variations in modal after variations updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === variations.item.id;\r\n        });\r\n        setVariations({\r\n          ...variations,\r\n          edit: false,\r\n          uploading: false,\r\n          item: tempItem,\r\n          list: tempItem.variations,\r\n          deletedVariations: null,\r\n          newPrice: null,\r\n          priceAfterAllVariationDelete: \"\",\r\n        });\r\n        toast.success(`${_t(t(\"Food variations has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //save new variations here\r\n  const handleSaveNewVariations = (e) => {\r\n    e.preventDefault();\r\n    if (newVariation.variations === null) {\r\n      toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    } else {\r\n      if (newVariation.variations.length > 0) {\r\n        setVariations({ ...variations, uploading: true });\r\n        let formData = new FormData();\r\n        formData.append(\"foodItemId\", newVariation.item.id);\r\n        //converting variations and prices to array\r\n        let slugArray = [];\r\n        newVariation.variations.map((newVarItem) => {\r\n          slugArray.push(newVarItem.slug);\r\n        });\r\n        slugArray.map((slugItem) => {\r\n          formData.append(\"slugOfVariations[]\", slugItem);\r\n        });\r\n\r\n        let tempData = Object.entries(priceForVariations);\r\n        tempData.map((item) => {\r\n          formData.append(\"variations[]\", item);\r\n        });\r\n\r\n        const url = BASE_URL + \"/settings/new-food-item-variation\";\r\n        return axios\r\n          .post(url, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then(() => {\r\n            setNewVariation({\r\n              item: null,\r\n              variations: null,\r\n            });\r\n            setPriceForVariations(null);\r\n            setVariations({ ...variations, uploading: false });\r\n            toast.success(`${_t(t(\"variations has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          });\r\n      } else {\r\n        toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //search food here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedFoodItem({ ...searchedFoodItem, searched: false });\r\n    } else {\r\n      let searchedList = foodForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemGroup = item.food_group.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemGroup.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedFoodItem({\r\n        ...searchedFoodItem,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of food item\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteFood(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete food here\r\n  const handleDeleteFood = (slug) => {\r\n    setLoading(true);\r\n    const url = BASE_URL + `/settings/delete-food-item/${slug}`;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Item has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Food Items\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* edit item modal */}\r\n      <div className=\"modal fade\" id=\"editFood\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {_t(t(\"Update\"))}{\" \"}\r\n                  <span className=\"text-capitalize\">\r\n                    {foodItemEdit.editItem && foodItemEdit.editItem.name}\r\n                  </span>\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {variations.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  {foodItemEdit.imageUpdate ? (\r\n                    <form onSubmit={handleSubmitImage} className=\"mx-2 sm-text\">\r\n                      <div className=\"form-group mt-4\">\r\n                        <div className=\"d-flex align-items-center mb-2\">\r\n                          <label htmlFor=\"image\" className=\"control-label mr-3\">\r\n                            {_t(t(\"Image\"))}\r\n                            <small className=\"text-secondary\">\r\n                              ({_t(t(\"300 x 300 Preferable\"))})\r\n                            </small>\r\n                          </label>\r\n                          <div\r\n                            className=\"fk-language__flag\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                foodItemEdit.editItem &&\r\n                                foodItemEdit.editItem.image\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <input\r\n                            type=\"file\"\r\n                            className=\"form-control sm-text\"\r\n                            id=\"image\"\r\n                            name=\"image\"\r\n                            onChange={handleItemImage}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  ) : (\r\n                    <form onSubmit={handleSubmit} className=\"mx-2 sm-text\">\r\n                      {foodGroupForSearch && (\r\n                        <div className=\"form-group mt-2\">\r\n                          <div className=\"mb-2\">\r\n                            <label\r\n                              htmlFor=\"itemGroup\"\r\n                              className=\"control-label\"\r\n                            >\r\n                              {_t(t(\"Food group\"))}\r\n                              <span className=\"text-primary mr-1\">\r\n                                ({_t(t(\"Optional\"))})\r\n                              </span>\r\n                            </label>\r\n                          </div>\r\n                          {foodItemEdit.editItem && (\r\n                            <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                              <li className=\"list-group-item col-12 col-md-2 py-1 my-1 border-0 px-0 ml-3 ml-md-0\">\r\n                                {_t(t(\"Selected Group\"))}-\r\n                              </li>\r\n                              <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\">\r\n                                {foodItemEdit.editItem.food_group}\r\n                              </li>\r\n                            </ul>\r\n                          )}\r\n                          <Select\r\n                            options={foodGroupForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            onChange={handleSetItemGroup}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={\r\n                              _t(t(\"Please select a food group\")) + \"..\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mt-3\">\r\n                        <div className=\"mb-2\">\r\n                          <label htmlFor=\"name\" className=\"control-label\">\r\n                            {_t(t(\"Name\"))}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            value={foodItemEdit.item && foodItemEdit.item.name}\r\n                            placeholder=\"e.g. Spicy chicken burger\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {foodItemEdit.editItem && foodItemEdit.editItem.price && (\r\n                        <div className=\"form-group mt-4\">\r\n                          <div className=\"mb-2\">\r\n                            <label htmlFor=\"price\" className=\"control-label\">\r\n                              {_t(t(\"Price\"))}\r\n                              <span className=\"text-primary\">* </span>\r\n                              <small className=\"text-secondary\">\r\n                                ({_t(t(\"Enter price in USD\"))})\r\n                              </small>\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"mb-2\">\r\n                            <input\r\n                              id=\"price\"\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              min=\"0\"\r\n                              className=\"form-control\"\r\n                              name=\"price\"\r\n                              value={foodItemEdit.item.price}\r\n                              onChange={handleChange}\r\n                              placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mt-3\">\r\n                        <div className=\"mb-2\">\r\n                          <label className=\"control-label\">\r\n                            {_t(t(\"Property groups\"))}\r\n                            <span className=\"text-primary mr-1\">\r\n                              ({_t(t(\"Optional\"))})\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                        {/* delete all property chceckbox */}\r\n                        {foodItemEdit.editItem &&\r\n                          foodItemEdit.editItem.has_property === \"1\" && (\r\n                            <div className=\"form-check mt-2 ml-2\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"propertyCheck\"\r\n                                checked={foodItemEdit.deleteProperty}\r\n                                onChange={() => {\r\n                                  setFoodItemEdit({\r\n                                    ...foodItemEdit,\r\n                                    deleteProperty: !foodItemEdit.deleteProperty,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"propertyCheck\"\r\n                              >\r\n                                {_t(t(\"Remove all properties?\"))}\r\n                              </label>\r\n                            </div>\r\n                          )}\r\n                        {/* selected property group */}\r\n                        {foodItemEdit.propertyGroup && (\r\n                          <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                            {foodItemEdit.propertyGroup.map((selectedItem) => {\r\n                              return (\r\n                                <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\">\r\n                                  {selectedItem.name}\r\n                                </li>\r\n                              );\r\n                            })}\r\n                          </ul>\r\n                        )}\r\n                        {!foodItemEdit.deleteProperty && (\r\n                          <Select\r\n                            options={propertyGroupForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti\r\n                            maxMenuHeight=\"200px\"\r\n                            onChange={handleSetPropertes}\r\n                            placeholder={\r\n                              _t(t(\"Please select property groups\")) + \"..\"\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(5)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* edit item modal Ends*/}\r\n\r\n      {/*update variations modal */}\r\n      <div className=\"modal fade\" id=\"foodVariations\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {/* food item name in variation modal */}\r\n                  {!variations.edit\r\n                    ? [variations.item && variations.item.name]\r\n                    : [\r\n                        _t(t(\"Update variations of\")) +\r\n                          \" \" +\r\n                          [variations.item && variations.item.name],\r\n                      ]}\r\n                  {/* food item name in variation modal ends */}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* showing this-> depending on update has been submitted or not */}\r\n              {!variations.uploading && (\r\n                <div className=\"text-right\">\r\n                  {variations.list && variations.list.length > 0 && (\r\n                    <button\r\n                      className={`btn btn-primary text-capitalize mb-3 sm-text px-4`}\r\n                      onClick={() => {\r\n                        //set variations which are selected to delete === null; if \"Cancel\" button is clicked,\r\n                        //edit variation true if \"Edit\" button clicked\r\n                        setVariations({\r\n                          ...variations,\r\n                          //items to delete\r\n                          deletedVariations:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.deletedVariations,\r\n\r\n                          //items to set new price\r\n                          newPrice:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.newPrice,\r\n\r\n                          //if all variation deleted\r\n                          priceAfterAllVariationDelete:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.priceAfterAllVariationDelete,\r\n\r\n                          edit: !variations.edit,\r\n                        });\r\n                      }}\r\n                    >\r\n                      {!variations.edit ? _t(t(\"edit\")) : _t(t(\"cancel\"))}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/* if update has been submitted or not ends here */}\r\n\r\n              {/* show table data / form / show modal loading */}\r\n              {variations.edit === false ? (\r\n                // if variation edit is false- show table data\r\n                <div key=\"fragment-food-group-1 table-responsive\">\r\n                  <table className=\"table table-bordered table-hover\">\r\n                    <thead className=\"align-middle\">\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"S/L\"))}\r\n                        </th>\r\n\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"Variation name\"))}\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"Price\"))}\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {variations.list && variations.list.length > 0 ? (\r\n                        [\r\n                          variations.list.map((item, index) => {\r\n                            return (\r\n                              <tr\r\n                                scope=\"row\"\r\n                                className=\"xsm-text align-middle text-center\"\r\n                              >\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {index + 1}\r\n                                </td>\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {item.variation_name}\r\n                                </td>\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {currencySymbolLeft()}\r\n                                  {formatPrice(item.food_with_variation_price)}\r\n                                  {currencySymbolRight()}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }),\r\n                        ]\r\n                      ) : (\r\n                        <tr className=\"align-middle\">\r\n                          <td\r\n                            scope=\"row\"\r\n                            colSpan=\"6\"\r\n                            className=\"xsm-text align-middle text-center\"\r\n                          >\r\n                            {_t(t(\"No data available\"))}\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                //variation edit is true here- show input box for price\r\n\r\n                <div key=\"fragment2\">\r\n                  {/* check if edit is true and update button clicked or not */}\r\n                  {variations.uploading === false ? (\r\n                    //show form if Update button not clicked\r\n                    <form\r\n                      className=\"table-responsive\"\r\n                      onSubmit={handleUpdateVariations}\r\n                    >\r\n                      <table className=\"table table-bordered table-hover\">\r\n                        <thead className=\"align-middle\">\r\n                          <tr>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"S/L\"))}\r\n                            </th>\r\n\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Variation name\"))}\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Price\"))}\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"New price\"))}{\" \"}\r\n                              <small className=\"text-primary\">\r\n                                ({_t(t(\"optional\"))})\r\n                              </small>\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Action\"))}\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {/* loop to show each variation item with input box of price */}\r\n                          {variations.list &&\r\n                            variations.list.map((item, index) => {\r\n                              return (\r\n                                <tr\r\n                                  scope=\"row\"\r\n                                  className={`xsm-text align-middle text-center ${\r\n                                    //text deleted css if food_with_variation id exist is array of variations to delete\r\n                                    variations.deletedVariations &&\r\n                                    variations.deletedVariations.includes(\r\n                                      item.food_with_variation_id\r\n                                    )\r\n                                      ? \"text-deleted text-primary\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {index + 1}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {item.variation_name}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {currencySymbolLeft()}\r\n                                    {formatPrice(\r\n                                      item.food_with_variation_price\r\n                                    )}\r\n                                    {currencySymbolRight()}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    <input\r\n                                      type=\"number\"\r\n                                      step=\"0.01\"\r\n                                      min=\"0\"\r\n                                      name={item.food_with_variation_id}\r\n                                      onChange={(e) => {\r\n                                        setVariations({\r\n                                          //set new price for each variation\r\n                                          ...variations,\r\n                                          newPrice: {\r\n                                            ...variations.newPrice,\r\n                                            [e.target.name]: e.target.value,\r\n                                          },\r\n                                        });\r\n                                      }}\r\n                                      className=\"form-control xsm-text text-center variation-min-price-input-width\"\r\n                                      placeholder=\"Type new price in us dollar\"\r\n                                      disabled={\r\n                                        //disable input field of variation if item is selected to delete\r\n                                        variations.deletedVariations &&\r\n                                        variations.deletedVariations.includes(\r\n                                          item.food_with_variation_id\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {/* Delete button or Undo button to display, show undo button if item is in array of variation to delete-->variations.deletedVariations */}\r\n                                    {variations.deletedVariations &&\r\n                                    variations.deletedVariations.includes(\r\n                                      item.food_with_variation_id\r\n                                    ) ? (\r\n                                      //Undo button\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-success btn-sm py-0\"\r\n                                        onClick={() => {\r\n                                          //Remove variation item from-->(deleted variation array which will be sent to server to delete)\r\n                                          let deletedArray = [];\r\n                                          if (variations.deletedVariations) {\r\n                                            //Pushing all old items to an empty array\r\n                                            variations.deletedVariations.map(\r\n                                              (deletedItem) => {\r\n                                                deletedArray.push(deletedItem);\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                          //removing the item from new array\r\n                                          let tempDeletedArray = deletedArray.filter(\r\n                                            (undoItem) => {\r\n                                              return (\r\n                                                undoItem !==\r\n                                                item.food_with_variation_id\r\n                                              );\r\n                                            }\r\n                                          );\r\n                                          //set new array as array of variation items to delete-->(which will be sent to server to delete)\r\n                                          setVariations({\r\n                                            ...variations,\r\n                                            deletedVariations: tempDeletedArray,\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        {_t(t(\"Undo\"))}\r\n                                        {/* Undo button */}\r\n                                      </button>\r\n                                    ) : (\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary btn-sm py-0\"\r\n                                        onClick={() => {\r\n                                          //add variation item to-->(deleted variation array which will be sent to server to delete)\r\n                                          let deletedArray = [];\r\n                                          if (variations.deletedVariations) {\r\n                                            //Pushing all old items to an empty array\r\n                                            variations.deletedVariations.map(\r\n                                              (deletedItem) => {\r\n                                                deletedArray.push(deletedItem);\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                          //adding the item to new array\r\n                                          deletedArray.push(\r\n                                            item.food_with_variation_id\r\n                                          );\r\n\r\n                                          //set new array as array of variation items to delete-->(which will be sent to server to delete)\r\n                                          setVariations({\r\n                                            ...variations,\r\n                                            deletedVariations: deletedArray,\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        {_t(t(\"Delete\"))}\r\n                                      </button>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </table>\r\n\r\n                      {/* input field for price if all variations has been deleted */}\r\n                      {variations.list &&\r\n                        variations.deletedVariations && [\r\n                          variations.deletedVariations.length ===\r\n                          variations.list.length ? (\r\n                            //Check array.length to delete from food_with variations table === total variation of the items\r\n                            <div className=\"mt-4\">\r\n                              <label htmlFor=\"price\" className=\"form-label\">\r\n                                {_t(t(\"Price of the food item\"))}\r\n                                <small className=\"text-primary\">*</small>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                min=\"0\"\r\n                                className=\"form-control\"\r\n                                id=\"price\"\r\n                                name=\"price\"\r\n                                placeholder=\"Type price for this item in 'US dollar'\"\r\n                                value={\r\n                                  variations.priceAfterAllVariationDelete || \"\"\r\n                                }\r\n                                required\r\n                                onChange={(e) => {\r\n                                  //set price of all variation selected to delete\r\n                                  setVariations({\r\n                                    ...variations,\r\n                                    priceAfterAllVariationDelete:\r\n                                      e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                          ),\r\n                        ]}\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary sm-text px-4 mt-3 mb-2\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  ) : (\r\n                    //show loading if update has been clicked\r\n                    <div>\r\n                      <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                        {_t(t(\"Please wait\"))}\r\n                      </div>\r\n                      {modalLoading(5)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/* show table data / form / show modal loading ends here*/}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*update variations modal Ends*/}\r\n\r\n      {/* Add variation modal */}\r\n      <div className=\"modal fade\" id=\"addVariations\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {_t(t(\"Add variations for\"))}{\" \"}\r\n                  <span className=\"text-capitalize\">\r\n                    {newVariation.item && newVariation.item.name}\r\n                  </span>\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {variations.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  <form onSubmit={handleSaveNewVariations} className=\"mx-2\">\r\n                    {variationForSearch && (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"mb-2\">\r\n                          <label className=\"control-label\">\r\n                            {_t(t(\"Add variations\"))}\r\n                          </label>\r\n                        </div>\r\n                        <Select\r\n                          options={variationForSearch}\r\n                          components={makeAnimated()}\r\n                          getOptionLabel={(option) => option.name}\r\n                          getOptionValue={(option) => option.name}\r\n                          className=\"basic-multi-select\"\r\n                          classNamePrefix=\"select\"\r\n                          isMulti\r\n                          maxMenuHeight=\"200px\"\r\n                          onChange={handleSetVariations}\r\n                          placeholder={_t(t(\"Please select variations\")) + \"..\"}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    {newVariation.variations !== null && [\r\n                      newVariation.variations.length > 0 && (\r\n                        <div className=\"card mt-3 p-3 custom-bg-secondary\">\r\n                          <div className=\"card-header t-bg-epsilon text-white rounded-sm text-center\">\r\n                            {_t(t(\"Please enter price for each variation\"))}\r\n                          </div>\r\n                          {newVariation.variations.map((variationItem) => {\r\n                            return (\r\n                              <div\r\n                                className=\"form-group mt-4\"\r\n                                key={variationItem.id}\r\n                              >\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor={variationItem.slug}\r\n                                    className=\"control-label sm-text\"\r\n                                  >\r\n                                    {_t(t(\"Total price of\"))}{\" \"}\r\n                                    <span className=\"text-primary text-bold\">\r\n                                      {variationItem.name}\r\n                                    </span>{\" \"}\r\n                                    {_t(t(\"variation\"))}\r\n                                    <span className=\"text-primary\">* </span>\r\n                                    <small className=\"text-secondary\">\r\n                                      ({_t(t(\"Enter price in USD\"))})\r\n                                    </small>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    min=\"0\"\r\n                                    className=\"form-control\"\r\n                                    id={variationItem.slug}\r\n                                    name={variationItem.slug}\r\n                                    onChange={handleVariationPrice}\r\n                                    placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                                    required\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      ),\r\n                    ]}\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                    >\r\n                      {_t(t(\"Save\"))}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(5)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add variation modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {variations.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedFoodItem.searched\r\n                                    ? _t(t(\"Food Items List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={\r\n                                        _t(t(\"Search by name, group\")) + \"..\"\r\n                                      }\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <NavLink\r\n                                  to=\"/dashboard/manage/food/add-new\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </NavLink>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Image\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Group\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Price\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedFoodItem.searched\r\n                                ? [\r\n                                    foodList && [\r\n                                      foodList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        foodList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (foodList.current_page - 1) *\r\n                                                    foodList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text\">\r\n                                                <div\r\n                                                  className=\"table-img-large mx-auto\"\r\n                                                  style={{\r\n                                                    backgroundImage: `url(${\r\n                                                      item.image !== null\r\n                                                        ? item.image\r\n                                                        : \"/khadyo/assets/img/def_food.png\"\r\n                                                    })`,\r\n                                                  }}\r\n                                                ></div>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.food_group}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.price ? (\r\n                                                  [\r\n                                                    `${currencySymbolLeft()}${formatPrice(\r\n                                                      item.price\r\n                                                    )}${currencySymbolRight()}`,\r\n                                                  ]\r\n                                                ) : (\r\n                                                  <button\r\n                                                    className=\"btn btn-primary btn-sm py-0\"\r\n                                                    onClick={() =>\r\n                                                      // set variations on button click\r\n                                                      setVariations({\r\n                                                        ...variations,\r\n                                                        edit: false,\r\n                                                        item: item,\r\n                                                        list: item.variations,\r\n                                                        deletedVariations: null,\r\n                                                        newPrice: null,\r\n                                                        uploading: false,\r\n                                                        priceAfterAllVariationDelete:\r\n                                                          \"\",\r\n                                                      })\r\n                                                    }\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#foodVariations\"\r\n                                                  >\r\n                                                    {_t(t(\"check variations\"))}\r\n                                                  </button>\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text\"\r\n                                                      onClick={() => {\r\n                                                        // hadle previously set form data\r\n                                                        setPriceForVariations(\r\n                                                          null\r\n                                                        );\r\n                                                        setNewVariation({\r\n                                                          ...newVariation,\r\n                                                          item: item,\r\n                                                          variations: null,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addVariations\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-plus\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Add variation\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        // hadle data for edit modal\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          uploading: true,\r\n                                                        });\r\n                                                        //property groups\r\n                                                        let selectedGroups = [];\r\n                                                        if (\r\n                                                          item.property_groups\r\n                                                        ) {\r\n                                                          item.property_groups.map(\r\n                                                            (grpItem) => {\r\n                                                              propertyGroupForSearch.map(\r\n                                                                (\r\n                                                                  singlePropertyGroup\r\n                                                                ) => {\r\n                                                                  if (\r\n                                                                    singlePropertyGroup.id ===\r\n                                                                    grpItem\r\n                                                                  ) {\r\n                                                                    selectedGroups.push(\r\n                                                                      singlePropertyGroup\r\n                                                                    );\r\n                                                                  }\r\n                                                                }\r\n                                                              );\r\n                                                            }\r\n                                                          );\r\n                                                        }\r\n                                                        setFoodItemEdit({\r\n                                                          ...foodItemEdit,\r\n                                                          editItem: item,\r\n                                                          item,\r\n                                                          propertyGroup: item.property_groups\r\n                                                            ? selectedGroups\r\n                                                            : null,\r\n                                                          newPropertyGroups: null,\r\n                                                          newFoodGroup: null,\r\n                                                          deleteProperty: false,\r\n\r\n                                                          imageUpdate: false,\r\n                                                          newImage: null,\r\n                                                        });\r\n                                                        setTimeout(() => {\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: false,\r\n                                                          });\r\n                                                        }, 500);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#editFood\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit / View\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text\"\r\n                                                      onClick={() => {\r\n                                                        //handle image upload\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          uploading: true,\r\n                                                        });\r\n\r\n                                                        setFoodItemEdit({\r\n                                                          ...foodItemEdit,\r\n                                                          editItem: item,\r\n                                                          item,\r\n                                                          imageUpdate: true,\r\n                                                          newImage: null,\r\n                                                        });\r\n\r\n                                                        setTimeout(() => {\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: false,\r\n                                                          });\r\n                                                        }, 500);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#editFood\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-file\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Image\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedFoodItem && [\r\n                                      searchedFoodItem.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedFoodItem.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodList.current_page -\r\n                                                      1) *\r\n                                                      foodList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text\">\r\n                                                  <div\r\n                                                    className=\"table-img-large mx-auto\"\r\n                                                    style={{\r\n                                                      backgroundImage: `url(${\r\n                                                        item.image !== null\r\n                                                          ? item.image\r\n                                                          : \"/khadyo/assets/img/def_food.png\"\r\n                                                      })`,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.food_group}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.price ? (\r\n                                                    [\r\n                                                      `${currencySymbolLeft()}${formatPrice(\r\n                                                        item.price\r\n                                                      )}${currencySymbolRight()}`,\r\n                                                    ]\r\n                                                  ) : (\r\n                                                    <button\r\n                                                      className=\"btn btn-primary btn-sm py-0\"\r\n                                                      onClick={() =>\r\n                                                        // set variations on button click\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          edit: false,\r\n                                                          item: item,\r\n                                                          list: item.variations,\r\n                                                          deletedVariations: null,\r\n                                                          newPrice: null,\r\n                                                          uploading: false,\r\n                                                          priceAfterAllVariationDelete:\r\n                                                            \"\",\r\n                                                        })\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#foodVariations\"\r\n                                                    >\r\n                                                      {_t(\r\n                                                        t(\"check variations\")\r\n                                                      )}\r\n                                                    </button>\r\n                                                  )}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text\"\r\n                                                        onClick={() => {\r\n                                                          // hadle previously set form data\r\n                                                          setPriceForVariations(\r\n                                                            null\r\n                                                          );\r\n                                                          setNewVariation({\r\n                                                            ...newVariation,\r\n                                                            item: item,\r\n                                                            variations: null,\r\n                                                          });\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addVariations\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-plus\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Add variation\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          // hadle data for edit modal\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: true,\r\n                                                          });\r\n                                                          //property groups\r\n                                                          let selectedGroups = [];\r\n                                                          if (\r\n                                                            item.property_groups\r\n                                                          ) {\r\n                                                            item.property_groups.map(\r\n                                                              (grpItem) => {\r\n                                                                propertyGroupForSearch.map(\r\n                                                                  (\r\n                                                                    singlePropertyGroup\r\n                                                                  ) => {\r\n                                                                    if (\r\n                                                                      singlePropertyGroup.id ===\r\n                                                                      grpItem\r\n                                                                    ) {\r\n                                                                      selectedGroups.push(\r\n                                                                        singlePropertyGroup\r\n                                                                      );\r\n                                                                    }\r\n                                                                  }\r\n                                                                );\r\n                                                              }\r\n                                                            );\r\n                                                          }\r\n                                                          setFoodItemEdit({\r\n                                                            ...foodItemEdit,\r\n                                                            editItem: item,\r\n                                                            item,\r\n                                                            propertyGroup: item.property_groups\r\n                                                              ? selectedGroups\r\n                                                              : null,\r\n                                                            newPropertyGroups: null,\r\n                                                            newFoodGroup: null,\r\n                                                            deleteProperty: false,\r\n\r\n                                                            imageUpdate: false,\r\n                                                            newImage: null,\r\n                                                          });\r\n                                                          setTimeout(() => {\r\n                                                            setVariations({\r\n                                                              ...variations,\r\n                                                              uploading: false,\r\n                                                            });\r\n                                                          }, 500);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#editFood\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit / View\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text\"\r\n                                                        onClick={() => {\r\n                                                          //handle image upload\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: true,\r\n                                                          });\r\n\r\n                                                          setFoodItemEdit({\r\n                                                            ...foodItemEdit,\r\n                                                            editItem: item,\r\n                                                            item,\r\n                                                            imageUpdate: true,\r\n                                                            newImage: null,\r\n                                                          });\r\n\r\n                                                          setTimeout(() => {\r\n                                                            setVariations({\r\n                                                              ...variations,\r\n                                                              uploading: false,\r\n                                                            });\r\n                                                          }, 500);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#editFood\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-file\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Image\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {variations.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedFoodItem.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(foodList, setPaginatedFood)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(foodList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedFoodItem({\r\n                                      ...searchedFoodItem,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedFoodItem,\r\n                                    foodForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllItemList;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Switch from \"react-switch\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\n\r\nconst Currency = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //currencies\r\n    currencyList,\r\n    setCurrencyList,\r\n    setPaginatedCurrencies,\r\n    setNavCurrencyList,\r\n    currencyListForSearch,\r\n    setCurrencyListForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n    setDataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //new currency\r\n  let [newCurrency, setNewCurrency] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    rate: \"\",\r\n    symbol: \"\",\r\n    alignment: \"\",\r\n    edit: false,\r\n    editCode: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //new default\r\n  let [newDefault, setNewDefault] = useState({\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedCurrencies, setSearchedCurrencies] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, code hook\r\n  const handleSetNewCurrency = (e) => {\r\n    setNewCurrency({ ...newCurrency, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New Currency\r\n  const handleSaveNewCurrency = (e) => {\r\n    e.preventDefault();\r\n    setNewCurrency({\r\n      ...newCurrency,\r\n      uploading: true,\r\n    });\r\n    const currencyUrl = BASE_URL + `/settings/new-currency`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newCurrency.name);\r\n    formData.append(\"code\", newCurrency.code);\r\n    formData.append(\"rate\", newCurrency.rate);\r\n    formData.append(\"symbol\", newCurrency.symbol);\r\n    formData.append(\"alignment\", newCurrency.alignment);\r\n    return axios\r\n      .post(currencyUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewCurrency({\r\n          name: \"\",\r\n          code: \"\",\r\n          rate: \"\",\r\n          symbol: \"\",\r\n          alignment: \"\",\r\n          edit: false,\r\n          editCode: null,\r\n          uploading: false,\r\n        });\r\n        setCurrencyList(res.data[0]);\r\n        setNavCurrencyList(res.data[1]);\r\n        setCurrencyListForSearch(res.data[1]);\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"A new currency has been created\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewCurrency({\r\n          ...newCurrency,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.code) {\r\n            error.response.data.errors.code.forEach((item) => {\r\n              if (item === \"A currency already exists with this code\") {\r\n                toast.error(\r\n                  `${_t(t(\"A currency already exists with this code\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSetEdit = (id) => {\r\n    let currency = currencyListForSearch.filter((item) => {\r\n      return item.id === id;\r\n    });\r\n    setNewCurrency({\r\n      ...newCurrency,\r\n      name: currency[0].name,\r\n      code: currency[0].code,\r\n      rate: currency[0].rate,\r\n      symbol: currency[0].symbol,\r\n      alignment: currency[0].alignment,\r\n      editCode: currency[0].code,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  const handleUpdateCurrency = (e) => {\r\n    e.preventDefault();\r\n    setNewCurrency({\r\n      ...newCurrency,\r\n      uploading: true,\r\n    });\r\n    const currencyUrl = BASE_URL + `/settings/update-currency`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newCurrency.name);\r\n    formData.append(\"rate\", newCurrency.rate);\r\n    formData.append(\"symbol\", newCurrency.symbol);\r\n    formData.append(\"alignment\", newCurrency.alignment);\r\n    formData.append(\"editCode\", newCurrency.editCode);\r\n    return axios\r\n      .post(currencyUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n        if (localCurrency.code === newCurrency.editCode) {\r\n          const temp = res.data[1].find((item) => {\r\n            return item.code === localCurrency.code;\r\n          });\r\n          localStorage.setItem(\"currency\", JSON.stringify(temp));\r\n        }\r\n        setNewCurrency({\r\n          name: \"\",\r\n          code: \"\",\r\n          rate: \"\",\r\n          symbol: \"\",\r\n          alignment: \"\",\r\n          edit: false,\r\n          editCode: null,\r\n          uploading: false,\r\n        });\r\n        setCurrencyList(res.data[0]);\r\n        setNavCurrencyList(res.data[1]);\r\n        setCurrencyListForSearch(res.data[1]);\r\n        setSearchedCurrencies({\r\n          ...searchedCurrencies,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"currency has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewCurrency({\r\n          ...newCurrency,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //Save New default currency\r\n  const handleDefault = (code) => {\r\n    setLoading(true);\r\n    setNewDefault({ ...newDefault, uploading: true });\r\n    setDataPaginating(true);\r\n    const currencyUrl = BASE_URL + `/settings/update-default-currency`;\r\n    let formData = new FormData();\r\n    formData.append(\"code\", code);\r\n    return axios\r\n      .post(currencyUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCurrencyList(res.data[0]);\r\n        setNavCurrencyList(res.data[1]);\r\n        setCurrencyListForSearch(res.data[1]);\r\n        setSearchedCurrencies({\r\n          ...searchedCurrencies,\r\n          list: res.data[1],\r\n          searched: false,\r\n        });\r\n        setLoading(false);\r\n        setDataPaginating(false);\r\n        setNewDefault({ ...newDefault, uploading: false });\r\n        toast.success(`${_t(t(\"Default currency has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //search currencies here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedCurrencies({ ...searchedCurrencies, searched: false });\r\n    } else {\r\n      let searchedLang = currencyListForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemCode = item.code.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemCode.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedCurrencies({\r\n        ...searchedCurrencies,\r\n        list: searchedLang,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of currency\r\n  const handleDeleteConfirmation = (code) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteCurrency(code);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete currency here\r\n  const handleDeleteCurrency = (code) => {\r\n    setLoading(true);\r\n    if (code !== \"usd\") {\r\n      const currencyUrl = BASE_URL + `/settings/delete-currency/${code}`;\r\n      return (\r\n        axios\r\n          //todo:: Authorization here\r\n          .get(currencyUrl, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setCurrencyList(res.data[0]);\r\n            setNavCurrencyList(res.data[1]);\r\n            setCurrencyListForSearch(res.data[1]);\r\n            setSearchedCurrencies({\r\n              ...searchedCurrencies,\r\n              list: res.data[1],\r\n            });\r\n            setLoading(false);\r\n            toast.success(\r\n              `${_t(t(\"currency has been deleted successfully\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n      toast.error(`${_t(t(\"USD currency can not be deleted!\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Currencies\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add currency modal */}\r\n      <div className=\"modal fade\" id=\"addCurrency\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newCurrency.edit\r\n                    ? _t(t(\"Add new currency\"))\r\n                    : _t(t(\"Update currency\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newCurrency.uploading === false ? (\r\n                <div key=\"fragment1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newCurrency.edit\r\n                        ? handleSaveNewCurrency\r\n                        : handleUpdateCurrency\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. US Dollar\"\r\n                        value={newCurrency.name}\r\n                        required\r\n                        onChange={handleSetNewCurrency}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <label htmlFor=\"code\" className=\"form-label\">\r\n                        {_t(t(\"code\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"code\"\r\n                        name=\"code\"\r\n                        onChange={handleSetNewCurrency}\r\n                        value={newCurrency.code}\r\n                        disabled={newCurrency.edit}\r\n                        required\r\n                        placeholder=\"e.g. usd for US Dollar\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <label htmlFor=\"symbol\" className=\"form-label\">\r\n                        {_t(t(\"Symbol\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"symbol\"\r\n                        name=\"symbol\"\r\n                        onChange={handleSetNewCurrency}\r\n                        value={newCurrency.symbol}\r\n                        required\r\n                        placeholder=\"e.g. $, €, ৳\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <label htmlFor=\"rate\" className=\"form-label\">\r\n                        {_t(t(\"Rate\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        className=\"form-control\"\r\n                        id=\"rate\"\r\n                        name=\"rate\"\r\n                        onChange={handleSetNewCurrency}\r\n                        value={newCurrency.rate}\r\n                        required\r\n                        placeholder=\"1 USD = ?\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <label htmlFor=\"symbol\" className=\"form-label\">\r\n                        {_t(t(\"Allignment\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <select\r\n                        name=\"alignment\"\r\n                        className=\"form-control\"\r\n                        onChange={handleSetNewCurrency}\r\n                        required\r\n                        value={newCurrency.alignment}\r\n                      >\r\n                        <option value=\"\">\r\n                          {_t(t(\"Please select an alignment\"))}..\r\n                        </option>\r\n                        <option value=\"left\">\r\n                          {_t(t(\"Left\"))} - [symbol][amount]\r\n                        </option>\r\n                        <option value=\"right\">\r\n                          {_t(t(\"Right\"))} - [amount][symbol]\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newCurrency.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newCurrency.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add currency modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newCurrency.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedCurrencies.searched\r\n                                    ? _t(t(\"Currency List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search languages */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add currency modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addCurrency\"\r\n                                  onClick={() => {\r\n                                    setNewCurrency({\r\n                                      ...newCurrency,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  1 USD = ?\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Symbol\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Alignment\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Set default\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedCurrencies.searched\r\n                                ? [\r\n                                    currencyList && [\r\n                                      currencyList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        currencyList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (currencyList.current_page -\r\n                                                    1) *\r\n                                                    currencyList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.rate}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.symbol}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.alignment === \"left\"\r\n                                                  ? item.alignment +\r\n                                                    \"  - [symbol] [amount]\"\r\n                                                  : item.alignment +\r\n                                                    \"  - [amount] [symbol]\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Switch\r\n                                                  checked={item.is_default}\r\n                                                  onChange={() => {\r\n                                                    handleDefault(item.code);\r\n                                                  }}\r\n                                                  height={22}\r\n                                                  width={44}\r\n                                                  offColor=\"#ee5253\"\r\n                                                  disabled={\r\n                                                    item.is_default ||\r\n                                                    newDefault.uploading\r\n                                                  }\r\n                                                />\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() =>\r\n                                                        handleSetEdit(item.id)\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addCurrency\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.code\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedCurrencies && [\r\n                                      searchedCurrencies.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedCurrencies.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index + 1}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.code}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"d-flex justify-content-center\">\r\n                                                    <div\r\n                                                      className=\"fk-language__flag\"\r\n                                                      style={\r\n                                                        item.image !== null\r\n                                                          ? {\r\n                                                              backgroundImage: `url(${item.image})`,\r\n                                                            }\r\n                                                          : \"\"\r\n                                                      }\r\n                                                    ></div>\r\n                                                  </div>\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <Switch\r\n                                                    checked={item.is_default}\r\n                                                    onChange={() => {\r\n                                                      handleDefault(item.code);\r\n                                                    }}\r\n                                                    height={22}\r\n                                                    width={44}\r\n                                                    offColor=\"#ee5253\"\r\n                                                    disabled={\r\n                                                      item.is_default ||\r\n                                                      newDefault.uploading\r\n                                                    }\r\n                                                  />\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(item.id)\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addCurrency\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.code\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newCurrency.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedCurrencies.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(currencyList, setPaginatedCurrencies)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(currencyList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedCurrencies({\r\n                                      ...searchedCurrencies,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedCurrencies,\r\n                                    currencyListForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Switch from \"react-switch\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\n\r\nconst Lang = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //langs\r\n    languageList,\r\n    setLanguageList,\r\n    setPaginatedLanguages,\r\n    setNavLanguageList,\r\n    languageListForSearch,\r\n    setLanguageListForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n    setDataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //new languages\r\n  let [newLang, setNewLang] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    image: null,\r\n    edit: false,\r\n    editCode: null,\r\n    editImage: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //new default\r\n  let [newDefault, setNewDefault] = useState({\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedLanguages, setSearchedLanguages] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, code hook\r\n  const handleSetNewLang = (e) => {\r\n    setNewLang({ ...newLang, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set flag hook\r\n  const handleLangFlag = (e) => {\r\n    setNewLang({\r\n      ...newLang,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //Save New Language\r\n  const handleSaveNewLang = (e) => {\r\n    e.preventDefault();\r\n    setNewLang({\r\n      ...newLang,\r\n      uploading: true,\r\n    });\r\n    const langUrl = BASE_URL + `/settings/new-lang`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newLang.name);\r\n    formData.append(\"code\", newLang.code);\r\n    formData.append(\"image\", newLang.image);\r\n    return axios\r\n      .post(langUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewLang({\r\n          name: \"\",\r\n          code: \"\",\r\n          image: null,\r\n          uploading: false,\r\n        });\r\n        setLanguageList(res.data[0]);\r\n        setNavLanguageList(res.data[1]);\r\n        setLanguageListForSearch(res.data[1]);\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"A new language has been created\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewLang({\r\n          ...newLang,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A language already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A language already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n\r\n          if (error.response.data.errors.code) {\r\n            error.response.data.errors.code.forEach((item) => {\r\n              if (item === \"A language already exists with this code\") {\r\n                toast.error(\r\n                  `${_t(t(\"A language already exists with this code\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n          if (error.response.data.errors.image) {\r\n            error.response.data.errors.image.forEach((item) => {\r\n              if (item === \"Please select a valid image file\") {\r\n                toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n              if (item === \"Please select a file less than 5MB\") {\r\n                toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSetEdit = (id) => {\r\n    let lang = languageListForSearch.filter((item) => {\r\n      return item.id === id;\r\n    });\r\n    setNewLang({\r\n      ...newLang,\r\n      name: lang[0].name,\r\n      code: lang[0].code,\r\n      editCode: lang[0].code,\r\n      editImage: lang[0].image,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  const handleUpdateLang = (e) => {\r\n    e.preventDefault();\r\n    setNewLang({\r\n      ...newLang,\r\n      uploading: true,\r\n    });\r\n    const langUrl = BASE_URL + `/settings/update-lang`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newLang.name);\r\n    formData.append(\"code\", newLang.code);\r\n    formData.append(\"image\", newLang.image);\r\n    formData.append(\"editCode\", newLang.editCode);\r\n    return axios\r\n      .post(langUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewLang({\r\n          name: \"\",\r\n          code: \"\",\r\n          image: null,\r\n          edit: false,\r\n          editCode: null,\r\n          editImage: null,\r\n          uploading: false,\r\n        });\r\n        setLanguageList(res.data[0]);\r\n        setNavLanguageList(res.data[1]);\r\n        setLanguageListForSearch(res.data[1]);\r\n        setSearchedLanguages({\r\n          ...searchedLanguages,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Language has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewLang({\r\n          ...newLang,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A language already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A language already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n\r\n          if (error.response.data.errors.image) {\r\n            error.response.data.errors.image.forEach((item) => {\r\n              if (item === \"Please select a valid image file\") {\r\n                toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n              if (item === \"Please select a file less than 5MB\") {\r\n                toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //Save New Language\r\n  const handleDefault = (code) => {\r\n    setLoading(true);\r\n    setNewDefault({ ...newDefault, uploading: true });\r\n    setDataPaginating(true);\r\n    const langUrl = BASE_URL + `/settings/update-default`;\r\n    let formData = new FormData();\r\n    formData.append(\"code\", code);\r\n    return axios\r\n      .post(langUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setLanguageList(res.data[0]);\r\n        setNavLanguageList(res.data[1]);\r\n        setLanguageListForSearch(res.data[1]);\r\n        setSearchedLanguages({\r\n          ...searchedLanguages,\r\n          list: res.data[1],\r\n          searched: false,\r\n        });\r\n        setLoading(false);\r\n        setDataPaginating(false);\r\n        setNewDefault({ ...newDefault, uploading: false });\r\n        toast.success(`${_t(t(\"Default language has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  //search language here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedLanguages({ ...searchedLanguages, searched: false });\r\n    } else {\r\n      let searchedLang = languageListForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemCode = item.code.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemCode.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedLanguages({\r\n        ...searchedLanguages,\r\n        list: searchedLang,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of language\r\n  const handleDeleteConfirmation = (code) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteLanguage(code);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete language here\r\n  const handleDeleteLanguage = (code) => {\r\n    setLoading(true);\r\n    if (code !== \"en\") {\r\n      const lang_url = BASE_URL + `/settings/delete-lang/${code}`;\r\n      return (\r\n        axios\r\n          //todo:: Authorization here\r\n          .get(lang_url, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setLanguageList(res.data[0]);\r\n            setNavLanguageList(res.data[1]);\r\n            setLanguageListForSearch(res.data[1]);\r\n            setSearchedLanguages({\r\n              ...searchedLanguages,\r\n              list: res.data[1],\r\n            });\r\n            setLoading(false);\r\n            toast.success(\r\n              `${_t(t(\"Language has been deleted successfully\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          })\r\n          .catch(() => {\r\n            setLoading(false);\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n      toast.error(`${_t(t(\"English language can not be deleted!\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Languages\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add language modal */}\r\n      <div className=\"modal fade\" id=\"addLang\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-md\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newLang.edit\r\n                    ? _t(t(\"Add new language\"))\r\n                    : _t(t(\"Update Language\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newLang.uploading === false ? (\r\n                <div key=\"fragment1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newLang.edit ? handleSaveNewLang : handleUpdateLang\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. English\"\r\n                        value={newLang.name}\r\n                        required\r\n                        onChange={handleSetNewLang}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <label htmlFor=\"code\" className=\"form-label\">\r\n                        {_t(t(\"code\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"code\"\r\n                        name=\"code\"\r\n                        onChange={handleSetNewLang}\r\n                        value={newLang.code}\r\n                        disabled={newLang.edit}\r\n                        required\r\n                        placeholder=\"e.g. EN for english\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"d-flex align-items-center mb-1\">\r\n                        <label htmlFor=\"image\" className=\"form-label mb-0 mr-3\">\r\n                          {_t(t(\"Flag\"))}{\" \"}\r\n                          <small className=\"text-secondary\">\r\n                            ({_t(t(\"300 x 300 Preferable\"))})\r\n                          </small>\r\n                        </label>\r\n                        {newLang.edit && (\r\n                          <div\r\n                            className=\"fk-language__flag\"\r\n                            style={{\r\n                              backgroundImage: `url(${newLang.editImage})`,\r\n                            }}\r\n                          ></div>\r\n                        )}\r\n                      </div>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        onChange={handleLangFlag}\r\n                      />\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newLang.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newLang.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add language modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newLang.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedLanguages.searched\r\n                                    ? _t(t(\"Language List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search languages */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add language modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addLang\"\r\n                                  onClick={() => {\r\n                                    setNewLang({\r\n                                      ...newLang,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Code\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Flag\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Set default\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedLanguages.searched\r\n                                ? [\r\n                                    languageList && [\r\n                                      languageList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        languageList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (languageList.current_page -\r\n                                                    1) *\r\n                                                    languageList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.code}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"d-flex justify-content-center\">\r\n                                                  <div\r\n                                                    className=\"fk-language__flag\"\r\n                                                    style={\r\n                                                      item.image !== null\r\n                                                        ? {\r\n                                                            backgroundImage: `url(${item.image})`,\r\n                                                          }\r\n                                                        : \"\"\r\n                                                    }\r\n                                                  ></div>\r\n                                                </div>\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <Switch\r\n                                                  checked={item.is_default}\r\n                                                  onChange={() => {\r\n                                                    handleDefault(item.code);\r\n                                                  }}\r\n                                                  height={22}\r\n                                                  width={44}\r\n                                                  offColor=\"#ee5253\"\r\n                                                  disabled={\r\n                                                    item.is_default ||\r\n                                                    newDefault.uploading\r\n                                                  }\r\n                                                />\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() =>\r\n                                                        handleSetEdit(item.id)\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addLang\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n                                                    <NavLink\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      to={`/dashboard/manage/settings/languages/${item.code}`}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-refresh\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Translate\"))}\r\n                                                    </NavLink>\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.code\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedLanguages && [\r\n                                      searchedLanguages.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedLanguages.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index + 1}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.code}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"d-flex justify-content-center\">\r\n                                                    <div\r\n                                                      className=\"fk-language__flag\"\r\n                                                      style={\r\n                                                        item.image !== null\r\n                                                          ? {\r\n                                                              backgroundImage: `url(${item.image})`,\r\n                                                            }\r\n                                                          : \"\"\r\n                                                      }\r\n                                                    ></div>\r\n                                                  </div>\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <Switch\r\n                                                    checked={item.is_default}\r\n                                                    onChange={() => {\r\n                                                      handleDefault(item.code);\r\n                                                    }}\r\n                                                    height={22}\r\n                                                    width={44}\r\n                                                    offColor=\"#ee5253\"\r\n                                                    disabled={\r\n                                                      item.is_default ||\r\n                                                      newDefault.uploading\r\n                                                    }\r\n                                                  />\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(item.id)\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addLang\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n                                                      <NavLink\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        to={`/dashboard/manage/settings/languages/${item.code}`}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-refresh\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Translate\"))}\r\n                                                      </NavLink>\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.code\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newLang.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedLanguages.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(languageList, setPaginatedLanguages)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(languageList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedLanguages({\r\n                                      ...searchedLanguages,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedLanguages,\r\n                                    languageListForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lang;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { NavLink, useParams, useHistory } from \"react-router-dom\";\r\n\r\n//jQuery initialization\r\nimport $ from \"jquery\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nconst Translation = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    loading,\r\n    languageListForSearch,\r\n    dataPaginating,\r\n    setDataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  //getting url parameter\r\n  let { code } = useParams();\r\n\r\n  // States hook here\r\n  let [toTranslate, setToTranslate] = useState(null);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    handleTranslate(code);\r\n    toastAfterReload();\r\n  }, []);\r\n\r\n  const toastAfterReload = () => {\r\n    if (window.location.href.includes(\"translation-successful=true\")) {\r\n      toast.success(`${_t(t(\"Translation has been saved\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n      history.replace(\"/dashboard/manage/settings/languages/\" + code);\r\n    }\r\n  };\r\n\r\n  const handleTranslate = (langCode) => {\r\n    setDataPaginating(true);\r\n    const t_url = BASE_URL + `/settings/get-lang/${langCode}`;\r\n    axios\r\n      .get(t_url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setToTranslate(Object.entries(res.data));\r\n        setDataPaginating(false);\r\n      });\r\n  };\r\n\r\n  const handleTranslationInput = (e, index, key) => {\r\n    let temp = [];\r\n    toTranslate.map((item, indexItem) => {\r\n      if (index === indexItem) {\r\n        temp.push([key, e.target.value]);\r\n      } else {\r\n        temp.push(item);\r\n      }\r\n    });\r\n    setToTranslate(temp);\r\n  };\r\n\r\n  //translate in one click\r\n  const handleCopy = () => {\r\n    let jsonData = toTranslate;\r\n    let temp = [];\r\n    $(\"#tranlation-table > tbody  > tr\").each(function (index, tr) {\r\n      $(tr).find(\".value\").val($(tr).find(\".key\").text());\r\n      let newTranslation = $(tr).find(\".key\").text();\r\n      jsonData.map((items, itemIndex) => {\r\n        if (itemIndex === index) {\r\n          temp.push([items[0], newTranslation]);\r\n        }\r\n      });\r\n    });\r\n    setToTranslate(temp);\r\n  };\r\n\r\n  const handleSubmitTranslation = (e) => {\r\n    e.preventDefault();\r\n    let data = Object.fromEntries(\r\n      toTranslate.filter(([k, v]) => {\r\n        return true;\r\n      })\r\n    );\r\n    let formData = {\r\n      data: data,\r\n      code: code,\r\n    };\r\n    const t_url = BASE_URL + `/settings/save-translation`;\r\n    return axios\r\n      .post(t_url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        window.location.href =\r\n          window.location.pathname + \"?translation-successful=true\";\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Update Translation\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <>\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n                        <div className=\"row gx-2 align-items-center pt-0\">\r\n                          <div className=\"col-md-4 col-lg-3 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\"></span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-8 col-lg-9\">\r\n                            <div className=\"row gx-0 align-items-center\">\r\n                              {/* Search Translationuages */}\r\n                              <div className=\"col-md-9 col-xl-10 t-mb-15 mb-md-0\"></div>\r\n\r\n                              {/* Add Translationuage modal trigger button */}\r\n                              <div className=\"col-md-3 col-xl-2 text-md-right\"></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"card-header border-bottom-0\">\r\n                          <h3 className=\"panel-title text-center\">\r\n                            {_t(t(\"Update Translation\"))}\r\n                          </h3>\r\n                          {/* Showing language name and flag */}\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            {languageListForSearch &&\r\n                              languageListForSearch.map((item) => {\r\n                                if (item.code === code) {\r\n                                  return (\r\n                                    <div\r\n                                      className=\"d-flex align-items-center\"\r\n                                      key={item.id}\r\n                                    >\r\n                                      <span>{item.name}</span>\r\n                                      <div\r\n                                        className=\"fk-language__flag ml-3\"\r\n                                        style={{\r\n                                          backgroundImage: `url(${item.image})`,\r\n                                        }}\r\n                                      ></div>\r\n                                    </div>\r\n                                  );\r\n                                }\r\n                              })}\r\n                          </div>\r\n                          <p className=\"text-muted text-center\">\r\n                            {_t(\r\n                              t(\r\n                                \"You can update the translation in a very easy way\"\r\n                              )\r\n                            )}\r\n                            <br />{\" \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Install any google translation extention in your browser, translate the whole page\"\r\n                              )\r\n                            )}\r\n                            <br /> {_t(t(\"Click Copy Translation button\"))}\r\n                            <br />\r\n                            {_t(t(\"Click save\"))}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <div className=\"form-horizontal\">\r\n                            <div className=\"panel-body\">\r\n                              <table\r\n                                className=\"table table-striped table-bordered demo-dt-basic mb-1\"\r\n                                cellSpacing=\"0\"\r\n                                width=\"100%\"\r\n                                id=\"tranlation-table\"\r\n                              >\r\n                                <tbody>\r\n                                  {toTranslate &&\r\n                                    toTranslate.map((items, index) => {\r\n                                      return (\r\n                                        <tr className=\"text-center\" key={index}>\r\n                                          <td>{index + 1}</td>\r\n                                          <td className=\"key text-left translation-input\">\r\n                                            {items[0]}\r\n                                          </td>\r\n                                          <td>\r\n                                            <input\r\n                                              type=\"text\"\r\n                                              className=\"form-control value w-100\"\r\n                                              name=\"translations[]\"\r\n                                              onChange={(e) => {\r\n                                                handleTranslationInput(\r\n                                                  e,\r\n                                                  index,\r\n                                                  items[0]\r\n                                                );\r\n                                              }}\r\n                                              value={items[1]}\r\n                                            />\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {/* pagination loading effect removed */}\r\n              <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                  <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                    <ul className=\"t-list d-flex justify-content-center justify-content-md-start\">\r\n                      <li className=\"t-list__item no-pagination-style\">\r\n                        <NavLink\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          to=\"/dashboard/manage/settings/languages\"\r\n                        >\r\n                          <i className=\"fa fa-reply\"></i> {_t(t(\"Go back\"))}\r\n                        </NavLink>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"col-md-5\">\r\n                    <ul className=\"t-list d-flex justify-content-center justify-content-md-end align-items-center\">\r\n                      <li className=\"t-list__item\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"col-lg-12 text-right\">\r\n                            <button\r\n                              className=\"btn btn-warning btn-sm text-dark\"\r\n                              type=\"button\"\r\n                              onClick={handleCopy}\r\n                            >\r\n                              {_t(t(\"Copy Translations\"))}\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-success btn-sm ml-2 text-dark\"\r\n                              type=\"button\"\r\n                              onClick={handleSubmitTranslation}\r\n                            >\r\n                              {_t(t(\"Save\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Translation;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\nconst Smtp = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    loading,\r\n    setLoading,\r\n    dataPaginating,\r\n    smtp,\r\n    getSmtp,\r\n    setSmtp,\r\n  } = useContext(SettingsContext);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  //on change input field\r\n  const handleChange = (e) => {\r\n    setSmtp({ ...smtp, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //send to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const url = BASE_URL + `/settings/set-smtp`;\r\n    const formData = {\r\n      MAIL_MAILER: smtp.MAIL_MAILER,\r\n      MAIL_HOST: smtp.MAIL_HOST,\r\n      MAIL_PORT: smtp.MAIL_PORT,\r\n      MAIL_USERNAME: smtp.MAIL_USERNAME,\r\n      MAIL_PASSWORD: smtp.MAIL_PASSWORD,\r\n      MAIL_ENCRYPTION: smtp.MAIL_ENCRYPTION,\r\n      MAIL_FROM_ADDRESS: smtp.MAIL_FROM_ADDRESS,\r\n      MAIL_FROM_NAME: smtp.MAIL_FROM_NAME,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setSmtp({\r\n          ...smtp,\r\n          MAIL_MAILER: res.data[0].MAIL_MAILER,\r\n          MAIL_HOST: res.data[0].MAIL_HOST,\r\n          MAIL_PORT: res.data[0].MAIL_PORT,\r\n          MAIL_USERNAME: res.data[0].MAIL_USERNAME,\r\n          MAIL_PASSWORD: res.data[0].MAIL_PASSWORD,\r\n          MAIL_ENCRYPTION: res.data[0].MAIL_ENCRYPTION,\r\n          MAIL_FROM_ADDRESS: res.data[0].MAIL_FROM_ADDRESS,\r\n          MAIL_FROM_NAME: res.data[0].MAIL_FROM_NAME,\r\n        });\r\n        getSmtp();\r\n        toast.success(`${_t(t(\"SMTP settings has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\r\n          `${_t(t(\"Something unexpected happened, Please try again\"))}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Update Smtp\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center pt-0\">\r\n                          <div className=\"col-md-4 col-lg-3 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\"></span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-header border-bottom-0\">\r\n                          <h3 className=\"panel-title text-center\">\r\n                            {_t(t(\"Update Smtp\"))}\r\n                          </h3>\r\n\r\n                          <p className=\"text-muted text-center\">\r\n                            {_t(\r\n                              t(\r\n                                \"Please be carefull when you are configuring SMTP, For incorrect configuration you may get error in few features\"\r\n                              )\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <div className=\"form-horizontal\">\r\n                            <div className=\"panel-body\">\r\n                              <form className=\"row\" onSubmit={handleSubmit}>\r\n                                <div className=\"col-12 col-md-6 order-2 order-sm-1\">\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail mailer\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <select\r\n                                        name=\"MAIL_MAILER\"\r\n                                        className=\"form-control rounded-sm pl-2 mb-2\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_MAILER}\r\n                                        required\r\n                                      >\r\n                                        <option value=\"\">\r\n                                          {_t(t(\"Please select an option\"))}\r\n                                        </option>\r\n                                        <option value=\"sendmail\">\r\n                                          Sendmail\r\n                                        </option>\r\n                                        <option value=\"smtp\">Smtp</option>\r\n                                      </select>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail host\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_HOST\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_HOST}\r\n                                        placeholder=\"localhost\"\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail port\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_PORT\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"e.g. 587\"\r\n                                        value={smtp.MAIL_PORT}\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail username\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_USERNAME\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_USERNAME}\r\n                                        placeholder=\"Enter your email username\"\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail password\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_PASSWORD\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_PASSWORD}\r\n                                        placeholder=\"Email password\"\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail encryption\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <select\r\n                                      name=\"MAIL_ENCRYPTION\"\r\n                                      className=\"form-control rounded-sm pl-2 mb-2\"\r\n                                      onChange={handleChange}\r\n                                      value={smtp.MAIL_ENCRYPTION}\r\n                                      required\r\n                                    >\r\n                                      <option value=\"\">\r\n                                        {_t(t(\"Please select an option\"))}\r\n                                      </option>\r\n                                      <option value=\"ssl\">ssl</option>\r\n                                      <option value=\"tls\">tls</option>\r\n                                    </select>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail from address\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_FROM_ADDRESS\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_FROM_ADDRESS}\r\n                                        placeholder=\"Mail from address\"\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group\">\r\n                                    <div className=\"mb-2\">\r\n                                      <label className=\"control-label\">\r\n                                        Mail from name\r\n                                        <span className=\"text-danger\"> *</span>\r\n                                      </label>\r\n                                    </div>\r\n                                    <div className=\"mb-2\">\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"MAIL_FROM_NAME\"\r\n                                        onChange={handleChange}\r\n                                        value={smtp.MAIL_FROM_NAME}\r\n                                        placeholder=\"Mail from name\"\r\n                                        required\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"form-group mt-3 pb-2\">\r\n                                    <div className=\"col-lg-12\">\r\n                                      <button\r\n                                        className=\"btn btn-primary px-5\"\r\n                                        type=\"submit\"\r\n                                      >\r\n                                        {_t(t(\"Save\"))}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6 order-1 order-sm-2 mb-3\">\r\n                                  <p className=\"mb-2\">{_t(t(\"For Non-SSL\"))}</p>\r\n                                  <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(\r\n                                        t(\r\n                                          \"Select 'sendmail' for Mail Mailer if you face any issue after configuring 'smtp' as Mail Mailer\"\r\n                                        )\r\n                                      )}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(\r\n                                        t(\r\n                                          \"Set Mail Host according to your server Mail Client Manual Settings\"\r\n                                        )\r\n                                      )}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(t(\"Set Mail port as '587'\"))}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(\r\n                                        t(\r\n                                          \"Set Mail Encryption as 'ssl' if you face issue with 'tls'\"\r\n                                        )\r\n                                      )}\r\n                                    </li>\r\n                                  </ul>\r\n\r\n                                  <p className=\"mt-3 mb-2\">\r\n                                    {_t(t(\"For SSL\"))}\r\n                                  </p>\r\n                                  <ul className=\"list-group mar-no\">\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(\r\n                                        t(\r\n                                          \"Select 'sendmail' for Mail Mailer if you face any issue after configuring 'smtp' as Mail Mailer\"\r\n                                        )\r\n                                      )}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(\r\n                                        t(\r\n                                          \"Set Mail Host according to your server Mail Client Manual Settings\"\r\n                                        )\r\n                                      )}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(t(\"Set Mail port as '465'\"))}\r\n                                    </li>\r\n                                    <li className=\"list-group-item text-dark\">\r\n                                      {_t(t(\"Set Mail Encryption as 'ssl'\"))}\r\n                                    </li>\r\n                                  </ul>\r\n                                </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Smtp;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n  getSystemSettings,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport reactCSS from \"reactcss\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\n\r\nconst General = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    loading,\r\n    setLoading,\r\n    generalSettings,\r\n    setGeneralSettings,\r\n    dataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //color picker\r\n  let [colorPick, setColorPick] = useState({\r\n    displayColorPicker: false,\r\n    color: getSystemSettings(generalSettings, \"type_background\"),\r\n  });\r\n\r\n  //clock color picker\r\n  let [colorPickClock, setColorPickClock] = useState({\r\n    displayColorPickerClock: false,\r\n    color: getSystemSettings(generalSettings, \"type_clock\"),\r\n  });\r\n\r\n  //color text\r\n  let [colorTextPick, setColorTextPick] = useState({\r\n    displayColorTextPicker: false,\r\n    color: getSystemSettings(generalSettings, \"type_color\"),\r\n  });\r\n\r\n  //new item\r\n  let [newSettings, setNewSettings] = useState({\r\n    footerText: getSystemSettings(generalSettings, \"type_footer\"),\r\n    siteName: getSystemSettings(generalSettings, \"siteName\"),\r\n    address: getSystemSettings(generalSettings, \"address\"),\r\n    phnNo: getSystemSettings(generalSettings, \"phnNo\"),\r\n    vat: getSystemSettings(generalSettings, \"type_vat\"),\r\n    image: null,\r\n    favicon: null,\r\n    timezone: null,\r\n    selectedTimeZone: getSystemSettings(generalSettings, \"timezone\"),\r\n    print_kitchen_bill:\r\n      getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\" ? 1 : 0,\r\n    play_sound:\r\n      getSystemSettings(generalSettings, \"play_sound\") === \"1\" ? 1 : 0,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  //on change input field\r\n  const handleChange = (e) => {\r\n    setNewSettings({ ...newSettings, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set image hook\r\n  const handleItemImage = (e) => {\r\n    setNewSettings({\r\n      ...newSettings,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //favicon\r\n  const handleItemFavicon = (e) => {\r\n    setNewSettings({\r\n      ...newSettings,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //color picker's function\r\n  const handleClick = () => {\r\n    setColorPick({\r\n      ...colorPick,\r\n      displayColorPicker: !colorPick.displayColorPicker,\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setColorPick({ ...colorPick, displayColorPicker: false });\r\n  };\r\n  const handleChangeColor = (color) => {\r\n    setColorPick({ ...colorPick, color: color.hex });\r\n  };\r\n\r\n  //clock color picker's function\r\n  const handleClickClock = () => {\r\n    setColorPickClock({\r\n      ...colorPickClock,\r\n      displayColorPickerClock: !colorPickClock.displayColorPickerClock,\r\n    });\r\n  };\r\n  const handleCloseClock = () => {\r\n    setColorPickClock({ ...colorPickClock, displayColorPickerClock: false });\r\n  };\r\n  const handleChangeColorClock = (color) => {\r\n    setColorPickClock({ ...colorPickClock, color: color.hex });\r\n  };\r\n\r\n  //text color\r\n  const handleClickText = () => {\r\n    setColorTextPick({\r\n      ...colorTextPick,\r\n      displayColorTextPicker: !colorTextPick.displayColorTextPicker,\r\n    });\r\n  };\r\n  const handleCloseText = () => {\r\n    setColorTextPick({ ...colorTextPick, displayColorTextPicker: false });\r\n  };\r\n  const handleChangeColorText = (color) => {\r\n    setColorTextPick({ ...colorTextPick, color: color.hex });\r\n  };\r\n\r\n  //send req to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let formData = new FormData();\r\n    formData.append(\"image\", newSettings.image);\r\n    formData.append(\"favicon\", newSettings.favicon);\r\n    formData.append(\"type_background\", colorPick.color);\r\n    formData.append(\"type_clock\", colorPickClock.color);\r\n    formData.append(\"type_color\", colorTextPick.color);\r\n    formData.append(\"type_footer\", newSettings.footerText);\r\n    formData.append(\"siteName\", newSettings.siteName);\r\n    formData.append(\"address\", newSettings.address);\r\n    formData.append(\"phnNo\", newSettings.phnNo);\r\n    formData.append(\"type_vat\", newSettings.vat);\r\n    formData.append(\"timezone\", newSettings.timezone);\r\n    formData.append(\"print_kitchen_bill\", newSettings.print_kitchen_bill);\r\n    formData.append(\"play_sound\", newSettings.play_sound);\r\n    const url = BASE_URL + \"/settings/general-settings\";\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setGeneralSettings(res.data);\r\n        setNewSettings({\r\n          footerText: getSystemSettings(res.data, \"type_footer\"),\r\n          siteName: getSystemSettings(res.data, \"siteName\"),\r\n          address: getSystemSettings(res.data, \"address\"),\r\n          phnNo: getSystemSettings(res.data, \"phnNo\"),\r\n          vat: getSystemSettings(res.data, \"type_vat\"),\r\n          image: null,\r\n          favicon: null,\r\n          selectedTimeZone: getSystemSettings(res.data, \"timezone\"),\r\n          timezone: null,\r\n          print_kitchen_bill:\r\n            getSystemSettings(res.data, \"print_kitchen_bill\") === \"1\" ? 1 : 0,\r\n          play_sound: getSystemSettings(res.data, \"play_sound\") === \"1\" ? 1 : 0,\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Settings has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //color picker css\r\n  const styles = reactCSS({\r\n    default: {\r\n      color: {\r\n        height: \"24px\",\r\n        borderRadius: \"2px\",\r\n        background: colorPick.color,\r\n      },\r\n      swatch: {\r\n        background: \"#fff\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  //clock color picker css\r\n  const stylesClock = reactCSS({\r\n    default: {\r\n      color: {\r\n        height: \"24px\",\r\n        borderRadius: \"2px\",\r\n        background: colorPickClock.color,\r\n      },\r\n      swatch: {\r\n        background: \"#fff\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  //text color picker css\r\n  const stylesText = reactCSS({\r\n    default: {\r\n      color: {\r\n        height: \"24px\",\r\n        borderRadius: \"2px\",\r\n        background: colorTextPick.color,\r\n      },\r\n      swatch: {\r\n        background: \"#fff\",\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n      },\r\n      popover: {\r\n        position: \"absolute\",\r\n        zIndex: \"2\",\r\n      },\r\n      cover: {\r\n        position: \"fixed\",\r\n        top: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        left: \"0px\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"General Settings\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"General Settings\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <form\r\n                          className=\"row card p-2 mx-3 sm-text my-2\"\r\n                          onSubmit={handleSubmit}\r\n                        >\r\n                          <div className=\"col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"siteName\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Site's name\"))}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"siteName\"\r\n                                  name=\"siteName\"\r\n                                  onChange={handleChange}\r\n                                  value={newSettings.siteName}\r\n                                  placeholder=\"e.g. Khadyo Restaurant\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"address\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Address\"))}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"address\"\r\n                                  name=\"address\"\r\n                                  onChange={handleChange}\r\n                                  value={newSettings.address}\r\n                                  placeholder=\"e.g. Type address\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"phnNo\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Phone number\"))}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"phnNo\"\r\n                                  name=\"phnNo\"\r\n                                  onChange={handleChange}\r\n                                  value={newSettings.phnNo}\r\n                                  placeholder=\"e.g. +8801xxx\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label className=\"control-label\">\r\n                                  {_t(t(\"Background of logo\"))}...\r\n                                  <span className=\"text-danger\">*</span>\r\n                                  <span className=\"text-secondary ml-1\">\r\n                                    ({\" \"}\r\n                                    {_t(\r\n                                      t(\r\n                                        \"Please pick a color, click on the color below\"\r\n                                      )\r\n                                    )}\r\n                                    )\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div\r\n                                  style={styles.swatch}\r\n                                  onClick={handleClick}\r\n                                  className=\"rounded-md col-12 col-md-3\"\r\n                                >\r\n                                  <div\r\n                                    style={styles.color}\r\n                                    className=\"form-control\"\r\n                                  />\r\n                                </div>\r\n                                {colorPick.displayColorPicker && (\r\n                                  <div style={styles.popover}>\r\n                                    <div\r\n                                      style={styles.cover}\r\n                                      onClick={handleClose}\r\n                                    />\r\n                                    <SketchPicker\r\n                                      color={colorPick.color}\r\n                                      onChange={handleChangeColor}\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label className=\"control-label\">\r\n                                  {_t(t(\"Background of footer clock\"))}...\r\n                                  <span className=\"text-danger\">*</span>\r\n                                  <span className=\"text-secondary ml-1\">\r\n                                    ({\" \"}\r\n                                    {_t(\r\n                                      t(\r\n                                        \"Please pick a color, click on the color below\"\r\n                                      )\r\n                                    )}\r\n                                    )\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div\r\n                                  style={stylesClock.swatch}\r\n                                  onClick={handleClickClock}\r\n                                  className=\"rounded-md col-12 col-md-3\"\r\n                                >\r\n                                  <div\r\n                                    style={stylesClock.color}\r\n                                    className=\"form-control\"\r\n                                  />\r\n                                </div>\r\n                                {colorPickClock.displayColorPickerClock && (\r\n                                  <div style={stylesClock.popover}>\r\n                                    <div\r\n                                      style={stylesClock.cover}\r\n                                      onClick={handleCloseClock}\r\n                                    />\r\n                                    <SketchPicker\r\n                                      color={colorPickClock.color}\r\n                                      onChange={handleChangeColorClock}\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label className=\"control-label\">\r\n                                  {_t(t(\"Text color of currency, clock\"))}...\r\n                                  <span className=\"text-danger\">*</span>\r\n                                  <span className=\"text-secondary ml-1\">\r\n                                    ({\" \"}\r\n                                    {_t(\r\n                                      t(\r\n                                        \"Please pick a color, click on the color below\"\r\n                                      )\r\n                                    )}\r\n                                    )\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div\r\n                                  style={stylesText.swatch}\r\n                                  onClick={handleClickText}\r\n                                  className=\"rounded-md col-12 col-md-3\"\r\n                                >\r\n                                  <div\r\n                                    style={stylesText.color}\r\n                                    className=\"form-control\"\r\n                                  />\r\n                                </div>\r\n                                {colorTextPick.displayColorTextPicker && (\r\n                                  <div style={stylesText.popover}>\r\n                                    <div\r\n                                      style={stylesText.cover}\r\n                                      onClick={handleCloseText}\r\n                                    />\r\n                                    <SketchPicker\r\n                                      color={colorTextPick.color}\r\n                                      onChange={handleChangeColorText}\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"image\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Logo\"))}\r\n                                  <small className=\"text-secondary ml-1\">\r\n                                    (\r\n                                    {_t(\r\n                                      t(\r\n                                        \"Background color will be hidden/shown depending on width of this image\"\r\n                                      )\r\n                                    )}\r\n                                    )\r\n                                  </small>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"image\"\r\n                                  name=\"image\"\r\n                                  onChange={handleItemImage}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"favicon\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Favicon\"))}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"favicon\"\r\n                                  name=\"favicon\"\r\n                                  onChange={handleItemFavicon}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label htmlFor=\"vat\" className=\"control-label\">\r\n                                  {_t(t(\"Vat\"))} (%)\r\n                                  <span className=\"text-danger\">*</span>{\" \"}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  step=\"0.01\"\r\n                                  min=\"0\"\r\n                                  className=\"form-control sm-text\"\r\n                                  id=\"vat\"\r\n                                  name=\"vat\"\r\n                                  onChange={handleChange}\r\n                                  value={newSettings.vat}\r\n                                  placeholder=\"e.g. Type vat %\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-check mt-4\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input pointer-cursor\"\r\n                                id=\"print_kitchen_bill\"\r\n                                name=\"print_kitchen_bill\"\r\n                                onChange={() => {\r\n                                  setNewSettings({\r\n                                    ...newSettings,\r\n                                    print_kitchen_bill:\r\n                                      newSettings.print_kitchen_bill === 0\r\n                                        ? 1\r\n                                        : 0,\r\n                                  });\r\n                                }}\r\n                                checked={newSettings.print_kitchen_bill === 1}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label  pointer-cursor\"\r\n                                htmlFor=\"print_kitchen_bill\"\r\n                              >\r\n                                {_t(t(\"Print order details in kitchen?\"))}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"form-check mt-4\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input pointer-cursor\"\r\n                                id=\"play_sound\"\r\n                                name=\"play_sound\"\r\n                                onChange={() => {\r\n                                  setNewSettings({\r\n                                    ...newSettings,\r\n                                    play_sound:\r\n                                      newSettings.play_sound === 0 ? 1 : 0,\r\n                                  });\r\n                                }}\r\n                                checked={newSettings.play_sound === 1}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label pointer-cursor\"\r\n                                htmlFor=\"play_sound\"\r\n                              >\r\n                                {_t(t(\"Play beep sound in POS?\"))}\r\n                              </label>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"Timezone\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Timezone\"))}{\" \"}\r\n                                  <span className=\"text-secondary\">\r\n                                    (Selected: {newSettings.selectedTimeZone})\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <select\r\n                                  className=\"form-control\"\r\n                                  onChange={(e) => {\r\n                                    setNewSettings({\r\n                                      ...newSettings,\r\n                                      timezone: e.target.value,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  <optgroup label=\"Please select a timezone\">\r\n                                    <option value=\"\" className=\"py-3\">\r\n                                      Please select a timezone\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"General\">\r\n                                    <option value=\"GMT\">GMT timezone</option>\r\n                                    <option value=\"UTC\">UTC timezone</option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Africa\">\r\n                                    <option value=\"Africa/Abidjan\">\r\n                                      (GMT/UTC + 00:00) Abidjan\r\n                                    </option>\r\n                                    <option value=\"Africa/Accra\">\r\n                                      (GMT/UTC + 00:00) Accra\r\n                                    </option>\r\n                                    <option value=\"Africa/Addis_Ababa\">\r\n                                      (GMT/UTC + 03:00) Addis Ababa\r\n                                    </option>\r\n                                    <option value=\"Africa/Algiers\">\r\n                                      (GMT/UTC + 01:00) Algiers\r\n                                    </option>\r\n                                    <option value=\"Africa/Asmara\">\r\n                                      (GMT/UTC + 03:00) Asmara\r\n                                    </option>\r\n                                    <option value=\"Africa/Bamako\">\r\n                                      (GMT/UTC + 00:00) Bamako\r\n                                    </option>\r\n                                    <option value=\"Africa/Bangui\">\r\n                                      (GMT/UTC + 01:00) Bangui\r\n                                    </option>\r\n                                    <option value=\"Africa/Banjul\">\r\n                                      (GMT/UTC + 00:00) Banjul\r\n                                    </option>\r\n                                    <option value=\"Africa/Bissau\">\r\n                                      (GMT/UTC + 00:00) Bissau\r\n                                    </option>\r\n                                    <option value=\"Africa/Blantyre\">\r\n                                      (GMT/UTC + 02:00) Blantyre\r\n                                    </option>\r\n                                    <option value=\"Africa/Brazzaville\">\r\n                                      (GMT/UTC + 01:00) Brazzaville\r\n                                    </option>\r\n                                    <option value=\"Africa/Bujumbura\">\r\n                                      (GMT/UTC + 02:00) Bujumbura\r\n                                    </option>\r\n                                    <option value=\"Africa/Cairo\">\r\n                                      (GMT/UTC + 02:00) Cairo\r\n                                    </option>\r\n                                    <option value=\"Africa/Casablanca\">\r\n                                      (GMT/UTC + 00:00) Casablanca\r\n                                    </option>\r\n                                    <option value=\"Africa/Ceuta\">\r\n                                      (GMT/UTC + 01:00) Ceuta\r\n                                    </option>\r\n                                    <option value=\"Africa/Conakry\">\r\n                                      (GMT/UTC + 00:00) Conakry\r\n                                    </option>\r\n                                    <option value=\"Africa/Dakar\">\r\n                                      (GMT/UTC + 00:00) Dakar\r\n                                    </option>\r\n                                    <option value=\"Africa/Dar_es_Salaam\">\r\n                                      (GMT/UTC + 03:00) Dar es Salaam\r\n                                    </option>\r\n                                    <option value=\"Africa/Djibouti\">\r\n                                      (GMT/UTC + 03:00) Djibouti\r\n                                    </option>\r\n                                    <option value=\"Africa/Douala\">\r\n                                      (GMT/UTC + 01:00) Douala\r\n                                    </option>\r\n                                    <option value=\"Africa/El_Aaiun\">\r\n                                      (GMT/UTC + 00:00) El Aaiun\r\n                                    </option>\r\n                                    <option value=\"Africa/Freetown\">\r\n                                      (GMT/UTC + 00:00) Freetown\r\n                                    </option>\r\n                                    <option value=\"Africa/Gaborone\">\r\n                                      (GMT/UTC + 02:00) Gaborone\r\n                                    </option>\r\n                                    <option value=\"Africa/Harare\">\r\n                                      (GMT/UTC + 02:00) Harare\r\n                                    </option>\r\n                                    <option value=\"Africa/Johannesburg\">\r\n                                      (GMT/UTC + 02:00) Johannesburg\r\n                                    </option>\r\n                                    <option value=\"Africa/Juba\">\r\n                                      (GMT/UTC + 03:00) Juba\r\n                                    </option>\r\n                                    <option value=\"Africa/Kampala\">\r\n                                      (GMT/UTC + 03:00) Kampala\r\n                                    </option>\r\n                                    <option value=\"Africa/Khartoum\">\r\n                                      (GMT/UTC + 03:00) Khartoum\r\n                                    </option>\r\n                                    <option value=\"Africa/Kigali\">\r\n                                      (GMT/UTC + 02:00) Kigali\r\n                                    </option>\r\n                                    <option value=\"Africa/Kinshasa\">\r\n                                      (GMT/UTC + 01:00) Kinshasa\r\n                                    </option>\r\n                                    <option value=\"Africa/Lagos\">\r\n                                      (GMT/UTC + 01:00) Lagos\r\n                                    </option>\r\n                                    <option value=\"Africa/Libreville\">\r\n                                      (GMT/UTC + 01:00) Libreville\r\n                                    </option>\r\n                                    <option value=\"Africa/Lome\">\r\n                                      (GMT/UTC + 00:00) Lome\r\n                                    </option>\r\n                                    <option value=\"Africa/Luanda\">\r\n                                      (GMT/UTC + 01:00) Luanda\r\n                                    </option>\r\n                                    <option value=\"Africa/Lubumbashi\">\r\n                                      (GMT/UTC + 02:00) Lubumbashi\r\n                                    </option>\r\n                                    <option value=\"Africa/Lusaka\">\r\n                                      (GMT/UTC + 02:00) Lusaka\r\n                                    </option>\r\n                                    <option value=\"Africa/Malabo\">\r\n                                      (GMT/UTC + 01:00) Malabo\r\n                                    </option>\r\n                                    <option value=\"Africa/Maputo\">\r\n                                      (GMT/UTC + 02:00) Maputo\r\n                                    </option>\r\n                                    <option value=\"Africa/Maseru\">\r\n                                      (GMT/UTC + 02:00) Maseru\r\n                                    </option>\r\n                                    <option value=\"Africa/Mbabane\">\r\n                                      (GMT/UTC + 02:00) Mbabane\r\n                                    </option>\r\n                                    <option value=\"Africa/Mogadishu\">\r\n                                      (GMT/UTC + 03:00) Mogadishu\r\n                                    </option>\r\n                                    <option value=\"Africa/Monrovia\">\r\n                                      (GMT/UTC + 00:00) Monrovia\r\n                                    </option>\r\n                                    <option value=\"Africa/Nairobi\">\r\n                                      (GMT/UTC + 03:00) Nairobi\r\n                                    </option>\r\n                                    <option value=\"Africa/Ndjamena\">\r\n                                      (GMT/UTC + 01:00) Ndjamena\r\n                                    </option>\r\n                                    <option value=\"Africa/Niamey\">\r\n                                      (GMT/UTC + 01:00) Niamey\r\n                                    </option>\r\n                                    <option value=\"Africa/Nouakchott\">\r\n                                      (GMT/UTC + 00:00) Nouakchott\r\n                                    </option>\r\n                                    <option value=\"Africa/Ouagadougou\">\r\n                                      (GMT/UTC + 00:00) Ouagadougou\r\n                                    </option>\r\n                                    <option value=\"Africa/Porto-Novo\">\r\n                                      (GMT/UTC + 01:00) Porto-Novo\r\n                                    </option>\r\n                                    <option value=\"Africa/Sao_Tome\">\r\n                                      (GMT/UTC + 00:00) Sao Tome\r\n                                    </option>\r\n                                    <option value=\"Africa/Tripoli\">\r\n                                      (GMT/UTC + 02:00) Tripoli\r\n                                    </option>\r\n                                    <option value=\"Africa/Tunis\">\r\n                                      (GMT/UTC + 01:00) Tunis\r\n                                    </option>\r\n                                    <option value=\"Africa/Windhoek\">\r\n                                      (GMT/UTC + 02:00) Windhoek\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"America\">\r\n                                    <option value=\"America/Adak\">\r\n                                      (GMT/UTC - 10:00) Adak\r\n                                    </option>\r\n                                    <option value=\"America/Anchorage\">\r\n                                      (GMT/UTC - 09:00) Anchorage\r\n                                    </option>\r\n                                    <option value=\"America/Anguilla\">\r\n                                      (GMT/UTC - 04:00) Anguilla\r\n                                    </option>\r\n                                    <option value=\"America/Antigua\">\r\n                                      (GMT/UTC - 04:00) Antigua\r\n                                    </option>\r\n                                    <option value=\"America/Araguaina\">\r\n                                      (GMT/UTC - 03:00) Araguaina\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Buenos_Aires\">\r\n                                      (GMT/UTC - 03:00) Argentina/Buenos Aires\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Catamarca\">\r\n                                      (GMT/UTC - 03:00) Argentina/Catamarca\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Cordoba\">\r\n                                      (GMT/UTC - 03:00) Argentina/Cordoba\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Jujuy\">\r\n                                      (GMT/UTC - 03:00) Argentina/Jujuy\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/La_Rioja\">\r\n                                      (GMT/UTC - 03:00) Argentina/La Rioja\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Mendoza\">\r\n                                      (GMT/UTC - 03:00) Argentina/Mendoza\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Rio_Gallegos\">\r\n                                      (GMT/UTC - 03:00) Argentina/Rio Gallegos\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Salta\">\r\n                                      (GMT/UTC - 03:00) Argentina/Salta\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/San_Juan\">\r\n                                      (GMT/UTC - 03:00) Argentina/San Juan\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/San_Luis\">\r\n                                      (GMT/UTC - 03:00) Argentina/San Luis\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Tucuman\">\r\n                                      (GMT/UTC - 03:00) Argentina/Tucuman\r\n                                    </option>\r\n                                    <option value=\"America/Argentina/Ushuaia\">\r\n                                      (GMT/UTC - 03:00) Argentina/Ushuaia\r\n                                    </option>\r\n                                    <option value=\"America/Aruba\">\r\n                                      (GMT/UTC - 04:00) Aruba\r\n                                    </option>\r\n                                    <option value=\"America/Asuncion\">\r\n                                      (GMT/UTC - 03:00) Asuncion\r\n                                    </option>\r\n                                    <option value=\"America/Atikokan\">\r\n                                      (GMT/UTC - 05:00) Atikokan\r\n                                    </option>\r\n                                    <option value=\"America/Bahia\">\r\n                                      (GMT/UTC - 03:00) Bahia\r\n                                    </option>\r\n                                    <option value=\"America/Bahia_Banderas\">\r\n                                      (GMT/UTC - 06:00) Bahia Banderas\r\n                                    </option>\r\n                                    <option value=\"America/Barbados\">\r\n                                      (GMT/UTC - 04:00) Barbados\r\n                                    </option>\r\n                                    <option value=\"America/Belem\">\r\n                                      (GMT/UTC - 03:00) Belem\r\n                                    </option>\r\n                                    <option value=\"America/Belize\">\r\n                                      (GMT/UTC - 06:00) Belize\r\n                                    </option>\r\n                                    <option value=\"America/Blanc-Sablon\">\r\n                                      (GMT/UTC - 04:00) Blanc-Sablon\r\n                                    </option>\r\n                                    <option value=\"America/Boa_Vista\">\r\n                                      (GMT/UTC - 04:00) Boa Vista\r\n                                    </option>\r\n                                    <option value=\"America/Bogota\">\r\n                                      (GMT/UTC - 05:00) Bogota\r\n                                    </option>\r\n                                    <option value=\"America/Boise\">\r\n                                      (GMT/UTC - 07:00) Boise\r\n                                    </option>\r\n                                    <option value=\"America/Cambridge_Bay\">\r\n                                      (GMT/UTC - 07:00) Cambridge Bay\r\n                                    </option>\r\n                                    <option value=\"America/Campo_Grande\">\r\n                                      (GMT/UTC - 03:00) Campo Grande\r\n                                    </option>\r\n                                    <option value=\"America/Cancun\">\r\n                                      (GMT/UTC - 05:00) Cancun\r\n                                    </option>\r\n                                    <option value=\"America/Caracas\">\r\n                                      (GMT/UTC - 04:30) Caracas\r\n                                    </option>\r\n                                    <option value=\"America/Cayenne\">\r\n                                      (GMT/UTC - 03:00) Cayenne\r\n                                    </option>\r\n                                    <option value=\"America/Cayman\">\r\n                                      (GMT/UTC - 05:00) Cayman\r\n                                    </option>\r\n                                    <option value=\"America/Chicago\">\r\n                                      (GMT/UTC - 06:00) Chicago\r\n                                    </option>\r\n                                    <option value=\"America/Chihuahua\">\r\n                                      (GMT/UTC - 07:00) Chihuahua\r\n                                    </option>\r\n                                    <option value=\"America/Costa_Rica\">\r\n                                      (GMT/UTC - 06:00) Costa Rica\r\n                                    </option>\r\n                                    <option value=\"America/Creston\">\r\n                                      (GMT/UTC - 07:00) Creston\r\n                                    </option>\r\n                                    <option value=\"America/Cuiaba\">\r\n                                      (GMT/UTC - 03:00) Cuiaba\r\n                                    </option>\r\n                                    <option value=\"America/Curacao\">\r\n                                      (GMT/UTC - 04:00) Curacao\r\n                                    </option>\r\n                                    <option value=\"America/Danmarkshavn\">\r\n                                      (GMT/UTC + 00:00) Danmarkshavn\r\n                                    </option>\r\n                                    <option value=\"America/Dawson\">\r\n                                      (GMT/UTC - 08:00) Dawson\r\n                                    </option>\r\n                                    <option value=\"America/Dawson_Creek\">\r\n                                      (GMT/UTC - 07:00) Dawson Creek\r\n                                    </option>\r\n                                    <option value=\"America/Denver\">\r\n                                      (GMT/UTC - 07:00) Denver\r\n                                    </option>\r\n                                    <option value=\"America/Detroit\">\r\n                                      (GMT/UTC - 05:00) Detroit\r\n                                    </option>\r\n                                    <option value=\"America/Dominica\">\r\n                                      (GMT/UTC - 04:00) Dominica\r\n                                    </option>\r\n                                    <option value=\"America/Edmonton\">\r\n                                      (GMT/UTC - 07:00) Edmonton\r\n                                    </option>\r\n                                    <option value=\"America/Eirunepe\">\r\n                                      (GMT/UTC - 05:00) Eirunepe\r\n                                    </option>\r\n                                    <option value=\"America/El_Salvador\">\r\n                                      (GMT/UTC - 06:00) El Salvador\r\n                                    </option>\r\n                                    <option value=\"America/Fort_Nelson\">\r\n                                      (GMT/UTC - 07:00) Fort Nelson\r\n                                    </option>\r\n                                    <option value=\"America/Fortaleza\">\r\n                                      (GMT/UTC - 03:00) Fortaleza\r\n                                    </option>\r\n                                    <option value=\"America/Glace_Bay\">\r\n                                      (GMT/UTC - 04:00) Glace Bay\r\n                                    </option>\r\n                                    <option value=\"America/Godthab\">\r\n                                      (GMT/UTC - 03:00) Godthab\r\n                                    </option>\r\n                                    <option value=\"America/Goose_Bay\">\r\n                                      (GMT/UTC - 04:00) Goose Bay\r\n                                    </option>\r\n                                    <option value=\"America/Grand_Turk\">\r\n                                      (GMT/UTC - 04:00) Grand Turk\r\n                                    </option>\r\n                                    <option value=\"America/Grenada\">\r\n                                      (GMT/UTC - 04:00) Grenada\r\n                                    </option>\r\n                                    <option value=\"America/Guadeloupe\">\r\n                                      (GMT/UTC - 04:00) Guadeloupe\r\n                                    </option>\r\n                                    <option value=\"America/Guatemala\">\r\n                                      (GMT/UTC - 06:00) Guatemala\r\n                                    </option>\r\n                                    <option value=\"America/Guayaquil\">\r\n                                      (GMT/UTC - 05:00) Guayaquil\r\n                                    </option>\r\n                                    <option value=\"America/Guyana\">\r\n                                      (GMT/UTC - 04:00) Guyana\r\n                                    </option>\r\n                                    <option value=\"America/Halifax\">\r\n                                      (GMT/UTC - 04:00) Halifax\r\n                                    </option>\r\n                                    <option value=\"America/Havana\">\r\n                                      (GMT/UTC - 05:00) Havana\r\n                                    </option>\r\n                                    <option value=\"America/Hermosillo\">\r\n                                      (GMT/UTC - 07:00) Hermosillo\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Indianapolis\">\r\n                                      (GMT/UTC - 05:00) Indiana/Indianapolis\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Knox\">\r\n                                      (GMT/UTC - 06:00) Indiana/Knox\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Marengo\">\r\n                                      (GMT/UTC - 05:00) Indiana/Marengo\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Petersburg\">\r\n                                      (GMT/UTC - 05:00) Indiana/Petersburg\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Tell_City\">\r\n                                      (GMT/UTC - 06:00) Indiana/Tell City\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Vevay\">\r\n                                      (GMT/UTC - 05:00) Indiana/Vevay\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Vincennes\">\r\n                                      (GMT/UTC - 05:00) Indiana/Vincennes\r\n                                    </option>\r\n                                    <option value=\"America/Indiana/Winamac\">\r\n                                      (GMT/UTC - 05:00) Indiana/Winamac\r\n                                    </option>\r\n                                    <option value=\"America/Inuvik\">\r\n                                      (GMT/UTC - 07:00) Inuvik\r\n                                    </option>\r\n                                    <option value=\"America/Iqaluit\">\r\n                                      (GMT/UTC - 05:00) Iqaluit\r\n                                    </option>\r\n                                    <option value=\"America/Jamaica\">\r\n                                      (GMT/UTC - 05:00) Jamaica\r\n                                    </option>\r\n                                    <option value=\"America/Juneau\">\r\n                                      (GMT/UTC - 09:00) Juneau\r\n                                    </option>\r\n                                    <option value=\"America/Kentucky/Louisville\">\r\n                                      (GMT/UTC - 05:00) Kentucky/Louisville\r\n                                    </option>\r\n                                    <option value=\"America/Kentucky/Monticello\">\r\n                                      (GMT/UTC - 05:00) Kentucky/Monticello\r\n                                    </option>\r\n                                    <option value=\"America/Kralendijk\">\r\n                                      (GMT/UTC - 04:00) Kralendijk\r\n                                    </option>\r\n                                    <option value=\"America/La_Paz\">\r\n                                      (GMT/UTC - 04:00) La Paz\r\n                                    </option>\r\n                                    <option value=\"America/Lima\">\r\n                                      (GMT/UTC - 05:00) Lima\r\n                                    </option>\r\n                                    <option value=\"America/Los_Angeles\">\r\n                                      (GMT/UTC - 08:00) Los Angeles\r\n                                    </option>\r\n                                    <option value=\"America/Lower_Princes\">\r\n                                      (GMT/UTC - 04:00) Lower Princes\r\n                                    </option>\r\n                                    <option value=\"America/Maceio\">\r\n                                      (GMT/UTC - 03:00) Maceio\r\n                                    </option>\r\n                                    <option value=\"America/Managua\">\r\n                                      (GMT/UTC - 06:00) Managua\r\n                                    </option>\r\n                                    <option value=\"America/Manaus\">\r\n                                      (GMT/UTC - 04:00) Manaus\r\n                                    </option>\r\n                                    <option value=\"America/Marigot\">\r\n                                      (GMT/UTC - 04:00) Marigot\r\n                                    </option>\r\n                                    <option value=\"America/Martinique\">\r\n                                      (GMT/UTC - 04:00) Martinique\r\n                                    </option>\r\n                                    <option value=\"America/Matamoros\">\r\n                                      (GMT/UTC - 06:00) Matamoros\r\n                                    </option>\r\n                                    <option value=\"America/Mazatlan\">\r\n                                      (GMT/UTC - 07:00) Mazatlan\r\n                                    </option>\r\n                                    <option value=\"America/Menominee\">\r\n                                      (GMT/UTC - 06:00) Menominee\r\n                                    </option>\r\n                                    <option value=\"America/Merida\">\r\n                                      (GMT/UTC - 06:00) Merida\r\n                                    </option>\r\n                                    <option value=\"America/Metlakatla\">\r\n                                      (GMT/UTC - 09:00) Metlakatla\r\n                                    </option>\r\n                                    <option value=\"America/Mexico_City\">\r\n                                      (GMT/UTC - 06:00) Mexico City\r\n                                    </option>\r\n                                    <option value=\"America/Miquelon\">\r\n                                      (GMT/UTC - 03:00) Miquelon\r\n                                    </option>\r\n                                    <option value=\"America/Moncton\">\r\n                                      (GMT/UTC - 04:00) Moncton\r\n                                    </option>\r\n                                    <option value=\"America/Monterrey\">\r\n                                      (GMT/UTC - 06:00) Monterrey\r\n                                    </option>\r\n                                    <option value=\"America/Montevideo\">\r\n                                      (GMT/UTC - 03:00) Montevideo\r\n                                    </option>\r\n                                    <option value=\"America/Montserrat\">\r\n                                      (GMT/UTC - 04:00) Montserrat\r\n                                    </option>\r\n                                    <option value=\"America/Nassau\">\r\n                                      (GMT/UTC - 05:00) Nassau\r\n                                    </option>\r\n                                    <option value=\"America/New_York\">\r\n                                      (GMT/UTC - 05:00) New York\r\n                                    </option>\r\n                                    <option value=\"America/Nipigon\">\r\n                                      (GMT/UTC - 05:00) Nipigon\r\n                                    </option>\r\n                                    <option value=\"America/Nome\">\r\n                                      (GMT/UTC - 09:00) Nome\r\n                                    </option>\r\n                                    <option value=\"America/Noronha\">\r\n                                      (GMT/UTC - 02:00) Noronha\r\n                                    </option>\r\n                                    <option value=\"America/North_Dakota/Beulah\">\r\n                                      (GMT/UTC - 06:00) North Dakota/Beulah\r\n                                    </option>\r\n                                    <option value=\"America/North_Dakota/Center\">\r\n                                      (GMT/UTC - 06:00) North Dakota/Center\r\n                                    </option>\r\n                                    <option value=\"America/North_Dakota/New_Salem\">\r\n                                      (GMT/UTC - 06:00) North Dakota/New Salem\r\n                                    </option>\r\n                                    <option value=\"America/Ojinaga\">\r\n                                      (GMT/UTC - 07:00) Ojinaga\r\n                                    </option>\r\n                                    <option value=\"America/Panama\">\r\n                                      (GMT/UTC - 05:00) Panama\r\n                                    </option>\r\n                                    <option value=\"America/Pangnirtung\">\r\n                                      (GMT/UTC - 05:00) Pangnirtung\r\n                                    </option>\r\n                                    <option value=\"America/Paramaribo\">\r\n                                      (GMT/UTC - 03:00) Paramaribo\r\n                                    </option>\r\n                                    <option value=\"America/Phoenix\">\r\n                                      (GMT/UTC - 07:00) Phoenix\r\n                                    </option>\r\n                                    <option value=\"America/Port-au-Prince\">\r\n                                      (GMT/UTC - 05:00) Port-au-Prince\r\n                                    </option>\r\n                                    <option value=\"America/Port_of_Spain\">\r\n                                      (GMT/UTC - 04:00) Port of Spain\r\n                                    </option>\r\n                                    <option value=\"America/Porto_Velho\">\r\n                                      (GMT/UTC - 04:00) Porto Velho\r\n                                    </option>\r\n                                    <option value=\"America/Puerto_Rico\">\r\n                                      (GMT/UTC - 04:00) Puerto Rico\r\n                                    </option>\r\n                                    <option value=\"America/Rainy_River\">\r\n                                      (GMT/UTC - 06:00) Rainy River\r\n                                    </option>\r\n                                    <option value=\"America/Rankin_Inlet\">\r\n                                      (GMT/UTC - 06:00) Rankin Inlet\r\n                                    </option>\r\n                                    <option value=\"America/Recife\">\r\n                                      (GMT/UTC - 03:00) Recife\r\n                                    </option>\r\n                                    <option value=\"America/Regina\">\r\n                                      (GMT/UTC - 06:00) Regina\r\n                                    </option>\r\n                                    <option value=\"America/Resolute\">\r\n                                      (GMT/UTC - 06:00) Resolute\r\n                                    </option>\r\n                                    <option value=\"America/Rio_Branco\">\r\n                                      (GMT/UTC - 05:00) Rio Branco\r\n                                    </option>\r\n                                    <option value=\"America/Santarem\">\r\n                                      (GMT/UTC - 03:00) Santarem\r\n                                    </option>\r\n                                    <option value=\"America/Santiago\">\r\n                                      (GMT/UTC - 03:00) Santiago\r\n                                    </option>\r\n                                    <option value=\"America/Santo_Domingo\">\r\n                                      (GMT/UTC - 04:00) Santo Domingo\r\n                                    </option>\r\n                                    <option value=\"America/Sao_Paulo\">\r\n                                      (GMT/UTC - 02:00) Sao Paulo\r\n                                    </option>\r\n                                    <option value=\"America/Scoresbysund\">\r\n                                      (GMT/UTC - 01:00) Scoresbysund\r\n                                    </option>\r\n                                    <option value=\"America/Sitka\">\r\n                                      (GMT/UTC - 09:00) Sitka\r\n                                    </option>\r\n                                    <option value=\"America/St_Barthelemy\">\r\n                                      (GMT/UTC - 04:00) St. Barthelemy\r\n                                    </option>\r\n                                    <option value=\"America/St_Johns\">\r\n                                      (GMT/UTC - 03:30) St. Johns\r\n                                    </option>\r\n                                    <option value=\"America/St_Kitts\">\r\n                                      (GMT/UTC - 04:00) St. Kitts\r\n                                    </option>\r\n                                    <option value=\"America/St_Lucia\">\r\n                                      (GMT/UTC - 04:00) St. Lucia\r\n                                    </option>\r\n                                    <option value=\"America/St_Thomas\">\r\n                                      (GMT/UTC - 04:00) St. Thomas\r\n                                    </option>\r\n                                    <option value=\"America/St_Vincent\">\r\n                                      (GMT/UTC - 04:00) St. Vincent\r\n                                    </option>\r\n                                    <option value=\"America/Swift_Current\">\r\n                                      (GMT/UTC - 06:00) Swift Current\r\n                                    </option>\r\n                                    <option value=\"America/Tegucigalpa\">\r\n                                      (GMT/UTC - 06:00) Tegucigalpa\r\n                                    </option>\r\n                                    <option value=\"America/Thule\">\r\n                                      (GMT/UTC - 04:00) Thule\r\n                                    </option>\r\n                                    <option value=\"America/Thunder_Bay\">\r\n                                      (GMT/UTC - 05:00) Thunder Bay\r\n                                    </option>\r\n                                    <option value=\"America/Tijuana\">\r\n                                      (GMT/UTC - 08:00) Tijuana\r\n                                    </option>\r\n                                    <option value=\"America/Toronto\">\r\n                                      (GMT/UTC - 05:00) Toronto\r\n                                    </option>\r\n                                    <option value=\"America/Tortola\">\r\n                                      (GMT/UTC - 04:00) Tortola\r\n                                    </option>\r\n                                    <option value=\"America/Vancouver\">\r\n                                      (GMT/UTC - 08:00) Vancouver\r\n                                    </option>\r\n                                    <option value=\"America/Whitehorse\">\r\n                                      (GMT/UTC - 08:00) Whitehorse\r\n                                    </option>\r\n                                    <option value=\"America/Winnipeg\">\r\n                                      (GMT/UTC - 06:00) Winnipeg\r\n                                    </option>\r\n                                    <option value=\"America/Yakutat\">\r\n                                      (GMT/UTC - 09:00) Yakutat\r\n                                    </option>\r\n                                    <option value=\"America/Yellowknife\">\r\n                                      (GMT/UTC - 07:00) Yellowknife\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Antarctica\">\r\n                                    <option value=\"Antarctica/Casey\">\r\n                                      (GMT/UTC + 08:00) Casey\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Davis\">\r\n                                      (GMT/UTC + 07:00) Davis\r\n                                    </option>\r\n                                    <option value=\"Antarctica/DumontDUrville\">\r\n                                      (GMT/UTC + 10:00) DumontDUrville\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Macquarie\">\r\n                                      (GMT/UTC + 11:00) Macquarie\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Mawson\">\r\n                                      (GMT/UTC + 05:00) Mawson\r\n                                    </option>\r\n                                    <option value=\"Antarctica/McMurdo\">\r\n                                      (GMT/UTC + 13:00) McMurdo\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Palmer\">\r\n                                      (GMT/UTC - 03:00) Palmer\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Rothera\">\r\n                                      (GMT/UTC - 03:00) Rothera\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Syowa\">\r\n                                      (GMT/UTC + 03:00) Syowa\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Troll\">\r\n                                      (GMT/UTC + 00:00) Troll\r\n                                    </option>\r\n                                    <option value=\"Antarctica/Vostok\">\r\n                                      (GMT/UTC + 06:00) Vostok\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Arctic\">\r\n                                    <option value=\"Arctic/Longyearbyen\">\r\n                                      (GMT/UTC + 01:00) Longyearbyen\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Asia\">\r\n                                    <option value=\"Asia/Aden\">\r\n                                      (GMT/UTC + 03:00) Aden\r\n                                    </option>\r\n                                    <option value=\"Asia/Almaty\">\r\n                                      (GMT/UTC + 06:00) Almaty\r\n                                    </option>\r\n                                    <option value=\"Asia/Amman\">\r\n                                      (GMT/UTC + 02:00) Amman\r\n                                    </option>\r\n                                    <option value=\"Asia/Anadyr\">\r\n                                      (GMT/UTC + 12:00) Anadyr\r\n                                    </option>\r\n                                    <option value=\"Asia/Aqtau\">\r\n                                      (GMT/UTC + 05:00) Aqtau\r\n                                    </option>\r\n                                    <option value=\"Asia/Aqtobe\">\r\n                                      (GMT/UTC + 05:00) Aqtobe\r\n                                    </option>\r\n                                    <option value=\"Asia/Ashgabat\">\r\n                                      (GMT/UTC + 05:00) Ashgabat\r\n                                    </option>\r\n                                    <option value=\"Asia/Baghdad\">\r\n                                      (GMT/UTC + 03:00) Baghdad\r\n                                    </option>\r\n                                    <option value=\"Asia/Bahrain\">\r\n                                      (GMT/UTC + 03:00) Bahrain\r\n                                    </option>\r\n                                    <option value=\"Asia/Baku\">\r\n                                      (GMT/UTC + 04:00) Baku\r\n                                    </option>\r\n                                    <option value=\"Asia/Bangkok\">\r\n                                      (GMT/UTC + 07:00) Bangkok\r\n                                    </option>\r\n                                    <option value=\"Asia/Barnaul\">\r\n                                      (GMT/UTC + 07:00) Barnaul\r\n                                    </option>\r\n                                    <option value=\"Asia/Beirut\">\r\n                                      (GMT/UTC + 02:00) Beirut\r\n                                    </option>\r\n                                    <option value=\"Asia/Bishkek\">\r\n                                      (GMT/UTC + 06:00) Bishkek\r\n                                    </option>\r\n                                    <option value=\"Asia/Brunei\">\r\n                                      (GMT/UTC + 08:00) Brunei\r\n                                    </option>\r\n                                    <option value=\"Asia/Chita\">\r\n                                      (GMT/UTC + 09:00) Chita\r\n                                    </option>\r\n                                    <option value=\"Asia/Choibalsan\">\r\n                                      (GMT/UTC + 08:00) Choibalsan\r\n                                    </option>\r\n                                    <option value=\"Asia/Colombo\">\r\n                                      (GMT/UTC + 05:30) Colombo\r\n                                    </option>\r\n                                    <option value=\"Asia/Damascus\">\r\n                                      (GMT/UTC + 02:00) Damascus\r\n                                    </option>\r\n                                    <option value=\"Asia/Dhaka\">\r\n                                      (GMT/UTC + 06:00) Dhaka\r\n                                    </option>\r\n                                    <option value=\"Asia/Dili\">\r\n                                      (GMT/UTC + 09:00) Dili\r\n                                    </option>\r\n                                    <option value=\"Asia/Dubai\">\r\n                                      (GMT/UTC + 04:00) Dubai\r\n                                    </option>\r\n                                    <option value=\"Asia/Dushanbe\">\r\n                                      (GMT/UTC + 05:00) Dushanbe\r\n                                    </option>\r\n                                    <option value=\"Asia/Gaza\">\r\n                                      (GMT/UTC + 02:00) Gaza\r\n                                    </option>\r\n                                    <option value=\"Asia/Hebron\">\r\n                                      (GMT/UTC + 02:00) Hebron\r\n                                    </option>\r\n                                    <option value=\"Asia/Ho_Chi_Minh\">\r\n                                      (GMT/UTC + 07:00) Ho Chi Minh\r\n                                    </option>\r\n                                    <option value=\"Asia/Hong_Kong\">\r\n                                      (GMT/UTC + 08:00) Hong Kong\r\n                                    </option>\r\n                                    <option value=\"Asia/Hovd\">\r\n                                      (GMT/UTC + 07:00) Hovd\r\n                                    </option>\r\n                                    <option value=\"Asia/Irkutsk\">\r\n                                      (GMT/UTC + 08:00) Irkutsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Jakarta\">\r\n                                      (GMT/UTC + 07:00) Jakarta\r\n                                    </option>\r\n                                    <option value=\"Asia/Jayapura\">\r\n                                      (GMT/UTC + 09:00) Jayapura\r\n                                    </option>\r\n                                    <option value=\"Asia/Jerusalem\">\r\n                                      (GMT/UTC + 02:00) Jerusalem\r\n                                    </option>\r\n                                    <option value=\"Asia/Kabul\">\r\n                                      (GMT/UTC + 04:30) Kabul\r\n                                    </option>\r\n                                    <option value=\"Asia/Kamchatka\">\r\n                                      (GMT/UTC + 12:00) Kamchatka\r\n                                    </option>\r\n                                    <option value=\"Asia/Karachi\">\r\n                                      (GMT/UTC + 05:00) Karachi\r\n                                    </option>\r\n                                    <option value=\"Asia/Kathmandu\">\r\n                                      (GMT/UTC + 05:45) Kathmandu\r\n                                    </option>\r\n                                    <option value=\"Asia/Khandyga\">\r\n                                      (GMT/UTC + 09:00) Khandyga\r\n                                    </option>\r\n                                    <option value=\"Asia/Kolkata\">\r\n                                      (GMT/UTC + 05:30) Kolkata\r\n                                    </option>\r\n                                    <option value=\"Asia/Krasnoyarsk\">\r\n                                      (GMT/UTC + 07:00) Krasnoyarsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Kuala_Lumpur\">\r\n                                      (GMT/UTC + 08:00) Kuala Lumpur\r\n                                    </option>\r\n                                    <option value=\"Asia/Kuching\">\r\n                                      (GMT/UTC + 08:00) Kuching\r\n                                    </option>\r\n                                    <option value=\"Asia/Kuwait\">\r\n                                      (GMT/UTC + 03:00) Kuwait\r\n                                    </option>\r\n                                    <option value=\"Asia/Macau\">\r\n                                      (GMT/UTC + 08:00) Macau\r\n                                    </option>\r\n                                    <option value=\"Asia/Magadan\">\r\n                                      (GMT/UTC + 10:00) Magadan\r\n                                    </option>\r\n                                    <option value=\"Asia/Makassar\">\r\n                                      (GMT/UTC + 08:00) Makassar\r\n                                    </option>\r\n                                    <option value=\"Asia/Manila\">\r\n                                      (GMT/UTC + 08:00) Manila\r\n                                    </option>\r\n                                    <option value=\"Asia/Muscat\">\r\n                                      (GMT/UTC + 04:00) Muscat\r\n                                    </option>\r\n                                    <option value=\"Asia/Nicosia\">\r\n                                      (GMT/UTC + 02:00) Nicosia\r\n                                    </option>\r\n                                    <option value=\"Asia/Novokuznetsk\">\r\n                                      (GMT/UTC + 07:00) Novokuznetsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Novosibirsk\">\r\n                                      (GMT/UTC + 06:00) Novosibirsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Omsk\">\r\n                                      (GMT/UTC + 06:00) Omsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Oral\">\r\n                                      (GMT/UTC + 05:00) Oral\r\n                                    </option>\r\n                                    <option value=\"Asia/Phnom_Penh\">\r\n                                      (GMT/UTC + 07:00) Phnom Penh\r\n                                    </option>\r\n                                    <option value=\"Asia/Pontianak\">\r\n                                      (GMT/UTC + 07:00) Pontianak\r\n                                    </option>\r\n                                    <option value=\"Asia/Pyongyang\">\r\n                                      (GMT/UTC + 08:30) Pyongyang\r\n                                    </option>\r\n                                    <option value=\"Asia/Qatar\">\r\n                                      (GMT/UTC + 03:00) Qatar\r\n                                    </option>\r\n                                    <option value=\"Asia/Qyzylorda\">\r\n                                      (GMT/UTC + 06:00) Qyzylorda\r\n                                    </option>\r\n                                    <option value=\"Asia/Rangoon\">\r\n                                      (GMT/UTC + 06:30) Rangoon\r\n                                    </option>\r\n                                    <option value=\"Asia/Riyadh\">\r\n                                      (GMT/UTC + 03:00) Riyadh\r\n                                    </option>\r\n                                    <option value=\"Asia/Sakhalin\">\r\n                                      (GMT/UTC + 11:00) Sakhalin\r\n                                    </option>\r\n                                    <option value=\"Asia/Samarkand\">\r\n                                      (GMT/UTC + 05:00) Samarkand\r\n                                    </option>\r\n                                    <option value=\"Asia/Seoul\">\r\n                                      (GMT/UTC + 09:00) Seoul\r\n                                    </option>\r\n                                    <option value=\"Asia/Shanghai\">\r\n                                      (GMT/UTC + 08:00) Shanghai\r\n                                    </option>\r\n                                    <option value=\"Asia/Singapore\">\r\n                                      (GMT/UTC + 08:00) Singapore\r\n                                    </option>\r\n                                    <option value=\"Asia/Srednekolymsk\">\r\n                                      (GMT/UTC + 11:00) Srednekolymsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Taipei\">\r\n                                      (GMT/UTC + 08:00) Taipei\r\n                                    </option>\r\n                                    <option value=\"Asia/Tashkent\">\r\n                                      (GMT/UTC + 05:00) Tashkent\r\n                                    </option>\r\n                                    <option value=\"Asia/Tbilisi\">\r\n                                      (GMT/UTC + 04:00) Tbilisi\r\n                                    </option>\r\n                                    <option value=\"Asia/Tehran\">\r\n                                      (GMT/UTC + 03:30) Tehran\r\n                                    </option>\r\n                                    <option value=\"Asia/Thimphu\">\r\n                                      (GMT/UTC + 06:00) Thimphu\r\n                                    </option>\r\n                                    <option value=\"Asia/Tokyo\">\r\n                                      (GMT/UTC + 09:00) Tokyo\r\n                                    </option>\r\n                                    <option value=\"Asia/Ulaanbaatar\">\r\n                                      (GMT/UTC + 08:00) Ulaanbaatar\r\n                                    </option>\r\n                                    <option value=\"Asia/Urumqi\">\r\n                                      (GMT/UTC + 06:00) Urumqi\r\n                                    </option>\r\n                                    <option value=\"Asia/Ust-Nera\">\r\n                                      (GMT/UTC + 10:00) Ust-Nera\r\n                                    </option>\r\n                                    <option value=\"Asia/Vientiane\">\r\n                                      (GMT/UTC + 07:00) Vientiane\r\n                                    </option>\r\n                                    <option value=\"Asia/Vladivostok\">\r\n                                      (GMT/UTC + 10:00) Vladivostok\r\n                                    </option>\r\n                                    <option value=\"Asia/Yakutsk\">\r\n                                      (GMT/UTC + 09:00) Yakutsk\r\n                                    </option>\r\n                                    <option value=\"Asia/Yekaterinburg\">\r\n                                      (GMT/UTC + 05:00) Yekaterinburg\r\n                                    </option>\r\n                                    <option value=\"Asia/Yerevan\">\r\n                                      (GMT/UTC + 04:00) Yerevan\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Atlantic\">\r\n                                    <option value=\"Atlantic/Azores\">\r\n                                      (GMT/UTC - 01:00) Azores\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Bermuda\">\r\n                                      (GMT/UTC - 04:00) Bermuda\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Canary\">\r\n                                      (GMT/UTC + 00:00) Canary\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Cape_Verde\">\r\n                                      (GMT/UTC - 01:00) Cape Verde\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Faroe\">\r\n                                      (GMT/UTC + 00:00) Faroe\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Madeira\">\r\n                                      (GMT/UTC + 00:00) Madeira\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Reykjavik\">\r\n                                      (GMT/UTC + 00:00) Reykjavik\r\n                                    </option>\r\n                                    <option value=\"Atlantic/South_Georgia\">\r\n                                      (GMT/UTC - 02:00) South Georgia\r\n                                    </option>\r\n                                    <option value=\"Atlantic/St_Helena\">\r\n                                      (GMT/UTC + 00:00) St. Helena\r\n                                    </option>\r\n                                    <option value=\"Atlantic/Stanley\">\r\n                                      (GMT/UTC - 03:00) Stanley\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Australia\">\r\n                                    <option value=\"Australia/Adelaide\">\r\n                                      (GMT/UTC + 10:30) Adelaide\r\n                                    </option>\r\n                                    <option value=\"Australia/Brisbane\">\r\n                                      (GMT/UTC + 10:00) Brisbane\r\n                                    </option>\r\n                                    <option value=\"Australia/Broken_Hill\">\r\n                                      (GMT/UTC + 10:30) Broken Hill\r\n                                    </option>\r\n                                    <option value=\"Australia/Currie\">\r\n                                      (GMT/UTC + 11:00) Currie\r\n                                    </option>\r\n                                    <option value=\"Australia/Darwin\">\r\n                                      (GMT/UTC + 09:30) Darwin\r\n                                    </option>\r\n                                    <option value=\"Australia/Eucla\">\r\n                                      (GMT/UTC + 08:45) Eucla\r\n                                    </option>\r\n                                    <option value=\"Australia/Hobart\">\r\n                                      (GMT/UTC + 11:00) Hobart\r\n                                    </option>\r\n                                    <option value=\"Australia/Lindeman\">\r\n                                      (GMT/UTC + 10:00) Lindeman\r\n                                    </option>\r\n                                    <option value=\"Australia/Lord_Howe\">\r\n                                      (GMT/UTC + 11:00) Lord Howe\r\n                                    </option>\r\n                                    <option value=\"Australia/Melbourne\">\r\n                                      (GMT/UTC + 11:00) Melbourne\r\n                                    </option>\r\n                                    <option value=\"Australia/Perth\">\r\n                                      (GMT/UTC + 08:00) Perth\r\n                                    </option>\r\n                                    <option value=\"Australia/Sydney\">\r\n                                      (GMT/UTC + 11:00) Sydney\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Europe\">\r\n                                    <option value=\"Europe/Amsterdam\">\r\n                                      (GMT/UTC + 01:00) Amsterdam\r\n                                    </option>\r\n                                    <option value=\"Europe/Andorra\">\r\n                                      (GMT/UTC + 01:00) Andorra\r\n                                    </option>\r\n                                    <option value=\"Europe/Astrakhan\">\r\n                                      (GMT/UTC + 04:00) Astrakhan\r\n                                    </option>\r\n                                    <option value=\"Europe/Athens\">\r\n                                      (GMT/UTC + 02:00) Athens\r\n                                    </option>\r\n                                    <option value=\"Europe/Belgrade\">\r\n                                      (GMT/UTC + 01:00) Belgrade\r\n                                    </option>\r\n                                    <option value=\"Europe/Berlin\">\r\n                                      (GMT/UTC + 01:00) Berlin\r\n                                    </option>\r\n                                    <option value=\"Europe/Bratislava\">\r\n                                      (GMT/UTC + 01:00) Bratislava\r\n                                    </option>\r\n                                    <option value=\"Europe/Brussels\">\r\n                                      (GMT/UTC + 01:00) Brussels\r\n                                    </option>\r\n                                    <option value=\"Europe/Bucharest\">\r\n                                      (GMT/UTC + 02:00) Bucharest\r\n                                    </option>\r\n                                    <option value=\"Europe/Budapest\">\r\n                                      (GMT/UTC + 01:00) Budapest\r\n                                    </option>\r\n                                    <option value=\"Europe/Busingen\">\r\n                                      (GMT/UTC + 01:00) Busingen\r\n                                    </option>\r\n                                    <option value=\"Europe/Chisinau\">\r\n                                      (GMT/UTC + 02:00) Chisinau\r\n                                    </option>\r\n                                    <option value=\"Europe/Copenhagen\">\r\n                                      (GMT/UTC + 01:00) Copenhagen\r\n                                    </option>\r\n                                    <option value=\"Europe/Dublin\">\r\n                                      (GMT/UTC + 00:00) Dublin\r\n                                    </option>\r\n                                    <option value=\"Europe/Gibraltar\">\r\n                                      (GMT/UTC + 01:00) Gibraltar\r\n                                    </option>\r\n                                    <option value=\"Europe/Guernsey\">\r\n                                      (GMT/UTC + 00:00) Guernsey\r\n                                    </option>\r\n                                    <option value=\"Europe/Helsinki\">\r\n                                      (GMT/UTC + 02:00) Helsinki\r\n                                    </option>\r\n                                    <option value=\"Europe/Isle_of_Man\">\r\n                                      (GMT/UTC + 00:00) Isle of Man\r\n                                    </option>\r\n                                    <option value=\"Europe/Istanbul\">\r\n                                      (GMT/UTC + 02:00) Istanbul\r\n                                    </option>\r\n                                    <option value=\"Europe/Jersey\">\r\n                                      (GMT/UTC + 00:00) Jersey\r\n                                    </option>\r\n                                    <option value=\"Europe/Kaliningrad\">\r\n                                      (GMT/UTC + 02:00) Kaliningrad\r\n                                    </option>\r\n                                    <option value=\"Europe/Kiev\">\r\n                                      (GMT/UTC + 02:00) Kiev\r\n                                    </option>\r\n                                    <option value=\"Europe/Lisbon\">\r\n                                      (GMT/UTC + 00:00) Lisbon\r\n                                    </option>\r\n                                    <option value=\"Europe/Ljubljana\">\r\n                                      (GMT/UTC + 01:00) Ljubljana\r\n                                    </option>\r\n                                    <option value=\"Europe/London\">\r\n                                      (GMT/UTC + 00:00) London\r\n                                    </option>\r\n                                    <option value=\"Europe/Luxembourg\">\r\n                                      (GMT/UTC + 01:00) Luxembourg\r\n                                    </option>\r\n                                    <option value=\"Europe/Madrid\">\r\n                                      (GMT/UTC + 01:00) Madrid\r\n                                    </option>\r\n                                    <option value=\"Europe/Malta\">\r\n                                      (GMT/UTC + 01:00) Malta\r\n                                    </option>\r\n                                    <option value=\"Europe/Mariehamn\">\r\n                                      (GMT/UTC + 02:00) Mariehamn\r\n                                    </option>\r\n                                    <option value=\"Europe/Minsk\">\r\n                                      (GMT/UTC + 03:00) Minsk\r\n                                    </option>\r\n                                    <option value=\"Europe/Monaco\">\r\n                                      (GMT/UTC + 01:00) Monaco\r\n                                    </option>\r\n                                    <option value=\"Europe/Moscow\">\r\n                                      (GMT/UTC + 03:00) Moscow\r\n                                    </option>\r\n                                    <option value=\"Europe/Oslo\">\r\n                                      (GMT/UTC + 01:00) Oslo\r\n                                    </option>\r\n                                    <option value=\"Europe/Paris\">\r\n                                      (GMT/UTC + 01:00) Paris\r\n                                    </option>\r\n                                    <option value=\"Europe/Podgorica\">\r\n                                      (GMT/UTC + 01:00) Podgorica\r\n                                    </option>\r\n                                    <option value=\"Europe/Prague\">\r\n                                      (GMT/UTC + 01:00) Prague\r\n                                    </option>\r\n                                    <option value=\"Europe/Riga\">\r\n                                      (GMT/UTC + 02:00) Riga\r\n                                    </option>\r\n                                    <option value=\"Europe/Rome\">\r\n                                      (GMT/UTC + 01:00) Rome\r\n                                    </option>\r\n                                    <option value=\"Europe/Samara\">\r\n                                      (GMT/UTC + 04:00) Samara\r\n                                    </option>\r\n                                    <option value=\"Europe/San_Marino\">\r\n                                      (GMT/UTC + 01:00) San Marino\r\n                                    </option>\r\n                                    <option value=\"Europe/Sarajevo\">\r\n                                      (GMT/UTC + 01:00) Sarajevo\r\n                                    </option>\r\n                                    <option value=\"Europe/Simferopol\">\r\n                                      (GMT/UTC + 03:00) Simferopol\r\n                                    </option>\r\n                                    <option value=\"Europe/Skopje\">\r\n                                      (GMT/UTC + 01:00) Skopje\r\n                                    </option>\r\n                                    <option value=\"Europe/Sofia\">\r\n                                      (GMT/UTC + 02:00) Sofia\r\n                                    </option>\r\n                                    <option value=\"Europe/Stockholm\">\r\n                                      (GMT/UTC + 01:00) Stockholm\r\n                                    </option>\r\n                                    <option value=\"Europe/Tallinn\">\r\n                                      (GMT/UTC + 02:00) Tallinn\r\n                                    </option>\r\n                                    <option value=\"Europe/Tirane\">\r\n                                      (GMT/UTC + 01:00) Tirane\r\n                                    </option>\r\n                                    <option value=\"Europe/Ulyanovsk\">\r\n                                      (GMT/UTC + 04:00) Ulyanovsk\r\n                                    </option>\r\n                                    <option value=\"Europe/Uzhgorod\">\r\n                                      (GMT/UTC + 02:00) Uzhgorod\r\n                                    </option>\r\n                                    <option value=\"Europe/Vaduz\">\r\n                                      (GMT/UTC + 01:00) Vaduz\r\n                                    </option>\r\n                                    <option value=\"Europe/Vatican\">\r\n                                      (GMT/UTC + 01:00) Vatican\r\n                                    </option>\r\n                                    <option value=\"Europe/Vienna\">\r\n                                      (GMT/UTC + 01:00) Vienna\r\n                                    </option>\r\n                                    <option value=\"Europe/Vilnius\">\r\n                                      (GMT/UTC + 02:00) Vilnius\r\n                                    </option>\r\n                                    <option value=\"Europe/Volgograd\">\r\n                                      (GMT/UTC + 03:00) Volgograd\r\n                                    </option>\r\n                                    <option value=\"Europe/Warsaw\">\r\n                                      (GMT/UTC + 01:00) Warsaw\r\n                                    </option>\r\n                                    <option value=\"Europe/Zagreb\">\r\n                                      (GMT/UTC + 01:00) Zagreb\r\n                                    </option>\r\n                                    <option value=\"Europe/Zaporozhye\">\r\n                                      (GMT/UTC + 02:00) Zaporozhye\r\n                                    </option>\r\n                                    <option value=\"Europe/Zurich\">\r\n                                      (GMT/UTC + 01:00) Zurich\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Indian\">\r\n                                    <option value=\"Indian/Antananarivo\">\r\n                                      (GMT/UTC + 03:00) Antananarivo\r\n                                    </option>\r\n                                    <option value=\"Indian/Chagos\">\r\n                                      (GMT/UTC + 06:00) Chagos\r\n                                    </option>\r\n                                    <option value=\"Indian/Christmas\">\r\n                                      (GMT/UTC + 07:00) Christmas\r\n                                    </option>\r\n                                    <option value=\"Indian/Cocos\">\r\n                                      (GMT/UTC + 06:30) Cocos\r\n                                    </option>\r\n                                    <option value=\"Indian/Comoro\">\r\n                                      (GMT/UTC + 03:00) Comoro\r\n                                    </option>\r\n                                    <option value=\"Indian/Kerguelen\">\r\n                                      (GMT/UTC + 05:00) Kerguelen\r\n                                    </option>\r\n                                    <option value=\"Indian/Mahe\">\r\n                                      (GMT/UTC + 04:00) Mahe\r\n                                    </option>\r\n                                    <option value=\"Indian/Maldives\">\r\n                                      (GMT/UTC + 05:00) Maldives\r\n                                    </option>\r\n                                    <option value=\"Indian/Mauritius\">\r\n                                      (GMT/UTC + 04:00) Mauritius\r\n                                    </option>\r\n                                    <option value=\"Indian/Mayotte\">\r\n                                      (GMT/UTC + 03:00) Mayotte\r\n                                    </option>\r\n                                    <option value=\"Indian/Reunion\">\r\n                                      (GMT/UTC + 04:00) Reunion\r\n                                    </option>\r\n                                  </optgroup>\r\n                                  <optgroup label=\"Pacific\">\r\n                                    <option value=\"Pacific/Apia\">\r\n                                      (GMT/UTC + 14:00) Apia\r\n                                    </option>\r\n                                    <option value=\"Pacific/Auckland\">\r\n                                      (GMT/UTC + 13:00) Auckland\r\n                                    </option>\r\n                                    <option value=\"Pacific/Bougainville\">\r\n                                      (GMT/UTC + 11:00) Bougainville\r\n                                    </option>\r\n                                    <option value=\"Pacific/Chatham\">\r\n                                      (GMT/UTC + 13:45) Chatham\r\n                                    </option>\r\n                                    <option value=\"Pacific/Chuuk\">\r\n                                      (GMT/UTC + 10:00) Chuuk\r\n                                    </option>\r\n                                    <option value=\"Pacific/Easter\">\r\n                                      (GMT/UTC - 05:00) Easter\r\n                                    </option>\r\n                                    <option value=\"Pacific/Efate\">\r\n                                      (GMT/UTC + 11:00) Efate\r\n                                    </option>\r\n                                    <option value=\"Pacific/Enderbury\">\r\n                                      (GMT/UTC + 13:00) Enderbury\r\n                                    </option>\r\n                                    <option value=\"Pacific/Fakaofo\">\r\n                                      (GMT/UTC + 13:00) Fakaofo\r\n                                    </option>\r\n                                    <option value=\"Pacific/Fiji\">\r\n                                      (GMT/UTC + 12:00) Fiji\r\n                                    </option>\r\n                                    <option value=\"Pacific/Funafuti\">\r\n                                      (GMT/UTC + 12:00) Funafuti\r\n                                    </option>\r\n                                    <option value=\"Pacific/Galapagos\">\r\n                                      (GMT/UTC - 06:00) Galapagos\r\n                                    </option>\r\n                                    <option value=\"Pacific/Gambier\">\r\n                                      (GMT/UTC - 09:00) Gambier\r\n                                    </option>\r\n                                    <option value=\"Pacific/Guadalcanal\">\r\n                                      (GMT/UTC + 11:00) Guadalcanal\r\n                                    </option>\r\n                                    <option value=\"Pacific/Guam\">\r\n                                      (GMT/UTC + 10:00) Guam\r\n                                    </option>\r\n                                    <option value=\"Pacific/Honolulu\">\r\n                                      (GMT/UTC - 10:00) Honolulu\r\n                                    </option>\r\n                                    <option value=\"Pacific/Johnston\">\r\n                                      (GMT/UTC - 10:00) Johnston\r\n                                    </option>\r\n                                    <option value=\"Pacific/Kiritimati\">\r\n                                      (GMT/UTC + 14:00) Kiritimati\r\n                                    </option>\r\n                                    <option value=\"Pacific/Kosrae\">\r\n                                      (GMT/UTC + 11:00) Kosrae\r\n                                    </option>\r\n                                    <option value=\"Pacific/Kwajalein\">\r\n                                      (GMT/UTC + 12:00) Kwajalein\r\n                                    </option>\r\n                                    <option value=\"Pacific/Majuro\">\r\n                                      (GMT/UTC + 12:00) Majuro\r\n                                    </option>\r\n                                    <option value=\"Pacific/Marquesas\">\r\n                                      (GMT/UTC - 09:30) Marquesas\r\n                                    </option>\r\n                                    <option value=\"Pacific/Midway\">\r\n                                      (GMT/UTC - 11:00) Midway\r\n                                    </option>\r\n                                    <option value=\"Pacific/Nauru\">\r\n                                      (GMT/UTC + 12:00) Nauru\r\n                                    </option>\r\n                                    <option value=\"Pacific/Niue\">\r\n                                      (GMT/UTC - 11:00) Niue\r\n                                    </option>\r\n                                    <option value=\"Pacific/Norfolk\">\r\n                                      (GMT/UTC + 11:00) Norfolk\r\n                                    </option>\r\n                                    <option value=\"Pacific/Noumea\">\r\n                                      (GMT/UTC + 11:00) Noumea\r\n                                    </option>\r\n                                    <option value=\"Pacific/Pago_Pago\">\r\n                                      (GMT/UTC - 11:00) Pago Pago\r\n                                    </option>\r\n                                    <option value=\"Pacific/Palau\">\r\n                                      (GMT/UTC + 09:00) Palau\r\n                                    </option>\r\n                                    <option value=\"Pacific/Pitcairn\">\r\n                                      (GMT/UTC - 08:00) Pitcairn\r\n                                    </option>\r\n                                    <option value=\"Pacific/Pohnpei\">\r\n                                      (GMT/UTC + 11:00) Pohnpei\r\n                                    </option>\r\n                                    <option value=\"Pacific/Port_Moresby\">\r\n                                      (GMT/UTC + 10:00) Port Moresby\r\n                                    </option>\r\n                                    <option value=\"Pacific/Rarotonga\">\r\n                                      (GMT/UTC - 10:00) Rarotonga\r\n                                    </option>\r\n                                    <option value=\"Pacific/Saipan\">\r\n                                      (GMT/UTC + 10:00) Saipan\r\n                                    </option>\r\n                                    <option value=\"Pacific/Tahiti\">\r\n                                      (GMT/UTC - 10:00) Tahiti\r\n                                    </option>\r\n                                    <option value=\"Pacific/Tarawa\">\r\n                                      (GMT/UTC + 12:00) Tarawa\r\n                                    </option>\r\n                                    <option value=\"Pacific/Tongatapu\">\r\n                                      (GMT/UTC + 13:00) Tongatapu\r\n                                    </option>\r\n                                    <option value=\"Pacific/Wake\">\r\n                                      (GMT/UTC + 12:00) Wake\r\n                                    </option>\r\n                                    <option value=\"Pacific/Wallis\">\r\n                                      (GMT/UTC + 12:00) Wallis\r\n                                    </option>\r\n                                  </optgroup>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"footerText\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Footer text\"))}\r\n                                  <span className=\"text-danger\">*</span>{\" \"}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <textarea\r\n                                  className=\"form-control sm-text pt-4\"\r\n                                  id=\"footerText\"\r\n                                  name=\"footerText\"\r\n                                  onChange={handleChange}\r\n                                  value={newSettings.footerText}\r\n                                  placeholder=\"e.g. FoodKhan | All rights reserved | 2020\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-4 pb-2\">\r\n                              <div className=\"col-lg-12\">\r\n                                <button\r\n                                  className=\"btn btn-primary px-5\"\r\n                                  type=\"submit\"\r\n                                >\r\n                                  {_t(t(\"Save\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default General;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\n\r\nconst Permissions = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //group\r\n    permissionGroup,\r\n    setPermissionGroup,\r\n    permissionGroupForSearch,\r\n    setPermissionGroupForSearch,\r\n\r\n    //permissions\r\n    permissions,\r\n\r\n    //pagination\r\n    setPaginatedGropus,\r\n    dataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newGroup, setNewGroup] = useState({\r\n    name: null,\r\n    permission_ids: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    selectedPermissions: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedGroups, setSearchedGroups] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {}, []);\r\n\r\n  //set name array hook\r\n  const handleSetNewGroup = (e) => {\r\n    setNewGroup({ ...newGroup, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set permission id array hook\r\n  const handleSetPermissionIds = (permission) => {\r\n    setNewGroup({ ...newGroup, permission_ids: permission });\r\n  };\r\n\r\n  //Save New Group\r\n  const handleSaveNewGroup = (e) => {\r\n    e.preventDefault();\r\n    if (newGroup.permission_ids !== null) {\r\n      setNewGroup({\r\n        ...newGroup,\r\n        uploading: true,\r\n      });\r\n      const groupUrl = BASE_URL + `/settings/new-permission-group`;\r\n      let formData = {\r\n        name: newGroup.name,\r\n        permissionIds: newGroup.permission_ids,\r\n      };\r\n      return axios\r\n        .post(groupUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewGroup({\r\n            name: null,\r\n            permission_ids: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setPermissionGroup(res.data[0]);\r\n          setPermissionGroupForSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"A new group has been created\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewGroup({\r\n            ...newGroup,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.name) {\r\n              error.response.data.errors.name.forEach((item) => {\r\n                if (item === \"A group already exists with this name\") {\r\n                  toast.error(\r\n                    `${_t(t(\"A group already exists with this name\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select permissions\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (id) => {\r\n    let group = permissionGroupForSearch.filter((item) => {\r\n      return item.id === id;\r\n    });\r\n    let tempArray = [];\r\n    group[0].permission_array_id.map((item) => {\r\n      permissions.map((permissionListItem) => {\r\n        if (item === permissionListItem.id) {\r\n          tempArray.push(permissionListItem);\r\n        }\r\n      });\r\n    });\r\n    setNewGroup({\r\n      ...newGroup,\r\n      name: group[0].name,\r\n      editSlug: group[0].slug,\r\n      selectedPermissions: tempArray,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update Group\r\n  const handleUpdateGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewGroup({\r\n      ...newGroup,\r\n      uploading: true,\r\n    });\r\n    const groupUrl = BASE_URL + `/settings/update-permission-group`;\r\n    let formData = {\r\n      name: newGroup.name,\r\n      editSlug: newGroup.editSlug,\r\n      permissionIds: newGroup.permission_ids,\r\n    };\r\n    return axios\r\n      .post(groupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewGroup({\r\n          name: null,\r\n          permission_ids: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPermissionGroup(res.data[0]);\r\n        setPermissionGroupForSearch(res.data[1]);\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Permission group has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewGroup({\r\n          ...newGroup,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search groups here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedGroups({ ...searchedGroups, searched: false });\r\n    } else {\r\n      let searchedList = permissionGroupForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedGroups({\r\n        ...searchedGroups,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of group\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteGroup(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete group here\r\n  const handleDeleteGroup = (slug) => {\r\n    setLoading(true);\r\n    //todo:: add superAdmin when it will be SaaS\r\n    if (slug !== \"admin\" || slug !== \"customer\") {\r\n      const groupUrl = BASE_URL + `/settings/delete-permission-group/${slug}`;\r\n      return axios\r\n        .get(groupUrl, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data === \"Please remove this group from users first\") {\r\n            setLoading(false);\r\n            toast.error(\r\n              `${_t(t(\"Please remove this group from users first!\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          } else if (res.data === \"This group can not be deleted\") {\r\n            setLoading(false);\r\n            toast.error(\r\n              `${_t(t(\"Please remove this group from users first!\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          } else {\r\n            setPermissionGroup(res.data[0]);\r\n            setPermissionGroupForSearch(res.data[1]);\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"Group has been deleted successfully\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n      toast.error(`${_t(t(\"This group can not be deleted!\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Permissions\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add group modal */}\r\n      <div className=\"modal fade\" id=\"addGroup\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newGroup.edit\r\n                    ? _t(t(\"Add new permission group\"))\r\n                    : _t(t(\"Update permission group\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newGroup.uploading === false ? (\r\n                <div key=\"fragment-permission-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newGroup.edit ? handleSaveNewGroup : handleUpdateGroup\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Staff\"\r\n                        value={newGroup.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewGroup}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label className=\"form-label mb-0\">\r\n                        {_t(t(\"Select permissions\"))}{\" \"}\r\n                        {newGroup.edit && (\r\n                          <small className=\"text-primary\">\r\n                            {\"( \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Leave empty if you do not want to change permissions\"\r\n                              )\r\n                            )}\r\n                            {\" )\"}\r\n                          </small>\r\n                        )}\r\n                      </label>\r\n                      {newGroup.edit && (\r\n                        <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                          {newGroup.selectedPermissions.map((selectedItem) => {\r\n                            return (\r\n                              <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\">\r\n                                {selectedItem.name}\r\n                              </li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      )}\r\n                      <Select\r\n                        options={permissions}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                        onChange={handleSetPermissionIds}\r\n                        placeholder={_t(t(\"Please select permissions\"))}\r\n                        isMulti\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add group modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newGroup.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedGroups.searched\r\n                                    ? _t(t(\"Permission Group List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={\r\n                                        _t(t(\"Search by name\")) + \"..\"\r\n                                      }\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addGroup\"\r\n                                  onClick={() => {\r\n                                    setNewGroup({\r\n                                      ...newGroup,\r\n                                      permission_ids: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Permissions\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedGroups.searched\r\n                                ? [\r\n                                    permissionGroup && [\r\n                                      permissionGroup.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        permissionGroup.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (permissionGroup.current_page -\r\n                                                      1) *\r\n                                                      permissionGroup.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.permission_array_id !==\r\n                                                  null\r\n                                                    ? item.permission_array_id.map(\r\n                                                        (permissionItem) => {\r\n                                                          let secondMap =\r\n                                                            permissions &&\r\n                                                            permissions.map(\r\n                                                              (\r\n                                                                ItemFromListPermission\r\n                                                              ) => {\r\n                                                                if (\r\n                                                                  ItemFromListPermission.id ===\r\n                                                                  permissionItem\r\n                                                                ) {\r\n                                                                  return (\r\n                                                                    <ul\r\n                                                                      className=\"list-group\"\r\n                                                                      key={\r\n                                                                        permissionItem\r\n                                                                      }\r\n                                                                    >\r\n                                                                      <li className=\"list-group-item bg-success rounded-sm p-1 m-1 mx-3\">\r\n                                                                        {\r\n                                                                          ItemFromListPermission.name\r\n                                                                        }\r\n                                                                      </li>\r\n                                                                    </ul>\r\n                                                                  );\r\n                                                                } else {\r\n                                                                  return true;\r\n                                                                }\r\n                                                              }\r\n                                                            );\r\n                                                          return secondMap;\r\n                                                        }\r\n                                                      )\r\n                                                    : \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {/* todo::add superAdmin here when it will be SaaS */}\r\n                                                  {item.name !== \"Admin\" ? (\r\n                                                    <div className=\"dropdown\">\r\n                                                      <button\r\n                                                        className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                        type=\"button\"\r\n                                                        data-toggle=\"dropdown\"\r\n                                                      >\r\n                                                        <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                      </button>\r\n                                                      <div className=\"dropdown-menu\">\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            setNewGroup({\r\n                                                              ...newGroup,\r\n                                                              permission_ids: null,\r\n                                                            });\r\n                                                            handleSetEdit(\r\n                                                              item.id\r\n                                                            );\r\n                                                          }}\r\n                                                          data-toggle=\"modal\"\r\n                                                          data-target=\"#addGroup\"\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-pencil\"></i>\r\n                                                          </span>\r\n                                                          {_t(t(\"Edit\"))}\r\n                                                        </button>\r\n\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            handleDeleteConfirmation(\r\n                                                              item.slug\r\n                                                            );\r\n                                                          }}\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-trash\"></i>\r\n                                                          </span>\r\n                                                          {_t(t(\"Delete\"))}\r\n                                                        </button>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  ) : (\r\n                                                    _t(\r\n                                                      t(\r\n                                                        \"Edit or Delete is not allowed for\"\r\n                                                      )\r\n                                                    ) +\r\n                                                    [\r\n                                                      \" \" +\r\n                                                        item.name +\r\n                                                        \" \" +\r\n                                                        _t(t(\"group\")),\r\n                                                    ]\r\n                                                  )}\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedGroups && [\r\n                                      searchedGroups.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedGroups.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (permissionGroup.current_page -\r\n                                                      1) *\r\n                                                      permissionGroup.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.permission_array_id !==\r\n                                                  null\r\n                                                    ? item.permission_array_id.map(\r\n                                                        (permissionItem) => {\r\n                                                          let secondMap =\r\n                                                            permissions &&\r\n                                                            permissions.map(\r\n                                                              (\r\n                                                                ItemFromListPermission\r\n                                                              ) => {\r\n                                                                if (\r\n                                                                  ItemFromListPermission.id ===\r\n                                                                  permissionItem\r\n                                                                ) {\r\n                                                                  return (\r\n                                                                    <ul\r\n                                                                      className=\"list-group\"\r\n                                                                      key={\r\n                                                                        permissionItem\r\n                                                                      }\r\n                                                                    >\r\n                                                                      <li className=\"list-group-item bg-success rounded-sm p-1 m-1 mx-3\">\r\n                                                                        {\r\n                                                                          ItemFromListPermission.name\r\n                                                                        }\r\n                                                                      </li>\r\n                                                                    </ul>\r\n                                                                  );\r\n                                                                } else {\r\n                                                                  return true;\r\n                                                                }\r\n                                                              }\r\n                                                            );\r\n                                                          return secondMap;\r\n                                                        }\r\n                                                      )\r\n                                                    : \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {/* todo::add superAdmin here when it will be SaaS */}\r\n                                                  {item.name !== \"Admin\" ? (\r\n                                                    <div className=\"dropdown\">\r\n                                                      <button\r\n                                                        className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                        type=\"button\"\r\n                                                        data-toggle=\"dropdown\"\r\n                                                      >\r\n                                                        <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                      </button>\r\n                                                      <div className=\"dropdown-menu\">\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            setNewGroup({\r\n                                                              ...newGroup,\r\n                                                              permission_ids: null,\r\n                                                            });\r\n                                                            handleSetEdit(\r\n                                                              item.id\r\n                                                            );\r\n                                                          }}\r\n                                                          data-toggle=\"modal\"\r\n                                                          data-target=\"#addGroup\"\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-pencil\"></i>\r\n                                                          </span>\r\n                                                          {_t(t(\"Edit\"))}\r\n                                                        </button>\r\n\r\n                                                        <button\r\n                                                          className=\"dropdown-item sm-text text-capitalize\"\r\n                                                          onClick={() => {\r\n                                                            handleDeleteConfirmation(\r\n                                                              item.slug\r\n                                                            );\r\n                                                          }}\r\n                                                        >\r\n                                                          <span className=\"t-mr-8\">\r\n                                                            <i className=\"fa fa-trash\"></i>\r\n                                                          </span>\r\n                                                          {_t(t(\"Delete\"))}\r\n                                                        </button>\r\n                                                      </div>\r\n                                                    </div>\r\n                                                  ) : (\r\n                                                    _t(\r\n                                                      t(\r\n                                                        \"Edit or Delete is not allowed for\"\r\n                                                      )\r\n                                                    ) +\r\n                                                    [\r\n                                                      \" \" +\r\n                                                        item.name +\r\n                                                        \" \" +\r\n                                                        _t(t(\"group\")),\r\n                                                    ]\r\n                                                  )}\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newGroup.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedGroups.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(permissionGroup, setPaginatedGropus)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(permissionGroup)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedGroups({\r\n                                      ...searchedGroups,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedGroups,\r\n                                    permissionGroupForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Permissions;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { UserContext } from \"../../../../../contexts/User\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst Waiter = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //waiter\r\n    waiterList,\r\n    setWaiterList,\r\n    setPaginatedWaiter,\r\n    waiterForSearch,\r\n    setWaiterForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(UserContext);\r\n\r\n  let {\r\n    //branch\r\n    branchForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new waiter\r\n  let [newWaiter, setNewWaiter] = useState({\r\n    name: \"\",\r\n    phn_no: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    image: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    editImage: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedWaiter, setSearchedWaiter] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewWaiter = (e) => {\r\n    setNewWaiter({ ...newWaiter, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewWaiter({ ...newWaiter, branch });\r\n  };\r\n\r\n  //set image hook\r\n  const handleWaiterImage = (e) => {\r\n    setNewWaiter({\r\n      ...newWaiter,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //Save New waiter\r\n  const handleSaveNewWaiter = (e) => {\r\n    e.preventDefault();\r\n    if (newWaiter.branch !== null) {\r\n      setNewWaiter({\r\n        ...newWaiter,\r\n        uploading: true,\r\n      });\r\n      const waiterUrl = BASE_URL + `/settings/new-waiter`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newWaiter.name);\r\n      formData.append(\"phn_no\", newWaiter.phn_no);\r\n      formData.append(\"branch_id\", newWaiter.branch.id);\r\n      formData.append(\"image\", newWaiter.image);\r\n      return axios\r\n        .post(waiterUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewWaiter({\r\n            name: \"\",\r\n            phn_no: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            image: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            editImage: null,\r\n            uploading: false,\r\n          });\r\n          setWaiterList(res.data[0]);\r\n          setWaiterForSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Waiter has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewWaiter({\r\n            ...newWaiter,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"A waiter exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"A waiter exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            if (error.response.data.errors.image) {\r\n              error.response.data.errors.image.forEach((item) => {\r\n                if (item === \"Please select a valid image file\") {\r\n                  toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  });\r\n                }\r\n                if (item === \"Please select a file less than 5MB\") {\r\n                  toast.error(\r\n                    `${_t(t(\"Please select a file less than 5MB\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let waiter = waiterForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    let selectedOptionForBranch = null;\r\n    if (waiter[0].branch_id) {\r\n      selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n        return branchItem.id === waiter[0].branch_id;\r\n      });\r\n    }\r\n    setNewWaiter({\r\n      ...newWaiter,\r\n      name: waiter[0].name,\r\n      phn_no: waiter[0].phn_no,\r\n      selectedBranch: selectedOptionForBranch[0] || null,\r\n      editSlug: waiter[0].slug,\r\n      editImage: waiter[0].image,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update Group\r\n  const handleUpdateWaiter = (e) => {\r\n    e.preventDefault();\r\n    setNewWaiter({\r\n      ...newWaiter,\r\n      uploading: true,\r\n    });\r\n    const waiterUrl = BASE_URL + `/settings/update-waiter`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newWaiter.name);\r\n    formData.append(\"phn_no\", newWaiter.phn_no);\r\n    if (newWaiter.branch !== null) {\r\n      formData.append(\"branch_id\", newWaiter.branch.id);\r\n    }\r\n    formData.append(\"image\", newWaiter.image);\r\n    formData.append(\"editSlug\", newWaiter.editSlug);\r\n    return axios\r\n      .post(waiterUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewWaiter({\r\n          name: \"\",\r\n          phn_no: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          image: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          editImage: null,\r\n          uploading: false,\r\n        });\r\n        setWaiterList(res.data[0]);\r\n        setWaiterForSearch(res.data[1]);\r\n        setSearchedWaiter({\r\n          ...searchedWaiter,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Waiter has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewWaiter({\r\n          ...newWaiter,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"A waiter exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"A waiter exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n          if (error.response.data.errors.image) {\r\n            error.response.data.errors.image.forEach((item) => {\r\n              if (item === \"Please select a valid image file\") {\r\n                toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n              if (item === \"Please select a file less than 5MB\") {\r\n                toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search waiters here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedWaiter({ ...searchedWaiter, searched: false });\r\n    } else {\r\n      let searchedList = waiterForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemPhnNo = item.phn_no.toLowerCase();\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemPhnNo.includes(searchInput) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedWaiter({\r\n        ...searchedWaiter,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of waiter\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteWaiter(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete waiter here\r\n  const handleDeleteWaiter = (slug) => {\r\n    setLoading(true);\r\n    const waiterUrl = BASE_URL + `/settings/delete-waiter/${slug}`;\r\n    return axios\r\n      .get(waiterUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setWaiterList(res.data[0]);\r\n        setWaiterForSearch(res.data[1]);\r\n        setSearchedWaiter({\r\n          ...searchedWaiter,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Waiter has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Waiters\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addWaiter\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newWaiter.edit\r\n                    ? _t(t(\"Add new waiter\"))\r\n                    : _t(t(\"Update waiter\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newWaiter.uploading === false ? (\r\n                <div key=\"fragment-permission-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newWaiter.edit ? handleSaveNewWaiter : handleUpdateWaiter\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Mr. John\"\r\n                        value={newWaiter.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewWaiter}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newWaiter.phn_no || \"\"}\r\n                        required\r\n                        onChange={handleSetNewWaiter}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label className=\"form-label mb-0\">\r\n                        {_t(t(\"Select a branch\"))}{\" \"}\r\n                        {newWaiter.edit ? (\r\n                          <small className=\"text-primary\">\r\n                            {\"( \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Leave empty if you do not want to change branch\"\r\n                              )\r\n                            )}\r\n                            {\" )\"}\r\n                          </small>\r\n                        ) : (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      {newWaiter.edit && newWaiter.selectedBranch !== null && (\r\n                        <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                          <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                            {newWaiter.selectedBranch.name}\r\n                          </li>\r\n                        </ul>\r\n                      )}\r\n                      <Select\r\n                        options={branchForSearch}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                        onChange={handleSetBranch}\r\n                        placeholder={_t(t(\"Please select a branch\")) + \"..\"}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <div className=\"d-flex align-items-center mb-1\">\r\n                        <label htmlFor=\"image\" className=\"form-label mb-0 mr-3\">\r\n                          {_t(t(\"Image\"))}{\" \"}\r\n                          <small className=\"text-secondary\">\r\n                            ({_t(t(\"300 x 300 Preferable\"))})\r\n                          </small>\r\n                        </label>\r\n                        {newWaiter.edit && (\r\n                          <div\r\n                            className=\"fk-language__flag\"\r\n                            style={{\r\n                              backgroundImage: `url(${newWaiter.editImage})`,\r\n                            }}\r\n                          ></div>\r\n                        )}\r\n                      </div>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        onChange={handleWaiterImage}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newWaiter.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newWaiter.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newWaiter.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedWaiter.searched\r\n                                    ? _t(t(\"Waiter List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addWaiter\"\r\n                                  onClick={() => {\r\n                                    setNewWaiter({\r\n                                      ...newWaiter,\r\n                                      branch: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Image\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Phn no\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Branch\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedWaiter.searched\r\n                                ? [\r\n                                    waiterList && [\r\n                                      waiterList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        waiterList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (waiterList.current_page -\r\n                                                    1) *\r\n                                                    waiterList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text\">\r\n                                                <div\r\n                                                  className=\"table-img-large mx-auto\"\r\n                                                  style={{\r\n                                                    backgroundImage: `url(${\r\n                                                      item.image !== null\r\n                                                        ? item.image\r\n                                                        : \"/khadyo/assets/img/waiter.jpg\"\r\n                                                    })`,\r\n                                                  }}\r\n                                                ></div>\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <a\r\n                                                  href={`tel:${item.phn_no}`}\r\n                                                  rel=\"noopener noreferrer\"\r\n                                                >\r\n                                                  {item.phn_no}\r\n                                                </a>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewWaiter({\r\n                                                          ...newWaiter,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addWaiter\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedWaiter && [\r\n                                      searchedWaiter.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedWaiter.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (waiterList.current_page -\r\n                                                      1) *\r\n                                                      waiterList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text\">\r\n                                                  <div\r\n                                                    className=\"table-img-large mx-auto\"\r\n                                                    style={{\r\n                                                      backgroundImage: `url(${\r\n                                                        item.image !== null\r\n                                                          ? item.image\r\n                                                          : \"/khadyo/assets/img/waiter.jpg\"\r\n                                                      })`,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setNewWaiter({\r\n                                                            ...newWaiter,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addWaiter\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newWaiter.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedWaiter.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(waiterList, setPaginatedWaiter)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(waiterList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedWaiter({\r\n                                      ...searchedWaiter,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedWaiter,\r\n                                    waiterForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Waiter;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { UserContext } from \"../../../../../contexts/User\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst CustomerCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //customer\r\n    getCustomer,\r\n    customerList,\r\n    setCustomerList,\r\n    setPaginatedCustomer,\r\n    customerForSearch,\r\n    setCustomerForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(UserContext);\r\n\r\n  let {\r\n    //branch\r\n    branchForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new customer\r\n  let [newCustomer, setNewCustomer] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phn_no: \"\",\r\n    address: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedCustomer, setSearchedCustomer] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewCustomer = (e) => {\r\n    setNewCustomer({ ...newCustomer, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewCustomer({ ...newCustomer, branch });\r\n  };\r\n\r\n  //Save New customer\r\n  const handleSaveNewCustomer = (e) => {\r\n    e.preventDefault();\r\n    if (newCustomer.branch !== null) {\r\n      setNewCustomer({\r\n        ...newCustomer,\r\n        uploading: true,\r\n      });\r\n      const customerUrl = BASE_URL + `/settings/new-customer`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newCustomer.name);\r\n      formData.append(\"phn_no\", newCustomer.phn_no);\r\n      formData.append(\"email\", newCustomer.email);\r\n      formData.append(\"address\", newCustomer.address);\r\n      formData.append(\"branch_id\", newCustomer.branch.id);\r\n      return axios\r\n        .post(customerUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewCustomer({\r\n            name: \"\",\r\n            email: \"\",\r\n            phn_no: \"\",\r\n            address: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setCustomerList(res.data[0]);\r\n          setCustomerForSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Customer has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewCustomer({\r\n            ...newCustomer,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"A customer exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let customer = customerForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    let selectedOptionForBranch = null;\r\n    if (customer[0].branch_id) {\r\n      selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n        return branchItem.id === customer[0].branch_id;\r\n      });\r\n    }\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      name: customer[0].name,\r\n      email: customer[0].email,\r\n      phn_no: customer[0].phn_no,\r\n      address: customer[0].address,\r\n      selectedBranch: selectedOptionForBranch[0] || null,\r\n      editSlug: customer[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update customer\r\n  const handleUpdateCustomer = (e) => {\r\n    e.preventDefault();\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      uploading: true,\r\n    });\r\n    const customerUrl = BASE_URL + `/settings/update-customer`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newCustomer.name);\r\n    formData.append(\"phn_no\", newCustomer.phn_no);\r\n    formData.append(\"email\", newCustomer.email);\r\n    formData.append(\"address\", newCustomer.address);\r\n    if (newCustomer.branch !== null) {\r\n      formData.append(\"branch_id\", newCustomer.branch.id);\r\n    }\r\n    formData.append(\"editSlug\", newCustomer.editSlug);\r\n    return axios\r\n      .post(customerUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewCustomer({\r\n          name: \"\",\r\n          email: \"\",\r\n          phn_no: \"\",\r\n          address: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewCustomer({\r\n          ...newCustomer,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"A customer exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search customers here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedCustomer({ ...searchedCustomer, searched: false });\r\n    } else {\r\n      let searchedList = customerForSearch.filter((item) => {\r\n        //name\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n\r\n        //email\r\n        let lowerCaseItemEmail =\r\n          item.email !== null && item.email.toLowerCase();\r\n\r\n        //phn no\r\n        let lowerCaseItemPhnNo =\r\n          item.phn_no !== null && item.phn_no.toLowerCase();\r\n\r\n        //address\r\n        let lowerCaseItemAddress =\r\n          item.address !== null && item.address.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemEmail && lowerCaseItemEmail.includes(searchInput)) ||\r\n          (lowerCaseItemPhnNo && lowerCaseItemPhnNo.includes(searchInput)) ||\r\n          (lowerCaseItemAddress &&\r\n            lowerCaseItemAddress.includes(searchInput)) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedCustomer({\r\n        ...searchedCustomer,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of waiter\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteCustomer(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete customer here\r\n  const handleDeleteCustomer = (slug) => {\r\n    setLoading(true);\r\n    const customerUrl = BASE_URL + `/settings/delete-customer/${slug}`;\r\n    return axios\r\n      .get(customerUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Customers\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addCustomer\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newCustomer.edit\r\n                    ? _t(t(\"Add new customer\"))\r\n                    : _t(t(\"Update customer\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newCustomer.uploading === false ? (\r\n                <div key=\"fragment-customer-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newCustomer.edit\r\n                        ? handleSaveNewCustomer\r\n                        : handleUpdateCustomer\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Mr. John\"\r\n                        value={newCustomer.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label className=\"form-label mb-0\">\r\n                        {_t(t(\"Select a branch\"))}{\" \"}\r\n                        {newCustomer.edit ? (\r\n                          <small className=\"text-primary\">\r\n                            {\"( \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Leave empty if you do not want to change branch\"\r\n                              )\r\n                            )}\r\n                            {\" )\"}\r\n                          </small>\r\n                        ) : (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      {newCustomer.edit && newCustomer.selectedBranch !== null && (\r\n                        <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                          <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                            {newCustomer.selectedBranch.name}\r\n                          </li>\r\n                        </ul>\r\n                      )}\r\n                      <Select\r\n                        options={branchForSearch}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                        onChange={handleSetBranch}\r\n                        placeholder={_t(t(\"Please select a branch\"))}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"email\" className=\"form-label\">\r\n                        {_t(t(\"Email\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"e.g. customer@example.com\"\r\n                        value={newCustomer.email || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newCustomer.phn_no || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"address\" className=\"form-label\">\r\n                        {_t(t(\"Address\"))}\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        placeholder=\"Type customer address\"\r\n                        value={newCustomer.address || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newCustomer.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newCustomer.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newCustomer.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedCustomer.searched\r\n                                    ? _t(t(\"Customer List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search customer */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add customer modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addCustomer\"\r\n                                  onClick={() => {\r\n                                    setNewCustomer({\r\n                                      ...newCustomer,\r\n                                      branch: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"email\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Phn no\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Address\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Branch\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedCustomer.searched\r\n                                ? [\r\n                                    customerList && [\r\n                                      customerList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        customerList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (customerList.current_page -\r\n                                                    1) *\r\n                                                    customerList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.email || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.phn_no ? (\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                ) : (\r\n                                                  \"-\"\r\n                                                )}\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.address || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewCustomer({\r\n                                                          ...newCustomer,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addCustomer\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedCustomer && [\r\n                                      searchedCustomer.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedCustomer.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (customerList.current_page -\r\n                                                      1) *\r\n                                                      customerList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.email || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.phn_no ? (\r\n                                                    <a\r\n                                                      href={`tel:${item.phn_no}`}\r\n                                                      rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                      {item.phn_no}\r\n                                                    </a>\r\n                                                  ) : (\r\n                                                    \"-\"\r\n                                                  )}\r\n                                                </td>\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.address || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setNewCustomer({\r\n                                                            ...newCustomer,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addCustomer\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newCustomer.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedCustomer.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(customerList, setPaginatedCustomer)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(customerList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedCustomer({\r\n                                      ...searchedCustomer,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedCustomer,\r\n                                    customerForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { UserContext } from \"../../../../../contexts/User\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst AdminStaffCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //permission group\r\n    permissionGroupForSearch,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //adminStaff\r\n    getAdminStaff,\r\n    adminStaffList,\r\n    setAdminStaffList,\r\n    setPaginatedAdminStaff,\r\n    adminStaffForSearch,\r\n    setAdminStaffListforSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(UserContext);\r\n\r\n  let {\r\n    //branch\r\n    branchForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new adminStaff\r\n  let [newAdminStaff, setAdminStaff] = useState({\r\n    user_type: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phn_no: \"\",\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    selectPermissionGroup: null,\r\n    selectedPermissionGroup: null,\r\n    image: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    editImage: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedAdminStaff, setSearchedAdminStaff] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewAdminStaff = (e) => {\r\n    setAdminStaff({ ...newAdminStaff, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setAdminStaff({ ...newAdminStaff, branch });\r\n  };\r\n\r\n  //set permission hook\r\n  const handleSetPermissionGroup = (selectPermissionGroup) => {\r\n    setAdminStaff({ ...newAdminStaff, selectPermissionGroup });\r\n  };\r\n\r\n  //set image hook\r\n  const handleAdminStaffImage = (e) => {\r\n    setAdminStaff({\r\n      ...newAdminStaff,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //Save New adminStaff\r\n  const handleSaveNewAdminStaff = (e) => {\r\n    e.preventDefault();\r\n    //url and form data\r\n    const adminStaffUrl = BASE_URL + `/settings/new-admin-staff`;\r\n    let formData = new FormData();\r\n    formData.append(\"user_type\", newAdminStaff.user_type);\r\n    formData.append(\"name\", newAdminStaff.name);\r\n    formData.append(\"email\", newAdminStaff.email);\r\n    formData.append(\"phn_no\", newAdminStaff.phn_no);\r\n    formData.append(\"password\", newAdminStaff.password);\r\n    formData.append(\r\n      \"password_confirmation\",\r\n      newAdminStaff.password_confirmation\r\n    );\r\n    if (newAdminStaff.selectPermissionGroup !== null) {\r\n      formData.append(\r\n        \"permission_group_id\",\r\n        newAdminStaff.selectPermissionGroup.id\r\n      );\r\n    }\r\n    if (newAdminStaff.user_type !== \"admin\" && newAdminStaff.branch !== null) {\r\n      formData.append(\"branch_id\", newAdminStaff.branch.id);\r\n    }\r\n    formData.append(\"image\", newAdminStaff.image);\r\n\r\n    //check user type\r\n    if (newAdminStaff.user_type === \"staff\") {\r\n      //check if group || branch null\r\n      if (\r\n        newAdminStaff.branch !== null &&\r\n        newAdminStaff.selectPermissionGroup !== null\r\n      ) {\r\n        setAdminStaff({\r\n          ...newAdminStaff,\r\n          uploading: true,\r\n        });\r\n\r\n        return axios\r\n          .post(adminStaffUrl, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setAdminStaff({\r\n              user_type: \"\",\r\n              name: \"\",\r\n              email: \"\",\r\n              phn_no: \"\",\r\n              password: \"\",\r\n              password_confirmation: \"\",\r\n              branch: null,\r\n              selectPermissionGroup: null,\r\n              selectedBranch: null,\r\n              selectedPermissionGroup: null,\r\n              image: null,\r\n              edit: false,\r\n              editSlug: null,\r\n              editImage: null,\r\n              uploading: false,\r\n            });\r\n            setAdminStaffList(res.data[0]);\r\n            setAdminStaffListforSearch(res.data[1]);\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"User has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setAdminStaff({\r\n              ...newAdminStaff,\r\n              branch: null,\r\n              selectPermissionGroup: null,\r\n              uploading: false,\r\n            });\r\n            if (error && error.response.data.errors) {\r\n              if (error.response.data.errors.phn_no) {\r\n                error.response.data.errors.phn_no.forEach((item) => {\r\n                  if (item === \"An user exists with this phone number\") {\r\n                    toast.error(\r\n                      `${_t(t(\"An user exists with this phone number\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              if (error.response.data.errors.email) {\r\n                error.response.data.errors.email.forEach((item) => {\r\n                  if (item === \"An user exists with this email\") {\r\n                    toast.error(`${_t(t(\"An user exists with this email\"))}`, {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n              if (error.response.data.errors.password) {\r\n                error.response.data.errors.password.forEach((item) => {\r\n                  if (item === \"The password confirmation does not match.\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Password confirmation does not match\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                  if (item === \"The password must be at least 6 characters.\") {\r\n                    toast.error(\r\n                      `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              if (error.response.data.errors.image) {\r\n                error.response.data.errors.image.forEach((item) => {\r\n                  if (item === \"Please select a valid image file\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Please select a valid image file\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                  if (item === \"Please select a file less than 5MB\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Please select a file less than 5MB\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        if (newAdminStaff.branch === null) {\r\n          toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n        if (newAdminStaff.selectPermissionGroup === null) {\r\n          toast.error(`${_t(t(\"Please select a permission group\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      //check if group null\r\n      if (newAdminStaff.selectPermissionGroup !== null) {\r\n        setAdminStaff({\r\n          ...newAdminStaff,\r\n          uploading: true,\r\n        });\r\n        return axios\r\n          .post(adminStaffUrl, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setAdminStaff({\r\n              user_type: \"\",\r\n              name: \"\",\r\n              email: \"\",\r\n              phn_no: \"\",\r\n              password: \"\",\r\n              password_confirmation: \"\",\r\n              branch: null,\r\n              selectPermissionGroup: null,\r\n              selectedBranch: null,\r\n              selectedPermissionGroup: null,\r\n              image: null,\r\n              edit: false,\r\n              editSlug: null,\r\n              editImage: null,\r\n              uploading: false,\r\n            });\r\n            setAdminStaffList(res.data[0]);\r\n            setAdminStaffListforSearch(res.data[1]);\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"User has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setAdminStaff({\r\n              ...newAdminStaff,\r\n              branch: null,\r\n              selectPermissionGroup: null,\r\n              uploading: false,\r\n            });\r\n            if (error && error.response.data.errors) {\r\n              if (error.response.data.errors.phn_no) {\r\n                error.response.data.errors.phn_no.forEach((item) => {\r\n                  if (item === \"An user exists with this phone number\") {\r\n                    toast.error(\r\n                      `${_t(t(\"An user exists with this phone number\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              if (error.response.data.errors.email) {\r\n                error.response.data.errors.email.forEach((item) => {\r\n                  if (item === \"An user exists with this email\") {\r\n                    toast.error(`${_t(t(\"An user exists with this email\"))}`, {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n\r\n              if (error.response.data.errors.password) {\r\n                error.response.data.errors.password.forEach((item) => {\r\n                  if (item === \"The password confirmation does not match.\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Password confirmation does not match\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                  if (item === \"The password must be at least 6 characters.\") {\r\n                    toast.error(\r\n                      `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              if (error.response.data.errors.image) {\r\n                error.response.data.errors.image.forEach((item) => {\r\n                  if (item === \"Please select a valid image file\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Please select a valid image file\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                  if (item === \"Please select a file less than 5MB\") {\r\n                    toast.error(\r\n                      `${_t(t(\"Please select a file less than 5MB\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(`${_t(t(\"Please select a permission group\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let adminStaff = adminStaffForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n\r\n    let selectedOptionForPermission = null;\r\n    if (adminStaff[0].permission_group_id) {\r\n      selectedOptionForPermission = permissionGroupForSearch.filter(\r\n        (groupItem) => {\r\n          return groupItem.id === adminStaff[0].permission_group_id;\r\n        }\r\n      );\r\n    }\r\n\r\n    if (adminStaff[0].user_type === \"staff\") {\r\n      let selectedOptionForBranch = null;\r\n      if (adminStaff[0].branch_id) {\r\n        selectedOptionForBranch =\r\n          branchForSearch !== null &&\r\n          branchForSearch.filter((branchItem) => {\r\n            return branchItem.id === adminStaff[0].branch_id;\r\n          });\r\n      }\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        user_type: adminStaff[0].user_type,\r\n        name: adminStaff[0].name,\r\n        email: adminStaff[0].email,\r\n        phn_no: adminStaff[0].phn_no,\r\n        selectedBranch: selectedOptionForBranch[0] || null,\r\n        selectedPermissionGroup: selectedOptionForPermission[0] || null,\r\n        editSlug: adminStaff[0].slug,\r\n        editImage: adminStaff[0].image,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        user_type: adminStaff[0].user_type,\r\n        name: adminStaff[0].name,\r\n        email: adminStaff[0].email,\r\n        phn_no: adminStaff[0].phn_no,\r\n        selectedPermissionGroup: selectedOptionForPermission[0] || null,\r\n        editSlug: adminStaff[0].slug,\r\n        editImage: adminStaff[0].image,\r\n        edit: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //update adminStaff\r\n  const handleUpdateAdminStaff = (e) => {\r\n    e.preventDefault();\r\n    //url and form data\r\n    const adminStaffUrl = BASE_URL + `/settings/update-admin-staff`;\r\n    let formData = new FormData();\r\n    formData.append(\"user_type\", newAdminStaff.user_type);\r\n    formData.append(\"name\", newAdminStaff.name);\r\n    formData.append(\"email\", newAdminStaff.email);\r\n    formData.append(\"phn_no\", newAdminStaff.phn_no);\r\n    formData.append(\"password\", newAdminStaff.password);\r\n    formData.append(\r\n      \"password_confirmation\",\r\n      newAdminStaff.password_confirmation\r\n    );\r\n    if (newAdminStaff.selectPermissionGroup !== null) {\r\n      formData.append(\r\n        \"permission_group_id\",\r\n        newAdminStaff.selectPermissionGroup.id\r\n      );\r\n    }\r\n    if (newAdminStaff.user_type !== \"admin\" && newAdminStaff.branch !== null) {\r\n      formData.append(\"branch_id\", newAdminStaff.branch.id);\r\n    }\r\n    formData.append(\"image\", newAdminStaff.image);\r\n    formData.append(\"editSlug\", newAdminStaff.editSlug);\r\n\r\n    //check user type\r\n    if (newAdminStaff.user_type === \"staff\") {\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        uploading: true,\r\n      });\r\n\r\n      return axios\r\n        .post(adminStaffUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setAdminStaff({\r\n            user_type: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            phn_no: \"\",\r\n            password: \"\",\r\n            password_confirmation: \"\",\r\n            branch: null,\r\n            selectPermissionGroup: null,\r\n            selectedBranch: null,\r\n            selectedPermissionGroup: null,\r\n            image: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            editImage: null,\r\n            uploading: false,\r\n          });\r\n          setAdminStaffList(res.data[0]);\r\n          setAdminStaffListforSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"User has been updated\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setAdminStaff({\r\n            ...newAdminStaff,\r\n            branch: null,\r\n            selectPermissionGroup: null,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"An user exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"An user exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n\r\n            if (error.response.data.errors.password) {\r\n              error.response.data.errors.password.forEach((item) => {\r\n                if (item === \"The password confirmation does not match.\") {\r\n                  toast.error(\r\n                    `${_t(t(\"Password confirmation does not match\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n                if (item === \"The password must be at least 6 characters.\") {\r\n                  toast.error(\r\n                    `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n\r\n            if (error.response.data.errors.image) {\r\n              error.response.data.errors.image.forEach((item) => {\r\n                if (item === \"Please select a valid image file\") {\r\n                  toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  });\r\n                }\r\n                if (item === \"Please select a file less than 5MB\") {\r\n                  toast.error(\r\n                    `${_t(t(\"Please select a file less than 5MB\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        uploading: true,\r\n      });\r\n      return axios\r\n        .post(adminStaffUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setAdminStaff({\r\n            user_type: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            phn_no: \"\",\r\n            password: \"\",\r\n            password_confirmation: \"\",\r\n            branch: null,\r\n            selectPermissionGroup: null,\r\n            selectedBranch: null,\r\n            selectedPermissionGroup: null,\r\n            image: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            editImage: null,\r\n            uploading: false,\r\n          });\r\n          setAdminStaffList(res.data[0]);\r\n          setAdminStaffListforSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"User has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setAdminStaff({\r\n            ...newAdminStaff,\r\n            branch: null,\r\n            selectPermissionGroup: null,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.password) {\r\n              error.response.data.errors.password.forEach((item) => {\r\n                if (item === \"The password confirmation does not match.\") {\r\n                  toast.error(\r\n                    `${_t(t(\"Password confirmation does not match\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n                if (item === \"The password must be at least 6 characters.\") {\r\n                  toast.error(\r\n                    `${_t(t(\"The password must be at least 6 characters\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"An user exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"An user exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  //search admin staff here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedAdminStaff({ ...searchedAdminStaff, searched: false });\r\n    } else {\r\n      let searchedList = adminStaffForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemPhnNo = item.phn_no.toLowerCase();\r\n        let lowerCaseItemType = item.user_type.toLowerCase();\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemPhnNo.includes(searchInput) ||\r\n          lowerCaseItemType.includes(searchInput) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedAdminStaff({\r\n        ...searchedAdminStaff,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //disable confirmation modal of adminStaff\r\n  const handleDisableConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body bg-danger text-white\">\r\n            <h1 className=\"text-white\">{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">\r\n              {_t(t(\"You want to disable this user?\"))}\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-warning text-dark\"\r\n                onClick={() => {\r\n                  handleDisableUser(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, please!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //disable adminStaff here\r\n  const handleDisableUser = (slug) => {\r\n    setLoading(true);\r\n    const adminStaffUrl = BASE_URL + `/settings/delete-admin-staff/${slug}`;\r\n    return axios\r\n      .get(adminStaffUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setAdminStaffList(res.data[0]);\r\n        setAdminStaffListforSearch(res.data[1]);\r\n        setSearchedAdminStaff({\r\n          ...searchedAdminStaff,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"User has been disabled\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //active confirmation modal of adminStaff\r\n  const handleActiveConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body bg-success\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">\r\n              {_t(t(\"You want to active this user?\"))}\r\n            </p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-warning text-dark\"\r\n                onClick={() => {\r\n                  handleActiveUser(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, please!\"))}\r\n              </button>\r\n              <button className=\"btn btn-primary ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //Active adminStaff here\r\n  const handleActiveUser = (slug) => {\r\n    setLoading(true);\r\n    const adminStaffUrl = BASE_URL + `/settings/delete-admin-staff/${slug}`;\r\n    return axios\r\n      .get(adminStaffUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"noBranch\") {\r\n          setLoading(false);\r\n          toast.error(\r\n            `${_t(\r\n              t(\r\n                \"The branch of this user not found, can not change active status\"\r\n              )\r\n            )}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        } else {\r\n          setAdminStaffList(res.data[0]);\r\n          setAdminStaffListforSearch(res.data[1]);\r\n          setSearchedAdminStaff({\r\n            ...searchedAdminStaff,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"User has been activated\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Users\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addWaiter\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-xl\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newAdminStaff.edit\r\n                    ? _t(t(\"Add new admin / staff\"))\r\n                    : _t(t(\"Update admin / staff\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newAdminStaff.uploading === false ? (\r\n                <div key=\"fragment-permission-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newAdminStaff.edit\r\n                        ? handleSaveNewAdminStaff\r\n                        : handleUpdateAdminStaff\r\n                    }\r\n                  >\r\n                    {newAdminStaff.user_type === \"superAdmin\" ? (\r\n                      <div>\r\n                        <label htmlFor=\"user_type\" className=\"form-label\">\r\n                          {_t(t(\"User type\"))}{\" \"}\r\n                          <small className=\"text-primary\">*</small>\r\n                        </label>\r\n                        <select\r\n                          name=\"user_type\"\r\n                          className=\"form-control\"\r\n                          onChange={handleSetNewAdminStaff}\r\n                          value={newAdminStaff.user_type}\r\n                          disabled\r\n                        >\r\n                          <option value=\"superAdmin\" className=\"text-uppercase\">\r\n                            {_t(t(\"Super Admin\"))}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <label htmlFor=\"user_type\" className=\"form-label\">\r\n                          {_t(t(\"User type\"))}{\" \"}\r\n                          <small className=\"text-primary\">*</small>\r\n                        </label>\r\n                        <select\r\n                          name=\"user_type\"\r\n                          className=\"form-control\"\r\n                          onChange={handleSetNewAdminStaff}\r\n                          required\r\n                          value={newAdminStaff.user_type}\r\n                        >\r\n                          <option value=\"\">\r\n                            {_t(t(\"Please select an user type\"))}\r\n                          </option>\r\n                          <option value=\"admin\" className=\"text-uppercase\">\r\n                            {_t(t(\"Admin\"))}\r\n                          </option>\r\n                          <option value=\"staff\" className=\"text-uppercase\">\r\n                            {_t(t(\"Staff\"))}\r\n                          </option>\r\n                        </select>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Mr. John\"\r\n                        value={newAdminStaff.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewAdminStaff}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"email\" className=\"form-label\">\r\n                        {_t(t(\"Email\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"e.g. staff@example.com\"\r\n                        value={newAdminStaff.email || \"\"}\r\n                        required\r\n                        onChange={handleSetNewAdminStaff}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newAdminStaff.phn_no || \"\"}\r\n                        onChange={handleSetNewAdminStaff}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"password\" className=\"form-label\">\r\n                        {_t(t(\"Password\"))}{\" \"}\r\n                        {!newAdminStaff.edit && (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"e.g. Password\"\r\n                        value={newAdminStaff.password || \"\"}\r\n                        required={!newAdminStaff.edit}\r\n                        onChange={handleSetNewAdminStaff}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label\r\n                        htmlFor=\"password_confirmation\"\r\n                        className=\"form-label\"\r\n                      >\r\n                        {_t(t(\"Confirm Password\"))}{\" \"}\r\n                        {!newAdminStaff.edit && (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password_confirmation\"\r\n                        name=\"password_confirmation\"\r\n                        placeholder=\"e.g. Confirm password\"\r\n                        value={newAdminStaff.password_confirmation || \"\"}\r\n                        required={newAdminStaff.password !== \"\"}\r\n                        onChange={handleSetNewAdminStaff}\r\n                      />\r\n                    </div>\r\n\r\n                    {newAdminStaff.user_type === \"staff\" && (\r\n                      <div className=\"mt-3\">\r\n                        <label className=\"form-label mb-0\">\r\n                          {_t(t(\"Select a branch\"))}{\" \"}\r\n                          {newAdminStaff.edit ? (\r\n                            <small className=\"text-primary\">\r\n                              {\"( \"}\r\n                              {_t(\r\n                                t(\r\n                                  \"Leave empty if you do not want to change branch\"\r\n                                )\r\n                              )}\r\n                              {\" )\"}\r\n                            </small>\r\n                          ) : (\r\n                            <small className=\"text-primary\">*</small>\r\n                          )}\r\n                        </label>\r\n                        {newAdminStaff.edit &&\r\n                          newAdminStaff.selectedBranch !== null && (\r\n                            <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                              <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                                {newAdminStaff.selectedBranch.name}\r\n                              </li>\r\n                            </ul>\r\n                          )}\r\n                        <Select\r\n                          options={branchForSearch}\r\n                          components={makeAnimated()}\r\n                          getOptionLabel={(option) => option.name}\r\n                          getOptionValue={(option) => option.name}\r\n                          className=\"basic-multi-select\"\r\n                          classNamePrefix=\"select\"\r\n                          onChange={handleSetBranch}\r\n                          placeholder={_t(t(\"Please select a branch\"))}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {newAdminStaff.user_type !== \"superAdmin\" && (\r\n                      <div className=\"mt-3\">\r\n                        <label className=\"form-label mb-0\">\r\n                          {_t(t(\"Select a permission group\"))}{\" \"}\r\n                          {newAdminStaff.edit ? (\r\n                            <small className=\"text-primary\">\r\n                              {\"( \"}\r\n                              {_t(\r\n                                t(\r\n                                  \"Leave empty if you do not want to change permission group\"\r\n                                )\r\n                              )}\r\n                              {\" )\"}\r\n                            </small>\r\n                          ) : (\r\n                            <small className=\"text-primary\">*</small>\r\n                          )}\r\n                        </label>\r\n                        {newAdminStaff.edit &&\r\n                          newAdminStaff.selectedPermissionGroup !== null && (\r\n                            <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                              <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                                {newAdminStaff.selectedPermissionGroup.name}\r\n                              </li>\r\n                            </ul>\r\n                          )}\r\n                        <Select\r\n                          options={permissionGroupForSearch}\r\n                          components={makeAnimated()}\r\n                          getOptionLabel={(option) => option.name}\r\n                          getOptionValue={(option) => option.name}\r\n                          className=\"basic-multi-select\"\r\n                          classNamePrefix=\"select\"\r\n                          onChange={handleSetPermissionGroup}\r\n                          placeholder={_t(t(\"Please select a group\"))}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"mt-3\">\r\n                      <div className=\"d-flex align-items-center mb-1\">\r\n                        <label htmlFor=\"image\" className=\"form-label mb-0 mr-3\">\r\n                          {_t(t(\"Image\"))}{\" \"}\r\n                          <small className=\"text-secondary\">\r\n                            ({_t(t(\"300 x 300 Preferable\"))})\r\n                          </small>\r\n                        </label>\r\n                        {newAdminStaff.edit && (\r\n                          <div\r\n                            className=\"fk-language__flag\"\r\n                            style={{\r\n                              backgroundImage: `url(${newAdminStaff.editImage})`,\r\n                            }}\r\n                          ></div>\r\n                        )}\r\n                      </div>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        onChange={handleAdminStaffImage}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newAdminStaff.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newAdminStaff.edit\r\n                            ? _t(t(\"Save\"))\r\n                            : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* view modal */}\r\n      <div className=\"modal fade\" id=\"viewUser\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {newAdminStaff.name}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              <table className=\"table table-striped table-sm text-center mt-3\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"text-capitalized\">{_t(t(\"User type\"))}</td>\r\n                    <td>{newAdminStaff.user_type}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-capitalized\">{_t(t(\"Name\"))}</td>\r\n                    <td>{newAdminStaff.name}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-capitalized\">{_t(t(\"Email\"))}</td>\r\n                    <td>{newAdminStaff.email}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"text-capitalized\">\r\n                      {_t(t(\"Phone number\"))}\r\n                    </td>\r\n                    <td>{newAdminStaff.phn_no}</td>\r\n                  </tr>\r\n                  {newAdminStaff.user_type !== \"superAdmin\" &&\r\n                    newAdminStaff.selectedPermissionGroup !== null && (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">\r\n                          {_t(t(\"Permission group\"))}\r\n                        </td>\r\n                        <td>{newAdminStaff.selectedPermissionGroup.name}</td>\r\n                      </tr>\r\n                    )}\r\n\r\n                  {newAdminStaff.user_type === \"staff\" &&\r\n                    newAdminStaff.selectedBranch !== null && (\r\n                      <tr>\r\n                        <td className=\"text-capitalized\">{_t(t(\"Branch\"))}</td>\r\n                        <td>{newAdminStaff.selectedBranch.name}</td>\r\n                      </tr>\r\n                    )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* view modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newAdminStaff.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedAdminStaff.searched\r\n                                    ? _t(t(\"User List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addWaiter\"\r\n                                  onClick={() => {\r\n                                    setAdminStaff({\r\n                                      ...newAdminStaff,\r\n                                      branch: null,\r\n                                      user_type: \"\",\r\n                                      selectPermissionGroup: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-right text-primary xsm-text\">\r\n                          {_t(\r\n                            t(\r\n                              \"Users marked red are disabled, they can not login\"\r\n                            )\r\n                          )}\r\n                          *\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Image\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Phn no\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Branch\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"user type\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedAdminStaff.searched\r\n                                ? [\r\n                                    adminStaffList && [\r\n                                      adminStaffList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        adminStaffList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className={`align-middle ${\r\n                                                  item.is_banned &&\r\n                                                  \"text-primary\"\r\n                                                }`}\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (adminStaffList.current_page -\r\n                                                      1) *\r\n                                                      adminStaffList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text\">\r\n                                                  <div\r\n                                                    className=\"table-img-large mx-auto\"\r\n                                                    style={{\r\n                                                      backgroundImage: `url(${\r\n                                                        item.image !== null\r\n                                                          ? item.image\r\n                                                          : \"/khadyo/assets/img/admin.png\"\r\n                                                      })`,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.user_type || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setAdminStaff({\r\n                                                            ...newAdminStaff,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#viewUser\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-eye\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"View\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setAdminStaff({\r\n                                                            ...newAdminStaff,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addWaiter\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      {item.user_type !==\r\n                                                        \"superAdmin\" && [\r\n                                                        !item.is_banned ? (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              handleDisableConfirmation(\r\n                                                                item.slug\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-times\"></i>\r\n                                                            </span>\r\n                                                            {_t(t(\"Disable\"))}\r\n                                                          </button>\r\n                                                        ) : (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              handleActiveConfirmation(\r\n                                                                item.slug\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-check\"></i>\r\n                                                            </span>\r\n                                                            {_t(t(\"Active\"))}\r\n                                                          </button>\r\n                                                        ),\r\n                                                      ]}\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedAdminStaff && [\r\n                                      searchedAdminStaff.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"7\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedAdminStaff.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className={`align-middle ${\r\n                                                  item.is_banned &&\r\n                                                  \"text-primary\"\r\n                                                }`}\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (adminStaffList.current_page -\r\n                                                      1) *\r\n                                                      adminStaffList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text\">\r\n                                                  <div\r\n                                                    className=\"table-img-large mx-auto\"\r\n                                                    style={{\r\n                                                      backgroundImage: `url(${\r\n                                                        item.image !== null\r\n                                                          ? item.image\r\n                                                          : \"/khadyo/assets/img/admin.png\"\r\n                                                      })`,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.user_type || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setAdminStaff({\r\n                                                            ...newAdminStaff,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addWaiter\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      {item.user_type !==\r\n                                                        \"superAdmin\" && [\r\n                                                        !item.is_banned ? (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              handleDisableConfirmation(\r\n                                                                item.slug\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-times\"></i>\r\n                                                            </span>\r\n                                                            {_t(t(\"Disable\"))}\r\n                                                          </button>\r\n                                                        ) : (\r\n                                                          <button\r\n                                                            className=\"dropdown-item sm-text text-capitalize\"\r\n                                                            onClick={() => {\r\n                                                              handleActiveConfirmation(\r\n                                                                item.slug\r\n                                                              );\r\n                                                            }}\r\n                                                          >\r\n                                                            <span className=\"t-mr-8\">\r\n                                                              <i className=\"fa fa-check\"></i>\r\n                                                            </span>\r\n                                                            {_t(t(\"Active\"))}\r\n                                                          </button>\r\n                                                        ),\r\n                                                      ]}\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newAdminStaff.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedAdminStaff.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                adminStaffList,\r\n                                setPaginatedAdminStaff\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(adminStaffList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedAdminStaff({\r\n                                      ...searchedAdminStaff,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedAdminStaff,\r\n                                    adminStaffForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminStaffCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst BranchCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //branch\r\n    branchList,\r\n    setBranchList,\r\n    setPaginatedBranch,\r\n    branchForSearch,\r\n    setBranchforSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newBranch, setNewBranch] = useState({\r\n    name: \"\",\r\n    phn_no: \"\",\r\n    address: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedBranch, setSearchedBranch] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no, address hook\r\n  const handleSetNewBranch = (e) => {\r\n    setNewBranch({ ...newBranch, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New branch\r\n  const handleSaveNewBranch = (e) => {\r\n    e.preventDefault();\r\n    setNewBranch({\r\n      ...newBranch,\r\n      uploading: true,\r\n    });\r\n    const branchUrl = BASE_URL + `/settings/new-branch`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newBranch.name);\r\n    formData.append(\"phn_no\", newBranch.phn_no);\r\n    formData.append(\"address\", newBranch.address);\r\n    return axios\r\n      .post(branchUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewBranch({\r\n          name: \"\",\r\n          phn_no: \"\",\r\n          address: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setBranchList(res.data[0]);\r\n        setBranchforSearch(res.data[1]);\r\n        setSearchedBranch({\r\n          ...searchedBranch,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Branch has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewBranch({\r\n          ...newBranch,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let branch = branchForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewBranch({\r\n      ...newBranch,\r\n      name: branch[0].name,\r\n      phn_no: branch[0].phn_no,\r\n      address: branch[0].address,\r\n      editSlug: branch[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update branch\r\n  const handleUpdateBranch = (e) => {\r\n    e.preventDefault();\r\n    setNewBranch({\r\n      ...newBranch,\r\n      uploading: true,\r\n    });\r\n    const branchUrl = BASE_URL + `/settings/update-branch`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newBranch.name);\r\n    formData.append(\"phn_no\", newBranch.phn_no);\r\n    formData.append(\"address\", newBranch.address);\r\n    formData.append(\"editSlug\", newBranch.editSlug);\r\n    return axios\r\n      .post(branchUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewBranch({\r\n          name: \"\",\r\n          phn_no: \"\",\r\n          address: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setBranchList(res.data[0]);\r\n        setBranchforSearch(res.data[1]);\r\n        setSearchedBranch({\r\n          ...searchedBranch,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Branch has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewBranch({\r\n          ...newBranch,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search branch here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedBranch({ ...searchedBranch, searched: false });\r\n    } else {\r\n      let searchedList = branchForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemPhnNo =\r\n          item.phn_no !== null && item.phn_no.toLowerCase();\r\n        let lowerCaseItemAddress =\r\n          item.address !== null && item.address.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemPhnNo && lowerCaseItemPhnNo.includes(searchInput)) ||\r\n          (lowerCaseItemAddress && lowerCaseItemAddress.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedBranch({\r\n        ...searchedBranch,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of branch\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteBranch(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete branch here\r\n  const handleDeleteBranch = (slug) => {\r\n    setLoading(true);\r\n    const branchUrl = BASE_URL + `/settings/delete-branch/${slug}`;\r\n    return axios\r\n      .get(branchUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"user\") {\r\n          setLoading(false);\r\n          toast.error(\r\n            `${_t(t(\"Please disable all the user of this branch first\"))}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        } else {\r\n          setBranchList(res.data[0]);\r\n          setBranchforSearch(res.data[1]);\r\n          setSearchedBranch({\r\n            ...searchedBranch,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Branch has been deleted successfully\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Branches\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addBranch\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newBranch.edit\r\n                    ? _t(t(\"Add new branch\"))\r\n                    : _t(t(\"Update branch\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newBranch.uploading === false ? (\r\n                <div key=\"fragment-branch-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newBranch.edit ? handleSaveNewBranch : handleUpdateBranch\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Uttara Branch\"\r\n                        value={newBranch.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewBranch}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newBranch.phn_no || \"\"}\r\n                        onChange={handleSetNewBranch}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"address\" className=\"form-label\">\r\n                        {_t(t(\"Address\"))}\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        placeholder=\"Type branch address\"\r\n                        value={newBranch.address || \"\"}\r\n                        onChange={handleSetNewBranch}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newBranch.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newBranch.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newBranch.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedBranch.searched\r\n                                    ? _t(t(\"Branch List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addBranch\"\r\n                                  onClick={() => {\r\n                                    setNewBranch({\r\n                                      ...newBranch,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Address\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Phn no\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedBranch.searched\r\n                                ? [\r\n                                    branchList && [\r\n                                      branchList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        branchList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (branchList.current_page -\r\n                                                    1) *\r\n                                                    branchList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.address || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.phn_no ? (\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                ) : (\r\n                                                  \"-\"\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() =>\r\n                                                        handleSetEdit(item.slug)\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addBranch\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedBranch && [\r\n                                      searchedBranch.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedBranch.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (branchList.current_page -\r\n                                                      1) *\r\n                                                      branchList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.address || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.phn_no ? (\r\n                                                    <a\r\n                                                      href={`tel:${item.phn_no}`}\r\n                                                      rel=\"noopener noreferrer\"\r\n                                                    >\r\n                                                      {item.phn_no}\r\n                                                    </a>\r\n                                                  ) : (\r\n                                                    \"-\"\r\n                                                  )}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addBranch\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newBranch.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedBranch.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(branchList, setPaginatedBranch)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(branchList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedBranch({\r\n                                      ...searchedBranch,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedBranch,\r\n                                    branchForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst TableCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //branch\r\n    branchForSearch,\r\n\r\n    //tables\r\n    tableList,\r\n    setTableList,\r\n    setPaginatedTable,\r\n    setTableforSearch,\r\n    tableForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newTable, setNewTable] = useState({\r\n    name: \"\",\r\n    capacity: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedTable, setSearchedTable] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, capacity hook\r\n  const handleSetNewTable = (e) => {\r\n    setNewTable({ ...newTable, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewTable({ ...newTable, branch });\r\n  };\r\n\r\n  //Save New table\r\n  const handleSaveNewTable = (e) => {\r\n    e.preventDefault();\r\n    if (newTable.branch !== null) {\r\n      setNewTable({\r\n        ...newTable,\r\n        uploading: true,\r\n      });\r\n      const branchUrl = BASE_URL + `/settings/new-table`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newTable.name);\r\n      formData.append(\"capacity\", newTable.capacity);\r\n      formData.append(\"branch_id\", newTable.branch.id);\r\n      return axios\r\n        .post(branchUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewTable({\r\n            name: \"\",\r\n            capacity: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setTableList(res.data[0]);\r\n          setTableforSearch(res.data[1]);\r\n          setSearchedTable({\r\n            ...searchedTable,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Table has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewTable({\r\n            ...newTable,\r\n            uploading: false,\r\n          });\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let table = tableForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    let selectedOptionForBranch = null;\r\n    if (table[0].branch_id) {\r\n      selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n        return branchItem.id === table[0].branch_id;\r\n      });\r\n    }\r\n    setNewTable({\r\n      ...newTable,\r\n      name: table[0].name,\r\n      capacity: table[0].capacity,\r\n      selectedBranch: selectedOptionForBranch[0] || null,\r\n      editSlug: table[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update table\r\n  const handleUpdateTable = (e) => {\r\n    e.preventDefault();\r\n    setNewTable({\r\n      ...newTable,\r\n      uploading: true,\r\n    });\r\n    const branchUrl = BASE_URL + `/settings/update-table`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newTable.name);\r\n    formData.append(\"capacity\", newTable.capacity);\r\n\r\n    if (newTable.branch !== null) {\r\n      formData.append(\"branch_id\", newTable.branch.id);\r\n    }\r\n    formData.append(\"editSlug\", newTable.editSlug);\r\n    return axios\r\n      .post(branchUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewTable({\r\n          name: \"\",\r\n          capacity: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setSearchedTable({\r\n          ...searchedTable,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Table has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewTable({\r\n          ...newTable,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search table here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedTable({ ...searchedTable, searched: false });\r\n    } else {\r\n      let searchedList = tableForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemCapacity =\r\n          item.capacity !== null && item.capacity.toLowerCase();\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemCapacity &&\r\n            lowerCaseItemCapacity.includes(searchInput)) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedTable({\r\n        ...searchedTable,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of table\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteTable(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete table here\r\n  const handleDeleteTable = (slug) => {\r\n    setLoading(true);\r\n    const branchUrl = BASE_URL + `/settings/delete-table/${slug}`;\r\n    return axios\r\n      .get(branchUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setSearchedTable({\r\n          ...searchedTable,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Table has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Tables\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addTable\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newTable.edit\r\n                    ? _t(t(\"Add new table\"))\r\n                    : _t(t(\"Update table\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newTable.uploading === false ? (\r\n                <div key=\"fragment-table-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newTable.edit ? handleSaveNewTable : handleUpdateTable\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Table 01\"\r\n                        value={newTable.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewTable}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label className=\"form-label mb-0\">\r\n                        {_t(t(\"Select a branch\"))}{\" \"}\r\n                        {newTable.edit ? (\r\n                          <small className=\"text-primary\">\r\n                            {\"( \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Leave empty if you do not want to change branch\"\r\n                              )\r\n                            )}\r\n                            {\" )\"}\r\n                          </small>\r\n                        ) : (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      {newTable.edit && newTable.selectedBranch !== null && (\r\n                        <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                          <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                            {newTable.selectedBranch.name}\r\n                          </li>\r\n                        </ul>\r\n                      )}\r\n                      <Select\r\n                        options={branchForSearch}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                        onChange={handleSetBranch}\r\n                        placeholder={_t(t(\"Please select a branch\"))}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"capacity\" className=\"form-label\">\r\n                        {_t(t(\"Guest capacity\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"capacity\"\r\n                        name=\"capacity\"\r\n                        placeholder=\"e.g. 05\"\r\n                        min=\"1\"\r\n                        value={newTable.capacity || \"\"}\r\n                        onChange={handleSetNewTable}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newTable.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedTable.searched\r\n                                    ? _t(t(\"Table List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addTable\"\r\n                                  onClick={() => {\r\n                                    setNewTable({\r\n                                      ...newTable,\r\n                                      branch: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Capacity\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Branch\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedTable.searched\r\n                                ? [\r\n                                    tableList && [\r\n                                      tableList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        tableList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (tableList.current_page - 1) *\r\n                                                    tableList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.capacity || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewTable({\r\n                                                          ...newTable,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addTable\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedTable && [\r\n                                      searchedTable.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedTable.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (tableList.current_page -\r\n                                                      1) *\r\n                                                      tableList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.capacity || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setNewTable({\r\n                                                            ...newTable,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addTable\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newTable.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedTable.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(tableList, setPaginatedTable)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(tableList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedTable({\r\n                                      ...searchedTable,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedTable,\r\n                                    tableForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst DeptTagCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //dept-tag\r\n    getDeptTag,\r\n    deptTagList,\r\n    setDeptTagList,\r\n    setPaginatedDeptTag,\r\n    deptTagForSearch,\r\n    setDeptTagForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new dept-tag\r\n  let [newDeptTag, setNewDeptTag] = useState({\r\n    name: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedDeptTag, setSearchedDeptTag] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name hook\r\n  const handleSetNewDeptTag = (e) => {\r\n    setNewDeptTag({ ...newDeptTag, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New paymentType\r\n  const handleSaveNewDeptTag = (e) => {\r\n    e.preventDefault();\r\n    setNewDeptTag({\r\n      ...newDeptTag,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/new-dept-tag`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newDeptTag.name);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewDeptTag({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setDeptTagList(res.data[0]);\r\n        setDeptTagForSearch(res.data[1]);\r\n        setSearchedDeptTag({\r\n          ...searchedDeptTag,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Department tag has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewDeptTag({\r\n          ...newDeptTag,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A department tag already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A department tag already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let paymentType = deptTagForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewDeptTag({\r\n      ...newDeptTag,\r\n      name: paymentType[0].name,\r\n      input_key: paymentType[0].input_key,\r\n      editSlug: paymentType[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update food group\r\n  const handleUpdateDeptTag = (e) => {\r\n    e.preventDefault();\r\n    setNewDeptTag({\r\n      ...newDeptTag,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/update-dept-tag`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newDeptTag.name);\r\n    formData.append(\"editSlug\", newDeptTag.editSlug);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewDeptTag({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setDeptTagList(res.data[0]);\r\n        setDeptTagForSearch(res.data[1]);\r\n        setSearchedDeptTag({\r\n          ...searchedDeptTag,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Department tag has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewDeptTag({\r\n          ...newDeptTag,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A department tag already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A department tag already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search food group here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedDeptTag({ ...searchedDeptTag, searched: false });\r\n    } else {\r\n      let searchedList = deptTagForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedDeptTag({\r\n        ...searchedDeptTag,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of paymentType\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteDeptTag(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete paymentType here\r\n  const handleDeleteDeptTag = (slug) => {\r\n    setLoading(true);\r\n    const foodGroupUrl = BASE_URL + `/settings/delete-dept-tag/${slug}`;\r\n    return axios\r\n      .get(foodGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setDeptTagList(res.data[0]);\r\n        setDeptTagForSearch(res.data[1]);\r\n        setSearchedDeptTag({\r\n          ...searchedDeptTag,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(\r\n          `${_t(t(\"Department tag has been deleted successfully\"))}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Department Tags\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addPaymentType\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newDeptTag.edit\r\n                    ? _t(t(\"Add new department tag\"))\r\n                    : _t(t(\"Update department tag\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newDeptTag.uploading === false ? (\r\n                <div key=\"fragment-dept-tag-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newDeptTag.edit\r\n                        ? handleSaveNewDeptTag\r\n                        : handleUpdateDeptTag\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Dyne in, Take away, Online order\"\r\n                        value={newDeptTag.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewDeptTag}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newDeptTag.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newDeptTag.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newDeptTag.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedDeptTag.searched\r\n                                    ? _t(t(\"Department Tag List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addPaymentType\"\r\n                                  onClick={() => {\r\n                                    setNewDeptTag({\r\n                                      ...newDeptTag,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedDeptTag.searched\r\n                                ? [\r\n                                    deptTagList && [\r\n                                      deptTagList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        deptTagList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (deptTagList.current_page -\r\n                                                    1) *\r\n                                                    deptTagList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() =>\r\n                                                        handleSetEdit(item.slug)\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addPaymentType\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedDeptTag && [\r\n                                      searchedDeptTag.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedDeptTag.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (deptTagList.current_page -\r\n                                                      1) *\r\n                                                      deptTagList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newDeptTag.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedDeptTag.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(deptTagList, setPaginatedDeptTag)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(deptTagList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedDeptTag({\r\n                                      ...searchedDeptTag,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedDeptTag,\r\n                                    deptTagForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptTagCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst PaymentTypeCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //paymentType\r\n    paymentTypeList,\r\n    setPaymentTypeList,\r\n    setPaginatedPaymentType,\r\n    paymentTypeForSearch,\r\n    setPaymentTypeforSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newPaymentType, setNewPaymentType] = useState({\r\n    name: \"\",\r\n    input_key: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedPaymentType, setSearchedPaymentType] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, input key hook\r\n  const handleSetNewPaymentType = (e) => {\r\n    setNewPaymentType({ ...newPaymentType, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New paymentType\r\n  const handleSaveNewPaymentType = (e) => {\r\n    e.preventDefault();\r\n    setNewPaymentType({\r\n      ...newPaymentType,\r\n      uploading: true,\r\n    });\r\n    const paymentTypeUrl = BASE_URL + `/settings/new-payment-type`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPaymentType.name);\r\n    formData.append(\"input_key\", newPaymentType.input_key);\r\n    return axios\r\n      .post(paymentTypeUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"A payment type already exists with this key\") {\r\n          setNewPaymentType({\r\n            name: \"\",\r\n            input_key: \"\",\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setPaymentTypeList(res.data[0]);\r\n          setPaymentTypeforSearch(res.data[1]);\r\n          setSearchedPaymentType({\r\n            ...searchedPaymentType,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Payment type has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        } else {\r\n          setLoading(false);\r\n          setNewPaymentType({\r\n            ...newPaymentType,\r\n            uploading: false,\r\n          });\r\n          toast.error(\r\n            `${_t(t(\"A payment type already exists with this key\"))}`,\r\n            {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            }\r\n          );\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewPaymentType({\r\n          ...newPaymentType,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let paymentType = paymentTypeForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewPaymentType({\r\n      ...newPaymentType,\r\n      name: paymentType[0].name,\r\n      input_key: paymentType[0].input_key,\r\n      editSlug: paymentType[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update payment Type\r\n  const handleUpdatePaymentType = (e) => {\r\n    e.preventDefault();\r\n    setNewPaymentType({\r\n      ...newPaymentType,\r\n      uploading: true,\r\n    });\r\n    const paymentTypeUrl = BASE_URL + `/settings/update-payment-type`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newPaymentType.name);\r\n    formData.append(\"editSlug\", newPaymentType.editSlug);\r\n    return axios\r\n      .post(paymentTypeUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewPaymentType({\r\n          name: \"\",\r\n          input_key: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setPaymentTypeList(res.data[0]);\r\n        setPaymentTypeforSearch(res.data[1]);\r\n        setSearchedPaymentType({\r\n          ...searchedPaymentType,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Payment type has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewPaymentType({\r\n          ...newPaymentType,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search payment Type here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedPaymentType({ ...searchedPaymentType, searched: false });\r\n    } else {\r\n      let searchedList = paymentTypeForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemInputKey = item.input_key.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemInputKey.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedPaymentType({\r\n        ...searchedPaymentType,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of paymentType\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeletePaymentType(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete paymentType here\r\n  const handleDeletePaymentType = (slug) => {\r\n    setLoading(true);\r\n    const paymentTypeUrl = BASE_URL + `/settings/delete-payment-type/${slug}`;\r\n    return axios\r\n      .get(paymentTypeUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setPaymentTypeList(res.data[0]);\r\n        setPaymentTypeforSearch(res.data[1]);\r\n        setSearchedPaymentType({\r\n          ...searchedPaymentType,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(\r\n          `${_t(t(\"Payment type has been deleted successfully\"))}`,\r\n          {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          }\r\n        );\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Payment Types\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addPaymentType\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newPaymentType.edit\r\n                    ? _t(t(\"Add new payment type\"))\r\n                    : _t(t(\"Update payment type\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newPaymentType.uploading === false ? (\r\n                <div key=\"fragment-payment-type-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newPaymentType.edit\r\n                        ? handleSaveNewPaymentType\r\n                        : handleUpdatePaymentType\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Cash\"\r\n                        value={newPaymentType.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewPaymentType}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"input_key\" className=\"form-label\">\r\n                        {_t(t(\"Unique Key\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"input_key\"\r\n                        name=\"input_key\"\r\n                        placeholder=\"e.g. 'cash-payment' for 'Cash'\"\r\n                        value={newPaymentType.input_key || \"\"}\r\n                        required={!newPaymentType.edit}\r\n                        onChange={handleSetNewPaymentType}\r\n                        disabled={newPaymentType.edit}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newPaymentType.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newPaymentType.edit\r\n                            ? _t(t(\"Save\"))\r\n                            : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newPaymentType.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedPaymentType.searched\r\n                                    ? _t(t(\"Payment Type List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addPaymentType\"\r\n                                  onClick={() => {\r\n                                    setNewPaymentType({\r\n                                      ...newPaymentType,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Unique Key\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedPaymentType.searched\r\n                                ? [\r\n                                    paymentTypeList && [\r\n                                      paymentTypeList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        paymentTypeList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (paymentTypeList.current_page -\r\n                                                      1) *\r\n                                                      paymentTypeList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.input_key}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedPaymentType && [\r\n                                      searchedPaymentType.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedPaymentType.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (paymentTypeList.current_page -\r\n                                                      1) *\r\n                                                      paymentTypeList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.input_key}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newPaymentType.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedPaymentType.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(\r\n                                paymentTypeList,\r\n                                setPaginatedPaymentType\r\n                              )}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(paymentTypeList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedPaymentType({\r\n                                      ...searchedPaymentType,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedPaymentType,\r\n                                    paymentTypeForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeCrud;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, Link, withRouter, useHistory } from \"react-router-dom\";\r\n\r\n//base url\r\nimport { BASE_URL } from \"../../BaseUrl\";\r\n\r\n//pages, functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  deleteCookie,\r\n  getSystemSettings,\r\n} from \"../../functions/Functions\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\nimport { UserContext } from \"../../contexts/User\";\r\nimport { FoodContext } from \"../../contexts/Food\";\r\n\r\n//3rd party packages\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Navbar = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let { navLanguageList, navCurrencyList, generalSettings } = useContext(\r\n    SettingsContext\r\n  );\r\n  let { authUserInfo } = useContext(UserContext);\r\n  let {\r\n    setLoading,\r\n    //food\r\n    foodForSearch,\r\n    //food group\r\n    foodGroupForSearch,\r\n    //property group\r\n    propertyGroupForSearch,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook  here\r\n  const [defaultLang, setDefaultLang] = useState(null);\r\n  const [defaultCurrency, setDefaultCurrency] = useState(null);\r\n\r\n  useEffect(() => {\r\n    handleOnLoadDefaultLang();\r\n    handleOnLoadDefaultCurrency();\r\n  }, [navLanguageList, navCurrencyList]);\r\n\r\n  //set default language on site load\r\n  const handleOnLoadDefaultLang = () => {\r\n    let localLang = localStorage.i18nextLng;\r\n    if (localLang) {\r\n      if (localLang === undefined || localLang.includes(\"en-\")) {\r\n        navLanguageList &&\r\n          navLanguageList.map((item) => {\r\n            if (item.is_default === true) {\r\n              i18n.changeLanguage(item.code);\r\n              setDefaultLang(item);\r\n            }\r\n            return true;\r\n          });\r\n      } else {\r\n        const temp =\r\n          navLanguageList &&\r\n          navLanguageList.find((item) => {\r\n            return item.code === localLang;\r\n          });\r\n        setDefaultLang(temp);\r\n        i18n.changeLanguage(localLang);\r\n      }\r\n    }\r\n  };\r\n\r\n  //change language to selected\r\n  const handleDefaultLang = (lang) => {\r\n    i18n.changeLanguage(lang.code);\r\n    setDefaultLang(lang);\r\n    toast.success(`${_t(t(\"Language has been switched!\"))}`, {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      className: \"text-center toast-notification\",\r\n    });\r\n  };\r\n\r\n  //set default currency on site load\r\n  const handleOnLoadDefaultCurrency = () => {\r\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n    if (localCurrency === null) {\r\n      navCurrencyList &&\r\n        navCurrencyList.map((item) => {\r\n          if (item.is_default === true) {\r\n            setDefaultCurrency(item);\r\n            localStorage.setItem(\"currency\", JSON.stringify(item));\r\n          }\r\n          return true;\r\n        });\r\n    } else {\r\n      const temp =\r\n        navCurrencyList &&\r\n        navCurrencyList.find((item) => {\r\n          return item.code === localCurrency.code;\r\n        });\r\n      setDefaultCurrency(temp);\r\n    }\r\n  };\r\n\r\n  //change currency to selected\r\n  const handleDefaultCurrency = (item) => {\r\n    setLoading(true);\r\n    localStorage.setItem(\"currency\", JSON.stringify(item));\r\n    setDefaultCurrency(item);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n    toast.success(`${_t(t(\"Currency has been changed!\"))}`, {\r\n      position: \"bottom-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      className: \"text-center toast-notification\",\r\n    });\r\n  };\r\n\r\n  //logout\r\n  const handleLogout = () => {\r\n    deleteCookie();\r\n  };\r\n\r\n  //dynamic style\r\n  const style = {\r\n    logo: {\r\n      backgroundColor:\r\n        generalSettings &&\r\n        getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n    currency: {\r\n      backgroundColor:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_clock\"),\r\n      color:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_color\"),\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      {props.location.pathname !== \"/login\" &&\r\n      props.location.pathname !== \"/login/\" &&\r\n      props.location.pathname !== \"/installation\" &&\r\n      props.location.pathname !== \"/installation/\" &&\r\n      props.location.pathname !== \"/installation/permission-chcek\" &&\r\n      props.location.pathname !== \"/installation/permission-chcek/\" &&\r\n      props.location.pathname !== \"/installation/database-setup\" &&\r\n      props.location.pathname !== \"/installation/database-setup/\" &&\r\n      props.location.pathname !== \"/installation/import-database\" &&\r\n      props.location.pathname !== \"/installation/import-database/\" &&\r\n      props.location.pathname !== \"/installation/add-admin-user\" &&\r\n      props.location.pathname !== \"/installation/add-admin-user/\" &&\r\n      props.location.pathname !== \"/installation/congratulation\" &&\r\n      props.location.pathname !== \"/installation/congratulation/\" &&\r\n      props.location.pathname !== \"/dashboard/pos\" &&\r\n      props.location.pathname !== \"/dashboard/pos/\" &&\r\n      props.location.pathname !== \"/reset-password\" &&\r\n      props.location.pathname !== \"/reset-password/\" &&\r\n      props.location.pathname !== \"/khadyo/login\" &&\r\n      props.location.pathname !== \"/khadyo/login/\" &&\r\n      props.location.pathname !== \"/khadyo/installation\" &&\r\n      props.location.pathname !== \"/khadyo/installation/\" &&\r\n      props.location.pathname !== \"/khadyo/installation/permission-chcek\" &&\r\n      props.location.pathname !== \"/khadyo/installation/permission-chcek/\" &&\r\n      props.location.pathname !== \"/khadyo/installation/database-setup\" &&\r\n      props.location.pathname !== \"/khadyo/installation/database-setup/\" &&\r\n      props.location.pathname !== \"/khadyo/installation/import-database\" &&\r\n      props.location.pathname !== \"/khadyo/installation/import-database/\" &&\r\n      props.location.pathname !== \"/khadyo/installation/add-admin-user\" &&\r\n      props.location.pathname !== \"/khadyo/installation/add-admin-user/\" &&\r\n      props.location.pathname !== \"/khadyo/installation/congratulation\" &&\r\n      props.location.pathname !== \"/khadyo/installation/congratulation/\" &&\r\n      props.location.pathname !== \"/khadyo/khadyo/dashboard/pos\" &&\r\n      props.location.pathname !== \"/khadyo/khadyo/dashboard/pos/\" &&\r\n      props.location.pathname !== \"/khadyo/khadyo/reset-password\" &&\r\n      props.location.pathname !== \"/khadyo/khadyo/reset-password/\" &&\r\n      !props.location.pathname.includes(\"/set-new-password\") ? (\r\n        <header id=\"header\" className=\"sticky-top\">\r\n          <div\r\n            className={`${\r\n              props.location.pathname.includes(\"/dashboard/kitchen\") ||\r\n              props.location.pathname.includes(\"/dashboard/orders\")\r\n                ? \"container-fluid\"\r\n                : \"container\"\r\n            }`}\r\n          >\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-6 col-lg-2\">\r\n                <div className=\"fk-brand fk-brand--sr-lg\">\r\n                  {getCookie() !== undefined\r\n                    ? [\r\n                        window.location.pathname === \"/dashboard\" ? (\r\n                          <NavLink\r\n                            to={{ pathname: \"/refresh\", state: \"/dashboard\" }}\r\n                            exact\r\n                            className=\"t-link w-100\"\r\n                            key=\"logokey\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand__img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ) : (\r\n                          <NavLink\r\n                            to=\"/dashboard\"\r\n                            exact\r\n                            className=\"t-link w-100\"\r\n                            key=\"logokey\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand__img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ),\r\n                      ]\r\n                    : [\r\n                        window.location.pathname === \"/\" ? (\r\n                          <NavLink\r\n                            to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                            exact\r\n                            className=\"t-link w-100\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand__img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ) : (\r\n                          <NavLink to=\"/\" exact className=\"t-link w-100\">\r\n                            <span\r\n                              className=\"fk-brand__img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ),\r\n                      ]}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-6 col-lg-7 col-xl-6 col-xxl-5 ml-lg-auto\">\r\n                <div className=\"fk-phn-nav text-right d-lg-none\">\r\n                  <span className=\"fk-phn-nav__icon xlg-text\">\r\n                    <i className=\"fa fa-bars\"></i>\r\n                  </span>\r\n                </div>\r\n                <div className=\"fk-phn-nav__menu\">\r\n                  <ul className=\"t-list config-list d-flex flex-column flex-md-row align-items-md-center flex-wrap justify-content-md-center justify-content-lg-between justify-content-xl-end\">\r\n                    <li className=\"config-list__item\">\r\n                      <div className=\"fk-language d-flex align-items-center\">\r\n                        <div\r\n                          className=\"fk-language__flag\"\r\n                          style={{\r\n                            backgroundImage: `${\r\n                              defaultLang && `url(${defaultLang.image})`\r\n                            }`,\r\n                          }}\r\n                        ></div>\r\n                        <div className=\"dropdown\">\r\n                          <a\r\n                            className=\"text-capitalize sm-text nav-link dropdown-toggle pl-2\"\r\n                            href=\"#\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            {defaultLang ? defaultLang.name : \"Language\"}\r\n                          </a>\r\n                          <ul className=\"dropdown-menu\">\r\n                            {navLanguageList &&\r\n                              navLanguageList.map((item, index) => {\r\n                                return (\r\n                                  <li key={index}>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className={`dropdown-item sm-text text-capitalize ${\r\n                                        defaultLang &&\r\n                                        item.code === defaultLang.code\r\n                                          ? \"active\"\r\n                                          : \"\"\r\n                                      }`}\r\n                                      onClick={() => handleDefaultLang(item)}\r\n                                    >\r\n                                      {item.name}\r\n                                    </button>\r\n                                  </li>\r\n                                );\r\n                              })}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"config-list__item\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div\r\n                          className=\"circle circle--sm rounded-circle border\"\r\n                          style={style.currency}\r\n                        >\r\n                          {defaultCurrency ? defaultCurrency.symbol : \"$\"}\r\n                        </div>\r\n                        <div className=\"dropdown\">\r\n                          <a\r\n                            className=\"sm-text nav-link dropdown-toggle pl-2\"\r\n                            href=\"#\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                          >\r\n                            {defaultCurrency\r\n                              ? defaultCurrency.code\r\n                              : \"Currency\"}\r\n                          </a>\r\n                          <ul className=\"dropdown-menu\">\r\n                            {navCurrencyList &&\r\n                              navCurrencyList.map((item, index) => {\r\n                                return (\r\n                                  <li key={index}>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className={`dropdown-item sm-text text-capitalize ${\r\n                                        defaultCurrency &&\r\n                                        item.code === defaultCurrency.code\r\n                                          ? \"active\"\r\n                                          : \"\"\r\n                                      }`}\r\n                                      onClick={() =>\r\n                                        handleDefaultCurrency(item)\r\n                                      }\r\n                                    >\r\n                                      {item.name}\r\n                                    </button>\r\n                                  </li>\r\n                                );\r\n                              })}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    {getCookie() === undefined ||\r\n                    (props.location.state &&\r\n                      props.location.state === \"loggedOut\") ? (\r\n                      <li>\r\n                        <NavLink\r\n                          className=\"sm-text text-capitalize btn btn-primary\"\r\n                          to=\"/login\"\r\n                        >\r\n                          {_t(t(\"Login\"))}\r\n                        </NavLink>\r\n                      </li>\r\n                    ) : (\r\n                      <li className=\"config-list__item\">\r\n                        <div className=\"d-flex align-items-center \">\r\n                          <div className=\"circle circle--sm rounded-circle avatar\">\r\n                            <img\r\n                              src={\r\n                                authUserInfo.details !== null &&\r\n                                authUserInfo.details.image !== null\r\n                                  ? [BASE_URL + authUserInfo.details.image]\r\n                                  : \"/khadyo/assets/img/user.jpg\"\r\n                              }\r\n                              alt=\"\"\r\n                              className=\"img-fluid avatar__img\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"dropdown\">\r\n                            <a\r\n                              className=\"font-weight-bold text-capitalize sm-text nav-link dropdown-toggle pl-2\"\r\n                              href=\"#\"\r\n                              data-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"\r\n                            >\r\n                              {authUserInfo.details !== null &&\r\n                                authUserInfo.details.name}\r\n                            </a>\r\n                            <ul className=\"dropdown-menu dropdown-menu-right\">\r\n                              {window.location.pathname === \"/\" ? (\r\n                                <li>\r\n                                  <Link\r\n                                    to=\"/dashboard\"\r\n                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                  >\r\n                                    {_t(t(\"Dashboard\"))}\r\n                                  </Link>\r\n                                </li>\r\n                              ) : (\r\n                                <li key=\"homepage\">\r\n                                  <Link\r\n                                    to=\"/dashboard\"\r\n                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                  >\r\n                                    {_t(t(\"Dashboard\"))}\r\n                                  </Link>\r\n                                </li>\r\n                              )}\r\n\r\n                              <li key=\"homepage\">\r\n                                <Link\r\n                                  to=\"/update-user-profile\"\r\n                                  className=\"dropdown-item sm-text\"\r\n                                >\r\n                                  {_t(t(\"Change password\"))}\r\n                                </Link>\r\n                              </li>\r\n                              <hr className=\"my-1\" />\r\n                              <li>\r\n                                <button\r\n                                  className=\"dropdown-item sm-text text-capitalize\"\r\n                                  onClick={handleLogout}\r\n                                >\r\n                                  {_t(t(\"Logout\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      ) : (\r\n        [\r\n          props.location.pathname.includes(\"/dashboard/pos\") && (\r\n            <header id=\"header\" className=\"sticky-top\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row align-items-center\">\r\n                  <div className=\"col-6 col-lg-2\">\r\n                    <div className=\"fk-brand fk-brand--sr-lg\">\r\n                      {getCookie() !== undefined\r\n                        ? [\r\n                            window.location.pathname === \"/dashboard\" ? (\r\n                              <NavLink\r\n                                to={{\r\n                                  pathname: \"/refresh\",\r\n                                  state: \"/dashboard\",\r\n                                }}\r\n                                exact\r\n                                className=\"t-link w-100\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand__img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ) : (\r\n                              <NavLink\r\n                                to=\"/dashboard\"\r\n                                exact\r\n                                className=\"t-link w-100\"\r\n                                key=\"logokey\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand__img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ),\r\n                          ]\r\n                        : [\r\n                            window.location.pathname === \"/\" ? (\r\n                              <NavLink\r\n                                to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                                exact\r\n                                className=\"t-link w-100\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand__img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ) : (\r\n                              <NavLink to=\"/\" exact className=\"t-link w-100\">\r\n                                <span\r\n                                  className=\"fk-brand__img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ),\r\n                          ]}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-6 col-lg-7 col-xl-6 col-xxl-5 ml-lg-auto\">\r\n                    <div className=\"fk-phn-nav text-right d-lg-none\">\r\n                      <span className=\"fk-phn-nav__icon xlg-text\">\r\n                        <i className=\"fa fa-bars\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"fk-phn-nav__menu\">\r\n                      <ul className=\"t-list config-list d-flex flex-column flex-md-row align-items-md-center flex-wrap justify-content-md-center justify-content-lg-between justify-content-xl-end\">\r\n                        <li className=\"config-list__item\">\r\n                          <div className=\"fk-language d-flex align-items-center\">\r\n                            <div\r\n                              className=\"fk-language__flag\"\r\n                              style={{\r\n                                backgroundImage: `${\r\n                                  defaultLang && `url(${defaultLang.image})`\r\n                                }`,\r\n                              }}\r\n                            ></div>\r\n                            <div className=\"dropdown\">\r\n                              <a\r\n                                className=\"text-capitalize sm-text nav-link dropdown-toggle pl-2\"\r\n                                href=\"#\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                {defaultLang ? defaultLang.name : \"Language\"}\r\n                              </a>\r\n                              <ul className=\"dropdown-menu\">\r\n                                {navLanguageList &&\r\n                                  navLanguageList.map((item, index) => {\r\n                                    return (\r\n                                      <li key={index}>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className={`dropdown-item sm-text text-capitalize ${\r\n                                            defaultLang &&\r\n                                            item.code === defaultLang.code\r\n                                              ? \"active\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          onClick={() =>\r\n                                            handleDefaultLang(item)\r\n                                          }\r\n                                        >\r\n                                          {item.name}\r\n                                        </button>\r\n                                      </li>\r\n                                    );\r\n                                  })}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        <li className=\"config-list__item\">\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <div\r\n                              className=\"circle circle--sm rounded-circle border\"\r\n                              style={style.currency}\r\n                            >\r\n                              {defaultCurrency ? defaultCurrency.symbol : \"$\"}\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                              <a\r\n                                className=\"sm-text nav-link dropdown-toggle pl-2\"\r\n                                href=\"#\"\r\n                                data-toggle=\"dropdown\"\r\n                                aria-expanded=\"false\"\r\n                              >\r\n                                {defaultCurrency\r\n                                  ? defaultCurrency.code\r\n                                  : \"Currency\"}\r\n                              </a>\r\n                              <ul className=\"dropdown-menu\">\r\n                                {navCurrencyList &&\r\n                                  navCurrencyList.map((item, index) => {\r\n                                    return (\r\n                                      <li key={index}>\r\n                                        <button\r\n                                          type=\"button\"\r\n                                          className={`dropdown-item sm-text text-capitalize ${\r\n                                            defaultCurrency &&\r\n                                            item.code === defaultCurrency.code\r\n                                              ? \"active\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                          onClick={() =>\r\n                                            handleDefaultCurrency(item)\r\n                                          }\r\n                                        >\r\n                                          {item.name}\r\n                                        </button>\r\n                                      </li>\r\n                                    );\r\n                                  })}\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                        {getCookie() === undefined ||\r\n                        (props.location.state &&\r\n                          props.location.state === \"loggedOut\") ? (\r\n                          <li>\r\n                            <NavLink\r\n                              className=\"sm-text text-capitalize btn btn-primary\"\r\n                              to=\"/login\"\r\n                            >\r\n                              {_t(t(\"Login\"))}\r\n                            </NavLink>\r\n                          </li>\r\n                        ) : (\r\n                          <li className=\"config-list__item\">\r\n                            <div className=\"d-flex align-items-center \">\r\n                              <div className=\"circle circle--sm rounded-circle avatar\">\r\n                                <img\r\n                                  src={\r\n                                    authUserInfo.details !== null &&\r\n                                    authUserInfo.details.image !== null\r\n                                      ? [BASE_URL + authUserInfo.details.image]\r\n                                      : \"/khadyo/assets/img/user.jpg\"\r\n                                  }\r\n                                  alt=\"\"\r\n                                  className=\"img-fluid avatar__img\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"dropdown\">\r\n                                <a\r\n                                  className=\"font-weight-bold text-capitalize sm-text nav-link dropdown-toggle pl-2\"\r\n                                  href=\"#\"\r\n                                  data-toggle=\"dropdown\"\r\n                                  aria-expanded=\"false\"\r\n                                >\r\n                                  {authUserInfo.details !== null &&\r\n                                    authUserInfo.details.name}\r\n                                </a>\r\n                                <ul className=\"dropdown-menu dropdown-menu-right\">\r\n                                  {window.location.pathname === \"/\" ? (\r\n                                    <li>\r\n                                      <Link\r\n                                        to=\"/dashboard\"\r\n                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                      >\r\n                                        {_t(t(\"Dashboard\"))}\r\n                                      </Link>\r\n                                    </li>\r\n                                  ) : (\r\n                                    <li key=\"homepage\">\r\n                                      <Link\r\n                                        to=\"/dashboard\"\r\n                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                      >\r\n                                        {_t(t(\"Dashboard\"))}\r\n                                      </Link>\r\n                                    </li>\r\n                                  )}\r\n                                  <li key=\"homepage\">\r\n                                    <Link\r\n                                      to=\"/update-user-profile\"\r\n                                      className=\"dropdown-item sm-text\"\r\n                                    >\r\n                                      {_t(t(\"Change password\"))}\r\n                                    </Link>\r\n                                  </li>\r\n                                  <hr className=\"my-1\" />\r\n                                  <li>\r\n                                    <button\r\n                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                      onClick={handleLogout}\r\n                                      rel=\"noopener noreferrer\"\r\n                                    >\r\n                                      {_t(t(\"Logout\"))}\r\n                                    </button>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"d-md-none\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                      <div className=\"fk-sm-nav\" data-simplebar>\r\n                        <ul className=\"t-list fk-sm-nav__bar\">\r\n                          {foodGroupForSearch &&\r\n                            foodGroupForSearch.map((groupItem, index) => {\r\n                              return (\r\n                                <li\r\n                                  className={`fk-sm-nav__list ${\r\n                                    index === 0 && \"active\"\r\n                                  }`}\r\n                                >\r\n                                  <a\r\n                                    href={`#card-${index + 1}`}\r\n                                    className=\"t-link fk-sm-nav__link\"\r\n                                    rel=\"noopener noreferer\"\r\n                                  >\r\n                                    {groupItem.name}\r\n                                  </a>\r\n                                </li>\r\n                              );\r\n                            })}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </header>\r\n          ),\r\n        ]\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\nimport { _t, getCookie, getSystemSettings } from \"../../functions/Functions\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../contexts/Settings\";\r\n\r\nconst Footer = () => {\r\n  //getting context values here\r\n  let { generalSettings } = useContext(SettingsContext);\r\n  var weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  var month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const style = {\r\n    logo: {\r\n      backgroundColor:\r\n        generalSettings &&\r\n        getSystemSettings(generalSettings, \"type_background\"),\r\n      backgroundImage:\r\n        generalSettings &&\r\n        `url(${getSystemSettings(generalSettings, \"type_logo\")})`,\r\n    },\r\n    clock: {\r\n      backgroundColor:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_clock\"),\r\n    },\r\n    clockText: {\r\n      color:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_color\"),\r\n    },\r\n    clockIcon: {\r\n      color:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_clock\"),\r\n      backgroundColor:\r\n        generalSettings && getSystemSettings(generalSettings, \"type_color\"),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {window.location.pathname !== \"/login\" &&\r\n      window.location.pathname !== \"/login/\" &&\r\n      window.location.pathname !== \"/installation\" &&\r\n      window.location.pathname !== \"/installation/\" &&\r\n      window.location.pathname !== \"/installation/permission-chcek\" &&\r\n      window.location.pathname !== \"/installation/permission-chcek/\" &&\r\n      window.location.pathname !== \"/installation/database-setup\" &&\r\n      window.location.pathname !== \"/installation/database-setup/\" &&\r\n      window.location.pathname !== \"/installation/import-database\" &&\r\n      window.location.pathname !== \"/installation/import-database/\" &&\r\n      window.location.pathname !== \"/installation/add-admin-user\" &&\r\n      window.location.pathname !== \"/installation/add-admin-user/\" &&\r\n      window.location.pathname !== \"/installation/congratulation\" &&\r\n      window.location.pathname !== \"/installation/congratulation/\" &&\r\n      window.location.pathname !== \"/dashboard/pos\" &&\r\n      window.location.pathname !== \"/dashboard/pos/\" &&\r\n      window.location.pathname !== \"/reset-password\" &&\r\n      window.location.pathname !== \"/reset-password/\" &&\r\n      window.location.pathname !== \"/khadyo/login\" &&\r\n      window.location.pathname !== \"/khadyo/login/\" &&\r\n      window.location.pathname !== \"/khadyo/dashboard/pos\" &&\r\n      window.location.pathname !== \"/khadyo/dashboard/pos/\" &&\r\n      window.location.pathname !== \"/khadyo/reset-password\" &&\r\n      window.location.pathname !== \"/khadyo/reset-password/\" &&\r\n      window.location.pathname !== \"/khadyo/installation\" &&\r\n      window.location.pathname !== \"/khadyo/installation/\" &&\r\n      window.location.pathname !== \"/khadyo/installation/permission-chcek\" &&\r\n      window.location.pathname !== \"/khadyo/installation/permission-chcek/\" &&\r\n      window.location.pathname !== \"/khadyo/installation/database-setup\" &&\r\n      window.location.pathname !== \"/khadyo/installation/database-setup/\" &&\r\n      window.location.pathname !== \"/khadyo/installation/import-database\" &&\r\n      window.location.pathname !== \"/khadyo/installation/import-database/\" &&\r\n      window.location.pathname !== \"/khadyo/installation/add-admin-user\" &&\r\n      window.location.pathname !== \"/khadyo/installation/add-admin-user/\" &&\r\n      window.location.pathname !== \"/khadyo/installation/congratulation\" &&\r\n      window.location.pathname !== \"/khadyo/installation/congratulation/\" &&\r\n      !window.location.pathname.includes(\"/set-new-password\") ? (\r\n        <footer id=\"footer\" className=\"sicky-bottom\">\r\n          <div\r\n            className={`${\r\n              window.location.pathname.includes(\"/dashboard/kitchen\") ||\r\n              window.location.pathname.includes(\"/dashboard/orders\")\r\n                ? \"container-fluid\"\r\n                : \"container\"\r\n            }`}\r\n          >\r\n            <div className=\"row align-items-lg-center\">\r\n              <div className=\"col-lg-2 t-mb-30 mb-lg-0\">\r\n                <div className=\"fk-brand--footer fk-brand--footer-sqr mx-auto mr-lg-auto ml-lg-0\">\r\n                  {getCookie() !== undefined\r\n                    ? [\r\n                        window.location.pathname === \"/dashboard\" ? (\r\n                          <NavLink\r\n                            to={{ pathname: \"/refresh\", state: \"/dashboard\" }}\r\n                            exact\r\n                            className=\"t-link w-100 t-h-50\"\r\n                            key=\"footerlogo\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ) : (\r\n                          <NavLink\r\n                            to=\"/dashboard\"\r\n                            className=\"t-link w-100 t-h-50\"\r\n                            key=\"footerlogo\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ),\r\n                      ]\r\n                    : [\r\n                        window.location.pathname === \"/\" ? (\r\n                          <NavLink\r\n                            to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                            exact\r\n                            className=\"t-link w-100 t-h-50\"\r\n                          >\r\n                            <span\r\n                              className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ) : (\r\n                          <NavLink to=\"/\" className=\"t-link w-100 t-h-50\">\r\n                            <span\r\n                              className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                              style={style.logo}\r\n                            ></span>\r\n                          </NavLink>\r\n                        ),\r\n                      ]}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 col-xl-7 t-mb-30 mb-lg-0\">\r\n                <p className=\"mb-0 text-center sm-text\">\r\n                  &copy;{\" \"}\r\n                  {generalSettings &&\r\n                    getSystemSettings(generalSettings, \"type_footer\")}\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-4 col-xl-3\">\r\n                <div className=\"clock\" style={style.clock}>\r\n                  <div className=\"clock__icon t-mr-30\" style={style.clockIcon}>\r\n                    <span\r\n                      className=\"fa fa-clock-o\"\r\n                      style={style.clockIcon}\r\n                    ></span>\r\n                  </div>\r\n                  <div className=\"clock__content\">\r\n                    <div\r\n                      id=\"MyClockDisplay\"\r\n                      className=\"clockDisply\"\r\n                      style={style.clockText}\r\n                      onLoad={() => {\r\n                        \"showTime()\";\r\n                      }}\r\n                    ></div>\r\n                    <p\r\n                      className=\"mb-0 font-10px font-weight-normal\"\r\n                      style={style.clockText}\r\n                    >\r\n                      {weekday[new Date().getDay()]}, {new Date().getDate()}{\" \"}\r\n                      {month[new Date().getMonth()]}, {new Date().getFullYear()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      ) : (\r\n        [\r\n          window.location.pathname.includes(\"/dashboard/pos\") && (\r\n            <footer id=\"footer\" className=\"sicky-bottom mb-5 mb-md-0\">\r\n              <div className=\"container-fluid\">\r\n                <div className=\"row align-items-lg-center\">\r\n                  <div className=\"col-lg-2 t-mb-30 mb-lg-0\">\r\n                    <div className=\"fk-brand--footer fk-brand--footer-sqr mx-auto mr-lg-auto ml-lg-0\">\r\n                      {getCookie() !== undefined\r\n                        ? [\r\n                            window.location.pathname === \"/dashboard\" ? (\r\n                              <NavLink\r\n                                to={{\r\n                                  pathname: \"/refresh\",\r\n                                  state: \"/dashboard\",\r\n                                }}\r\n                                exact\r\n                                className=\"t-link w-100 t-h-50\"\r\n                                key=\"footerlogo\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ) : (\r\n                              <NavLink\r\n                                to=\"/dashboard\"\r\n                                className=\"t-link w-100 t-h-50\"\r\n                                key=\"footerlogo\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ),\r\n                          ]\r\n                        : [\r\n                            window.location.pathname === \"/\" ? (\r\n                              <NavLink\r\n                                to={{ pathname: \"/refresh\", state: \"/\" }}\r\n                                exact\r\n                                className=\"t-link w-100 t-h-50\"\r\n                              >\r\n                                <span\r\n                                  className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ) : (\r\n                              <NavLink to=\"/\" className=\"t-link w-100 t-h-50\">\r\n                                <span\r\n                                  className=\"fk-brand--footer-img fk-brand__img--fk\"\r\n                                  style={style.logo}\r\n                                ></span>\r\n                              </NavLink>\r\n                            ),\r\n                          ]}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-xl-7 t-mb-30 mb-lg-0\">\r\n                    <p className=\"mb-0 text-center sm-text\">\r\n                      &copy;{\" \"}\r\n                      {generalSettings &&\r\n                        getSystemSettings(generalSettings, \"type_footer\")}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-xl-3\">\r\n                    <div className=\"clock\" style={style.clock}>\r\n                      <div\r\n                        className=\"clock__icon t-mr-30\"\r\n                        style={style.clockIcon}\r\n                      >\r\n                        <span\r\n                          className=\"fa fa-clock-o\"\r\n                          style={style.clockIcon}\r\n                        ></span>\r\n                      </div>\r\n                      <div className=\"clock__content\">\r\n                        <div\r\n                          id=\"MyClockDisplay\"\r\n                          className=\"clockDisply\"\r\n                          style={style.clockText}\r\n                          onLoad={() => {\r\n                            \"showTime()\";\r\n                          }}\r\n                        ></div>\r\n                        <p\r\n                          className=\"mb-0 font-10px font-weight-normal\"\r\n                          style={style.clockText}\r\n                        >\r\n                          {weekday[new Date().getDay()]}, {new Date().getDate()}{\" \"}\r\n                          {month[new Date().getMonth()]},{\" \"}\r\n                          {new Date().getFullYear()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </footer>\r\n          ),\r\n        ]\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Footer);\r\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//axios and base url\nimport axios from \"axios\";\nimport { BASE_URL } from \"./BaseUrl\";\n\n//routes\nimport RestaurantRoute from \"./routes/RestaurantRoute\";\n\n//functions\nimport {\n  consolee,\n  checkPermission,\n  getSystemSettings,\n} from \"./functions/Functions\";\n\n//3rd party packages\nimport { ToastContainer } from \"react-toastify\";\n\n//pages & includes\nimport {\n  //installation\n  Welcome,\n  InstallPermission,\n  DbSetup,\n  ImportDb,\n  InstallationUser,\n  InstallationCongratulation,\n  //landing\n  RestaurantLanding,\n\n  //common\n  Refresh,\n  Login,\n  NotFound,\n  ForgetPw,\n  SetNewPw,\n  NoPermission,\n\n  //dashboard\n  RestaurantHome,\n  UpdateProfile,\n  WorkPeriod,\n\n  //pos\n  Pos,\n  Submitted,\n  Settled,\n  //\n  OrderHistories,\n  Customers,\n  Kitchen,\n\n  //Reports\n  Dashboard,\n  Daily,\n  Monthly,\n  // Yearly,\n  ItemWise,\n  GroupWise,\n  BranchWise,\n  UserWise,\n  DeptWise,\n  ServiceChargeWise,\n  DiscountWise,\n\n  //manage->food\n  GroupCrud,\n  UnitCrud,\n  VariationCrud,\n  PropertyCrud,\n  PropertyItemCrud,\n  FoodItemCrud,\n  AllItemList,\n\n  //manage->settings\n  Currency,\n  Lang,\n  Translation,\n  Smtp,\n  General,\n\n  //manage->user\n  AdminStaffCrud,\n  Waiter,\n  Permissions,\n  CustomerCrud,\n\n  //manage->restaurantDetails\n  BranchCrud,\n  TableCrud,\n  DeptTagCrud,\n  PaymentTypeCrud,\n} from \"./imports/Pages\";\nimport { Navbar, Footer } from \"./imports/Components\";\n\n//context consumer\nimport { SettingsContext } from \"./contexts/Settings\";\nimport { UserContext } from \"./contexts/User\";\n\nfunction App() {\n  //getting context values here\n  const { loading, setLoading, generalSettings } = useContext(SettingsContext);\n  let { authUserInfo } = useContext(UserContext);\n\n  //state hooks here\n  const [credentials, setCredentials] = useState({\n    install_no: false,\n  });\n\n  //useEffect == componentDidMount()\n  useEffect(() => {\n    (async () => {\n      setLoading(false);\n      const url = BASE_URL + \"/check-install\";\n      return axios\n        .get(url)\n        .then((res) => {\n          if (res.data === \"NO\") {\n            setCredentials({\n              ...credentials,\n              install_no: true,\n            });\n          }\n        })\n        .catch((error) => {});\n    })();\n\n    if (generalSettings) {\n      const favicon = document.getElementById(\"favicon\");\n      favicon.href = BASE_URL + getSystemSettings(generalSettings, \"favicon\");\n    }\n    // consolee();\n  }, [authUserInfo]);\n  return (\n    <>\n      <ToastContainer />\n      {/* <Router basename=\"/khadyo\"> */}\n      {/* \"homepage\": \"http://localhost/khadyo\" */}\n      <Router>\n        <Navbar />\n        <Switch>\n          {/* installation */}\n          {credentials.install_no && (\n            <Route path=\"/installation\" exact>\n              <Welcome />\n            </Route>\n          )}\n\n          {credentials.install_no && (\n            <Route path=\"/installation/permission-chcek\" exact>\n              <InstallPermission />\n            </Route>\n          )}\n\n          {credentials.install_no && (\n            <Route path=\"/installation/database-setup\" exact>\n              <DbSetup />\n            </Route>\n          )}\n\n          {credentials.install_no && (\n            <Route path=\"/installation/import-database\" exact>\n              <ImportDb />\n            </Route>\n          )}\n\n          {credentials.install_no && (\n            <Route path=\"/installation/add-admin-user\" exact>\n              <InstallationUser />\n            </Route>\n          )}\n\n          {credentials.install_no && (\n            <Route path=\"/installation/congratulation\" exact>\n              <InstallationCongratulation />\n            </Route>\n          )}\n\n          {/* common */}\n          <Route path=\"/refresh\" exact>\n            <Refresh />\n          </Route>\n          <Route path=\"/login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/reset-password\" exact>\n            <ForgetPw />\n          </Route>\n\n          <Route path=\"/set-new-password/:token\" exact>\n            <SetNewPw />\n          </Route>\n\n          <Route path=\"/\" exact>\n            <RestaurantLanding />\n          </Route>\n\n          {/* restaurant dashboard pages */}\n          <RestaurantRoute path=\"/dashboard\" exact>\n            <RestaurantHome />\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/update-user-profile\" exact>\n            <UpdateProfile />\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/work-periods\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Work period\") ? (\n              <WorkPeriod />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/pos\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"POS\") ? (\n              <Pos />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/pos/submitted\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"POS\") ? (\n              <Submitted />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/pos/settled\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"POS\") ? (\n              <Settled />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/orders\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Order history\") ? (\n              <OrderHistories />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/customers\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Customer\") ? (\n              <Customers />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/kitchen\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Kitchen\") ? (\n              <Kitchen />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <Dashboard />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/daily-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <Daily />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/monthly-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <Monthly />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* <RestaurantRoute path=\"/dashboard/yearly-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <Yearly />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute> */}\n\n          <RestaurantRoute path=\"/dashboard/food-items-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <ItemWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/food-group-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <GroupWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/branch-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <BranchWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/pos-user-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <UserWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/dept-tag-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <DeptWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/service-charge-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <ServiceChargeWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/discount-reports\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Report\") ? (\n              <DiscountWise />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* Manage routes */}\n          {/* food */}\n          <RestaurantRoute path=\"/dashboard/manage/food/groups\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <GroupCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* <RestaurantRoute path=\"/dashboard/manage/food/units\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <UnitCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute> */}\n\n          <RestaurantRoute path=\"/dashboard/manage/food/variations\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <VariationCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/food/properties\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <PropertyCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/food/properties/:slug\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <PropertyItemCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/food/add-new\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <FoodItemCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/food/all-items\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <AllItemList />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* Users */}\n          <RestaurantRoute path=\"/dashboard/manage/user/customers\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <CustomerCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/user/admin-staff\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <AdminStaffCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/user/waiters\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Waiter />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/roles-and-permissions\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Permissions />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* Restaurant */}\n          <RestaurantRoute path=\"/dashboard/manage/restaurant/branches\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <BranchCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/restaurant/tables\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <TableCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/restaurant/dept-tags\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <DeptTagCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute\n            path=\"/dashboard/manage/restaurant/payment-type\"\n            exact\n          >\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <PaymentTypeCrud />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* Settings */}\n\n          <RestaurantRoute path=\"/dashboard/manage/settings/currencies\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Currency />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute path=\"/dashboard/manage/settings/languages\" exact>\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Lang />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute\n            path=\"/dashboard/manage/settings/languages/:code\"\n            exact\n          >\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Translation />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute\n            path=\"/dashboard/manage/settings/smtp-settings\"\n            exact\n          >\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <Smtp />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          <RestaurantRoute\n            path=\"/dashboard/manage/settings/general-settings\"\n            exact\n          >\n            {authUserInfo.permissions !== null &&\n            checkPermission(authUserInfo.permissions, \"Manage\") ? (\n              <General />\n            ) : (\n              <NoPermission />\n            )}\n          </RestaurantRoute>\n\n          {/* Error Routing */}\n          <Route component={NotFound} />\n          {/* Error Routing */}\n        </Switch>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n    // backend: {\r\n    //   // for all available options read the backend's repository readme file\r\n    //   loadPath: \"./locales/{{lng}}/{{ns}}.json\",\r\n    // },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport \"./i18next\";\n\n//importing context provider here\nimport { UserProvider } from \"./contexts/User\";\nimport { SettingsProvider } from \"./contexts/Settings\";\nimport { RestaurantProvider } from \"./contexts/Restaurant\";\nimport { FoodProvider } from \"./contexts/Food\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <SettingsProvider>\n        <RestaurantProvider>\n          <FoodProvider>\n            <App />\n          </FoodProvider>\n        </RestaurantProvider>\n      </SettingsProvider>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"khadyo\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}